{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ghost-admin/tests/acceptance/authentication-test.js","ghost-admin/tests/acceptance/content-test.js","ghost-admin/tests/acceptance/custom-post-templates-test.js","ghost-admin/tests/acceptance/editor-test.js","ghost-admin/tests/acceptance/error-handling-test.js","ghost-admin/tests/acceptance/ghost-desktop-test.js","ghost-admin/tests/acceptance/password-reset-test.js","ghost-admin/tests/acceptance/settings/amp-test.js","ghost-admin/tests/acceptance/settings/apps-test.js","ghost-admin/tests/acceptance/settings/code-injection-test.js","ghost-admin/tests/acceptance/settings/design-test.js","ghost-admin/tests/acceptance/settings/general-test.js","ghost-admin/tests/acceptance/settings/labs-test.js","ghost-admin/tests/acceptance/settings/slack-test.js","ghost-admin/tests/acceptance/settings/tags-test.js","ghost-admin/tests/acceptance/settings/unsplash-test.js","ghost-admin/tests/acceptance/setup-test.js","ghost-admin/tests/acceptance/signin-test.js","ghost-admin/tests/acceptance/signup-test.js","ghost-admin/tests/acceptance/subscribers-test.js","ghost-admin/tests/acceptance/team-test.js","ghost-admin/tests/app.lint-test.js","ghost-admin/tests/helpers/adapter-error.js","ghost-admin/tests/helpers/data-transfer.js","ghost-admin/tests/helpers/destroy-app.js","ghost-admin/tests/helpers/drag-drop.js","ghost-admin/tests/helpers/editor-helpers.js","ghost-admin/tests/helpers/ember-basic-dropdown.js","ghost-admin/tests/helpers/ember-drag-drop.js","ghost-admin/tests/helpers/ember-power-calendar.js","ghost-admin/tests/helpers/ember-power-datepicker.js","ghost-admin/tests/helpers/ember-power-select.js","ghost-admin/tests/helpers/ember-simple-auth.js","ghost-admin/tests/helpers/ember-test-selectors.js","ghost-admin/tests/helpers/file-upload.js","ghost-admin/tests/helpers/mock-event.js","ghost-admin/tests/helpers/resolver.js","ghost-admin/tests/helpers/start-app.js","ghost-admin/tests/integration/adapters/tag-test.js","ghost-admin/tests/integration/adapters/user-test.js","ghost-admin/tests/integration/components/gh-alert-test.js","ghost-admin/tests/integration/components/gh-alerts-test.js","ghost-admin/tests/integration/components/gh-basic-dropdown-test.js","ghost-admin/tests/integration/components/gh-cm-editor-test.js","ghost-admin/tests/integration/components/gh-date-time-picker-test.js","ghost-admin/tests/integration/components/gh-download-count-test.js","ghost-admin/tests/integration/components/gh-editor-post-status-test.js","ghost-admin/tests/integration/components/gh-feature-flag-test.js","ghost-admin/tests/integration/components/gh-file-uploader-test.js","ghost-admin/tests/integration/components/gh-image-uploader-test.js","ghost-admin/tests/integration/components/gh-image-uploader-with-preview-test.js","ghost-admin/tests/integration/components/gh-koenig-slashmenu-test.js","ghost-admin/tests/integration/components/gh-koenig-test.js","ghost-admin/tests/integration/components/gh-markdown-editor-test.js","ghost-admin/tests/integration/components/gh-navitem-test.js","ghost-admin/tests/integration/components/gh-navitem-url-input-test.js","ghost-admin/tests/integration/components/gh-notification-test.js","ghost-admin/tests/integration/components/gh-notifications-test.js","ghost-admin/tests/integration/components/gh-profile-image-test.js","ghost-admin/tests/integration/components/gh-progress-bar-test.js","ghost-admin/tests/integration/components/gh-psm-tags-input-test.js","ghost-admin/tests/integration/components/gh-psm-template-select-test.js","ghost-admin/tests/integration/components/gh-publishmenu-draft-test.js","ghost-admin/tests/integration/components/gh-publishmenu-published-test.js","ghost-admin/tests/integration/components/gh-publishmenu-scheduled-test.js","ghost-admin/tests/integration/components/gh-publishmenu-test.js","ghost-admin/tests/integration/components/gh-search-input-test.js","ghost-admin/tests/integration/components/gh-simplemde-test.js","ghost-admin/tests/integration/components/gh-subscribers-table-test.js","ghost-admin/tests/integration/components/gh-tag-settings-form-test.js","ghost-admin/tests/integration/components/gh-tags-management-container-test.js","ghost-admin/tests/integration/components/gh-task-button-test.js","ghost-admin/tests/integration/components/gh-theme-table-test.js","ghost-admin/tests/integration/components/gh-timezone-select-test.js","ghost-admin/tests/integration/components/gh-trim-focus-input-test.js","ghost-admin/tests/integration/components/gh-unsplash-photo-test.js","ghost-admin/tests/integration/components/gh-unsplash-test.js","ghost-admin/tests/integration/components/gh-uploader-test.js","ghost-admin/tests/integration/components/gh-validation-status-container-test.js","ghost-admin/tests/integration/components/modals/delete-subscriber-test.js","ghost-admin/tests/integration/components/modals/import-subscribers-test.js","ghost-admin/tests/integration/components/modals/new-subscriber-test.js","ghost-admin/tests/integration/components/modals/upload-theme-test.js","ghost-admin/tests/integration/components/transfer-owner-test.js","ghost-admin/tests/integration/services/ajax-test.js","ghost-admin/tests/integration/services/config-test.js","ghost-admin/tests/integration/services/feature-test.js","ghost-admin/tests/integration/services/lazy-loader-test.js","ghost-admin/tests/integration/services/slug-generator-test.js","ghost-admin/tests/integration/services/store-test.js","ghost-admin/tests/test-helper.js","ghost-admin/tests/tests.lint-test.js","ghost-admin/tests/unit/components/gh-alert-test.js","ghost-admin/tests/unit/components/gh-app-test.js","ghost-admin/tests/unit/components/gh-navitem-url-input-test.js","ghost-admin/tests/unit/components/gh-notification-test.js","ghost-admin/tests/unit/components/gh-post-settings-menu-test.js","ghost-admin/tests/unit/components/gh-url-preview-test.js","ghost-admin/tests/unit/components/gh-user-active-test.js","ghost-admin/tests/unit/components/gh-user-invited-test.js","ghost-admin/tests/unit/components/koenig-toolbar-button-test.js","ghost-admin/tests/unit/components/koenig-toolbar-newitem-test.js","ghost-admin/tests/unit/components/koenig-toolbar-test.js","ghost-admin/tests/unit/controllers/editor-test.js","ghost-admin/tests/unit/controllers/settings/design-test.js","ghost-admin/tests/unit/controllers/settings/general-test.js","ghost-admin/tests/unit/controllers/subscribers-test.js","ghost-admin/tests/unit/helpers/gh-count-characters-test.js","ghost-admin/tests/unit/helpers/gh-count-down-characters-test.js","ghost-admin/tests/unit/helpers/gh-format-post-time-test.js","ghost-admin/tests/unit/helpers/gh-user-can-admin-test.js","ghost-admin/tests/unit/helpers/highlighted-text-test.js","ghost-admin/tests/unit/helpers/is-equal-test.js","ghost-admin/tests/unit/helpers/is-not-test.js","ghost-admin/tests/unit/mixins/validation-engine-test.js","ghost-admin/tests/unit/models/invite-test.js","ghost-admin/tests/unit/models/navigation-item-test.js","ghost-admin/tests/unit/models/post-test.js","ghost-admin/tests/unit/models/role-test.js","ghost-admin/tests/unit/models/setting-test.js","ghost-admin/tests/unit/models/subscriber-test.js","ghost-admin/tests/unit/models/tag-test.js","ghost-admin/tests/unit/models/user-test.js","ghost-admin/tests/unit/routes/subscribers-test.js","ghost-admin/tests/unit/routes/subscribers/import-test.js","ghost-admin/tests/unit/routes/subscribers/new-test.js","ghost-admin/tests/unit/serializers/notification-test.js","ghost-admin/tests/unit/serializers/post-test.js","ghost-admin/tests/unit/serializers/role-test.js","ghost-admin/tests/unit/serializers/setting-test.js","ghost-admin/tests/unit/serializers/subscriber-test.js","ghost-admin/tests/unit/serializers/tag-test.js","ghost-admin/tests/unit/serializers/user-test.js","ghost-admin/tests/unit/services/config-test.js","ghost-admin/tests/unit/services/event-bus-test.js","ghost-admin/tests/unit/services/notifications-test.js","ghost-admin/tests/unit/services/ui-test.js","ghost-admin/tests/unit/services/unsplash-test.js","ghost-admin/tests/unit/services/upgrade-status-test.js","ghost-admin/tests/unit/transforms/facebook-url-user-test.js","ghost-admin/tests/unit/transforms/json-string-test.js","ghost-admin/tests/unit/transforms/navigation-settings-test.js","ghost-admin/tests/unit/transforms/slack-settings-test.js","ghost-admin/tests/unit/transforms/twitter-url-user-test.js","ghost-admin/tests/unit/transforms/unsplash-settings-test.js","ghost-admin/tests/unit/utils/ghost-paths-test.js","ghost-admin/tests/unit/validators/nav-item-test.js","ghost-admin/tests/unit/validators/slack-integration-test.js","ghost-admin/tests/unit/validators/subscriber-test.js","ghost-admin/tests/unit/validators/tag-settings-test.js","ghost-admin/tests/utils.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('ghost-admin/tests/acceptance/authentication-test', ['ghost-admin/authenticators/oauth2', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/utils/ghost-paths', 'ghost-admin/tests/helpers/start-app', 'ghost-admin/utils/window-proxy', 'ember-cli-mirage', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_oauth, _destroyApp, _ghostPaths, _startApp, _windowProxy, _emberCliMirage, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    var Ghost = (0, _ghostPaths.default)();\n\n    (0, _mocha.describe)('Acceptance: Authentication', function () {\n        var application = void 0,\n            originalReplaceLocation = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.describe)('setup redirect', function () {\n            (0, _mocha.beforeEach)(function () {\n                // ensure the /users/me route doesn't error\n                server.create('user');\n\n                server.get('authentication/setup', function () {\n                    return { setup: [{ status: false }] };\n                });\n            });\n\n            (0, _mocha.it)('redirects to setup when setup isn\\'t complete', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                _context.next = 2;\n                                return visit('settings/labs');\n\n                            case 2:\n\n                                (0, _chai.expect)(currentURL()).to.equal('/setup/one');\n\n                            case 3:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n        });\n\n        (0, _mocha.describe)('token handling', function () {\n            (0, _mocha.beforeEach)(function () {\n                // replace the default test authenticator with our own authenticator\n                application.register('authenticator:test', _oauth.default);\n\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role], slug: 'test-user' });\n            });\n\n            (0, _mocha.it)('refreshes tokens on boot if last refreshed > 24hrs ago', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var _application, container, _container$lookup, session, newSession, requests, refreshRequest, requestBody;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return (0, _emberSimpleAuth.authenticateSession)(application, {\n                                    access_token: 'access_token',\n                                    refresh_token: 'refresh_token'\n                                });\n\n                            case 2:\n\n                                // authenticating the session above will trigger a token refresh\n                                // request so we need to clear it to ensure we aren't testing the\n                                // test behaviour instead of application behaviour\n                                server.pretender.handledRequests = [];\n\n                                // fake a longer session so it appears that we last refreshed > 24hrs ago\n                                _application = application, container = _application.__container__;\n                                _container$lookup = container.lookup('service:session'), session = _container$lookup.session;\n                                newSession = session.get('content');\n\n                                newSession.authenticated.expires_in = 172800 * 2;\n                                session.get('store').persist(newSession);\n                                /* eslint-enable camelcase */\n\n                                _context2.next = 10;\n                                return visit('/');\n\n                            case 10:\n                                requests = server.pretender.handledRequests;\n                                refreshRequest = requests.findBy('url', '/ghost/api/v0.1/authentication/token');\n\n\n                                (0, _chai.expect)(refreshRequest, 'token refresh request').to.exist;\n                                (0, _chai.expect)(refreshRequest.method, 'method').to.equal('POST');\n\n                                requestBody = Ember.$.deparam(refreshRequest.requestBody);\n\n                                (0, _chai.expect)(requestBody.grant_type, 'grant_type').to.equal('refresh_token');\n                                (0, _chai.expect)(requestBody.refresh_token, 'refresh_token').to.equal('MirageRefreshToken');\n\n                            case 17:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n\n            (0, _mocha.it)('doesn\\'t refresh tokens on boot if last refreshed < 24hrs ago', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var requests, refreshRequest;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return (0, _emberSimpleAuth.authenticateSession)(application, {\n                                    access_token: 'access_token',\n                                    refresh_token: 'refresh_token'\n                                });\n\n                            case 2:\n                                /* eslint-enable camelcase */\n\n                                // authenticating the session above will trigger a token refresh\n                                // request so we need to clear it to ensure we aren't testing the\n                                // test behaviour instead of application behaviour\n                                server.pretender.handledRequests = [];\n\n                                // we've only just refreshed tokens above so we should always be < 24hrs\n                                _context3.next = 5;\n                                return visit('/');\n\n                            case 5:\n                                requests = server.pretender.handledRequests;\n                                refreshRequest = requests.findBy('url', '/ghost/api/v0.1/authentication/token');\n\n\n                                (0, _chai.expect)(refreshRequest, 'refresh request').to.not.exist;\n\n                            case 8:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n        });\n\n        (0, _mocha.describe)('general page', function () {\n            var newLocation = void 0;\n\n            (0, _mocha.beforeEach)(function () {\n                originalReplaceLocation = _windowProxy.default.replaceLocation;\n                _windowProxy.default.replaceLocation = function (url) {\n                    url = url.replace(/^\\/ghost\\//, '/');\n                    newLocation = url;\n                };\n                newLocation = undefined;\n\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role], slug: 'test-user' });\n            });\n\n            (0, _mocha.afterEach)(function () {\n                _windowProxy.default.replaceLocation = originalReplaceLocation;\n            });\n\n            (0, _mocha.it)('invalidates session on 401 API response', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                // return a 401 when attempting to retrieve users\n                                server.get('/users/', function () {\n                                    return new _emberCliMirage.Response(401, {}, {\n                                        errors: [{ message: 'Access denied.', errorType: 'UnauthorizedError' }]\n                                    });\n                                });\n\n                                _context4.next = 3;\n                                return (0, _emberSimpleAuth.authenticateSession)(application);\n\n                            case 3:\n                                _context4.next = 5;\n                                return visit('/team');\n\n                            case 5:\n                                if (!newLocation) {\n                                    _context4.next = 8;\n                                    break;\n                                }\n\n                                _context4.next = 8;\n                                return visit(newLocation);\n\n                            case 8:\n\n                                (0, _chai.expect)(currentURL(), 'url after 401').to.equal('/signin');\n\n                            case 9:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('doesn\\'t show navigation menu on invalid url when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                (0, _emberSimpleAuth.invalidateSession)(application);\n\n                                _context5.next = 3;\n                                return visit('/');\n\n                            case 3:\n\n                                (0, _chai.expect)(currentURL(), 'current url').to.equal('/signin');\n                                (0, _chai.expect)(find('nav.gh-nav').length, 'nav menu presence').to.equal(0);\n\n                                _context5.next = 7;\n                                return visit('/signin/invalidurl/');\n\n                            case 7:\n\n                                (0, _chai.expect)(currentURL(), 'url after invalid url').to.equal('/signin/invalidurl/');\n                                (0, _chai.expect)(currentPath(), 'path after invalid url').to.equal('error404');\n                                (0, _chai.expect)(find('nav.gh-nav').length, 'nav menu presence').to.equal(0);\n\n                            case 10:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('shows nav menu on invalid url when authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.next = 2;\n                                return (0, _emberSimpleAuth.authenticateSession)(application);\n\n                            case 2:\n                                _context6.next = 4;\n                                return visit('/signin/invalidurl/');\n\n                            case 4:\n\n                                (0, _chai.expect)(currentURL(), 'url after invalid url').to.equal('/signin/invalidurl/');\n                                (0, _chai.expect)(currentPath(), 'path after invalid url').to.equal('error404');\n                                (0, _chai.expect)(find('nav.gh-nav').length, 'nav menu presence').to.equal(1);\n\n                            case 7:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n        });\n\n        // TODO: re-enable once modal reappears correctly\n        _mocha.describe.skip('editor', function () {\n            var origDebounce = Ember.run.debounce;\n            var origThrottle = Ember.run.throttle;\n\n            // we don't want the autosave interfering in this test\n            (0, _mocha.beforeEach)(function () {\n                Ember.run.debounce = function () {};\n                Ember.run.throttle = function () {};\n            });\n\n            (0, _mocha.it)('displays re-auth modal attempting to save with invalid session', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var role;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                role = server.create('role', { name: 'Administrator' });\n\n                                server.create('user', { roles: [role] });\n\n                                // simulate an invalid session when saving the edited post\n                                server.put('/posts/:id/', function (_ref8, _ref9) {\n                                    var posts = _ref8.posts;\n                                    var params = _ref9.params;\n\n                                    var post = posts.find(params.id);\n                                    var attrs = this.normalizedRequestAttrs();\n\n                                    if (attrs.mobiledoc.cards[0][1].markdown === 'Edited post body') {\n                                        return new _emberCliMirage.Response(401, {}, {\n                                            errors: [{ message: 'Access denied.', errorType: 'UnauthorizedError' }]\n                                        });\n                                    } else {\n                                        return post.update(attrs);\n                                    }\n                                });\n\n                                _context7.next = 5;\n                                return (0, _emberSimpleAuth.authenticateSession)(application);\n\n                            case 5:\n                                _context7.next = 7;\n                                return visit('/editor');\n\n                            case 7:\n                                _context7.next = 9;\n                                return fillIn('#entry-title', 'Test Post');\n\n                            case 9:\n                                _context7.next = 11;\n                                return fillIn('.__mobiledoc-editor', 'Test post body');\n\n                            case 11:\n                                _context7.next = 13;\n                                return click('.js-publish-button');\n\n                            case 13:\n\n                                // we shouldn't have a modal at this point\n                                (0, _chai.expect)(find('.modal-container #login').length, 'modal exists').to.equal(0);\n                                // we also shouldn't have any alerts\n                                (0, _chai.expect)(find('.gh-alert').length, 'no of alerts').to.equal(0);\n\n                                // update the post\n                                _context7.next = 17;\n                                return fillIn('.__mobiledoc-editor', 'Edited post body');\n\n                            case 17:\n                                _context7.next = 19;\n                                return click('.js-publish-button');\n\n                            case 19:\n\n                                // we should see a re-auth modal\n                                (0, _chai.expect)(find('.fullscreen-modal #login').length, 'modal exists').to.equal(1);\n\n                            case 20:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            // don't clobber debounce/throttle for future tests\n            (0, _mocha.afterEach)(function () {\n                Ember.run.debounce = origDebounce;\n                Ember.run.throttle = origThrottle;\n            });\n        });\n\n        (0, _mocha.it)('adds auth headers to jquery ajax', function () {\n            var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(done) {\n                var role;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                role = server.create('role', { name: 'Administrator' });\n\n                                server.create('user', { roles: [role] });\n\n                                server.post('/uploads', function (schema, request) {\n                                    return request;\n                                });\n\n                                /* eslint-disable camelcase */\n                                (0, _emberSimpleAuth.authenticateSession)(application, {\n                                    access_token: 'test_token',\n                                    expires_in: 3600,\n                                    token_type: 'Bearer'\n                                });\n                                /* eslint-enable camelcase */\n\n                                // necessary to visit a page to fully boot the app in testing\n                                _context8.next = 6;\n                                return visit('/');\n\n                            case 6:\n                                _context8.next = 8;\n                                return Ember.$.ajax({\n                                    type: 'POST',\n                                    url: Ghost.apiRoot + '/uploads/',\n                                    data: { test: 'Test' }\n                                }).then(function (request) {\n                                    (0, _chai.expect)(request.requestHeaders.Authorization, 'Authorization header').to.exist;\n                                    (0, _chai.expect)(request.requestHeaders.Authorization, 'Authotization header content').to.equal('Bearer test_token');\n                                }).always(function () {\n                                    done();\n                                });\n\n                            case 8:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            }));\n\n            return function (_x) {\n                return _ref10.apply(this, arguments);\n            };\n        }());\n    });\n});","define('ghost-admin/tests/acceptance/content-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Content', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL()).to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.describe)('as admin', function () {\n            var admin = void 0,\n                editor = void 0,\n                publishedPost = void 0,\n                scheduledPost = void 0,\n                draftPost = void 0,\n                publishedPage = void 0,\n                authorPost = void 0;\n\n            (0, _mocha.beforeEach)(function () {\n                var adminRole = server.create('role', { name: 'Administrator' });\n                admin = server.create('user', { roles: [adminRole] });\n                var editorRole = server.create('role', { name: 'Editor' });\n                editor = server.create('user', { roles: [editorRole] });\n\n                publishedPost = server.create('post', { authorId: admin.id, status: 'published', title: 'Published Post' });\n                scheduledPost = server.create('post', { authorId: admin.id, status: 'scheduled', title: 'Scheduled Post' });\n                draftPost = server.create('post', { authorId: admin.id, status: 'draft', title: 'Draft Post' });\n                publishedPage = server.create('post', { authorId: admin.id, status: 'published', page: true, title: 'Published Page' });\n                authorPost = server.create('post', { authorId: editor.id, status: 'published', title: 'Editor Published Post' });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('displays and filters posts', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var _server$pretender$han, _server$pretender$han2, lastRequest, _server$pretender$han3, _server$pretender$han4, _server$pretender$han5, _server$pretender$han6, _server$pretender$han7, _server$pretender$han8, _server$pretender$han9, _server$pretender$han10, _server$pretender$han11, _server$pretender$han12;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return visit('/');\n\n                            case 2:\n\n                                // Not checking request here as it won't be the last request made\n                                // Displays all posts + pages\n                                (0, _chai.expect)(find('[data-test-post-id]').length, 'all posts count').to.equal(5);\n\n                                // show draft posts\n                                _context2.next = 5;\n                                return selectChoose('[data-test-type-select]', 'Draft posts');\n\n                            case 5:\n\n                                // API request is correct\n                                _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), lastRequest = _server$pretender$han2[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.status, '\"drafts\" request status param').to.equal('draft');\n                                (0, _chai.expect)(lastRequest.queryParams.staticPages, '\"drafts\" request staticPages param').to.equal('false');\n                                // Displays draft post\n                                (0, _chai.expect)(find('[data-test-post-id]').length, 'drafts count').to.equal(1);\n                                (0, _chai.expect)(find('[data-test-post-id=\"' + draftPost.id + '\"]'), 'draft post').to.exist;\n\n                                // show published posts\n                                _context2.next = 12;\n                                return selectChoose('[data-test-type-select]', 'Published posts');\n\n                            case 12:\n                                _server$pretender$han3 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han4 = _slicedToArray(_server$pretender$han3, 1);\n                                lastRequest = _server$pretender$han4[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.status, '\"published\" request status param').to.equal('published');\n                                (0, _chai.expect)(lastRequest.queryParams.staticPages, '\"published\" request staticPages param').to.equal('false');\n                                // Displays three published posts + pages\n                                (0, _chai.expect)(find('[data-test-post-id]').length, 'published count').to.equal(2);\n                                (0, _chai.expect)(find('[data-test-post-id=\"' + publishedPost.id + '\"]'), 'admin published post').to.exist;\n                                (0, _chai.expect)(find('[data-test-post-id=\"' + authorPost.id + '\"]'), 'author published post').to.exist;\n\n                                // show scheduled posts\n                                _context2.next = 22;\n                                return selectChoose('[data-test-type-select]', 'Scheduled posts');\n\n                            case 22:\n                                _server$pretender$han5 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han6 = _slicedToArray(_server$pretender$han5, 1);\n                                lastRequest = _server$pretender$han6[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.status, '\"scheduled\" request status param').to.equal('scheduled');\n                                (0, _chai.expect)(lastRequest.queryParams.staticPages, '\"scheduled\" request staticPages param').to.equal('false');\n                                // Displays scheduled post\n                                (0, _chai.expect)(find('[data-test-post-id]').length, 'scheduled count').to.equal(1);\n                                (0, _chai.expect)(find('[data-test-post-id=\"' + scheduledPost.id + '\"]'), 'scheduled post').to.exist;\n\n                                // show pages\n                                _context2.next = 31;\n                                return selectChoose('[data-test-type-select]', 'Pages');\n\n                            case 31:\n                                _server$pretender$han7 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han8 = _slicedToArray(_server$pretender$han7, 1);\n                                lastRequest = _server$pretender$han8[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.status, '\"pages\" request status param').to.equal('all');\n                                (0, _chai.expect)(lastRequest.queryParams.staticPages, '\"pages\" request staticPages param').to.equal('true');\n                                // Displays page\n                                (0, _chai.expect)(find('[data-test-post-id]').length, 'pages count').to.equal(1);\n                                (0, _chai.expect)(find('[data-test-post-id=\"' + publishedPage.id + '\"]'), 'page post').to.exist;\n\n                                // show all posts\n                                _context2.next = 40;\n                                return selectChoose('[data-test-type-select]', 'All posts');\n\n                            case 40:\n                                _server$pretender$han9 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han10 = _slicedToArray(_server$pretender$han9, 1);\n                                lastRequest = _server$pretender$han10[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.status, '\"all\" request status param').to.equal('all');\n                                (0, _chai.expect)(lastRequest.queryParams.staticPages, '\"all\" request staticPages param').to.equal('all');\n\n                                // show all posts by editor\n                                _context2.next = 47;\n                                return selectChoose('[data-test-author-select]', editor.name);\n\n                            case 47:\n                                _server$pretender$han11 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han12 = _slicedToArray(_server$pretender$han11, 1);\n                                lastRequest = _server$pretender$han12[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.status, '\"all\" request status param').to.equal('all');\n                                (0, _chai.expect)(lastRequest.queryParams.staticPages, '\"all\" request staticPages param').to.equal('all');\n                                (0, _chai.expect)(lastRequest.queryParams.filter, '\"editor\" request filter param').to.equal('author:' + editor.slug);\n\n                                // Displays editor post\n                                // TODO: implement \"filter\" param support and fix mirage post->author association\n                                // expect(find('[data-test-post-id]').length, 'editor post count').to.equal(1);\n                                // expect(find(`[data-test-post-id=\"${authorPost.id}\"]`), 'author post').to.exist;\n\n                                // TODO: test tags dropdown\n\n                                // Double-click on a post opens editor\n                                _context2.next = 55;\n                                return triggerEvent('[data-test-post-id=\"' + authorPost.id + '\"]', 'dblclick');\n\n                            case 55:\n\n                                (0, _chai.expect)(currentURL(), 'url after double-click').to.equal('/editor/' + authorPost.id);\n\n                            case 56:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n        });\n\n        (0, _mocha.describe)('as author', function () {\n            var author = void 0,\n                authorPost = void 0;\n\n            (0, _mocha.beforeEach)(function () {\n                var authorRole = server.create('role', { name: 'Author' });\n                author = server.create('user', { roles: [authorRole] });\n                var adminRole = server.create('role', { name: 'Administrator' });\n                var admin = server.create('user', { roles: [adminRole] });\n\n                // create posts\n                authorPost = server.create('post', { authorId: author.id, status: 'published', title: 'Author Post' });\n                server.create('post', { authorId: admin.id, status: 'scheduled', title: 'Admin Post' });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('only fetches the author\\'s posts', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var _server$pretender$han13, _server$pretender$han14, lastRequest;\n\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return visit('/');\n\n                            case 2:\n                                _context3.next = 4;\n                                return selectChoose('[data-test-type-select]', 'Published posts');\n\n                            case 4:\n\n                                // API request includes author filter\n                                _server$pretender$han13 = server.pretender.handledRequests.slice(-1), _server$pretender$han14 = _slicedToArray(_server$pretender$han13, 1), lastRequest = _server$pretender$han14[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.filter).to.equal('author:' + author.slug);\n\n                                // only author's post is shown\n                                (0, _chai.expect)(find('[data-test-post-id]').length, 'post count').to.equal(1);\n                                (0, _chai.expect)(find('[data-test-post-id=\"' + authorPost.id + '\"]'), 'author post').to.exist;\n\n                            case 8:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/custom-post-templates-test', ['ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'ember-native-dom-helpers', 'chai'], function (_ctrlOrCmd, _destroyApp, _startApp, _mocha, _emberSimpleAuth, _emberNativeDomHelpers, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    // keyCodes\n    var KEY_S = 83;\n\n    (0, _mocha.describe)('Acceptance: Custom Post Templates', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n\n            server.loadFixtures('settings');\n\n            var role = server.create('role', { name: 'Administrator' });\n            server.create('user', { roles: [role] });\n\n            (0, _emberSimpleAuth.authenticateSession)(application);\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.describe)('with custom templates', function () {\n            (0, _mocha.beforeEach)(function () {\n                server.create('theme', {\n                    active: true,\n                    name: 'example-theme',\n                    package: {\n                        name: 'Example Theme',\n                        version: '0.1'\n                    },\n                    templates: [{\n                        filename: 'custom-news-bulletin.hbs',\n                        name: 'News Bulletin',\n                        for: ['post', 'page'],\n                        slug: null\n                    }, {\n                        filename: 'custom-big-images.hbs',\n                        name: 'Big Images',\n                        for: ['post', 'page'],\n                        slug: null\n                    }, {\n                        filename: 'post-one.hbs',\n                        name: 'One',\n                        for: ['post'],\n                        slug: 'one'\n                    }, {\n                        filename: 'page-about.hbs',\n                        name: 'About',\n                        for: ['page'],\n                        slug: 'about'\n                    }]\n                });\n            });\n\n            (0, _mocha.it)('can change selected template', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var post, select;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                post = server.create('post', { customTemplate: 'custom-news-bulletin.hbs' });\n                                _context.next = 3;\n                                return (0, _emberNativeDomHelpers.visit)('/editor/1');\n\n                            case 3:\n                                _context.next = 5;\n                                return (0, _emberNativeDomHelpers.click)('[data-test-psm-trigger]');\n\n                            case 5:\n\n                                // template form should be shown\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-custom-template-form]')).to.exist;\n\n                                // custom template should be selected\n                                select = (0, _emberNativeDomHelpers.find)('[data-test-select=\"custom-template\"]');\n\n                                (0, _chai.expect)(select.value, 'selected value').to.equal('custom-news-bulletin.hbs');\n\n                                // templates list should contain default and custom templates in alphabetical order\n                                (0, _chai.expect)(select.options.length).to.equal(3);\n                                (0, _chai.expect)(select.options.item(0).value, 'default value').to.equal('');\n                                (0, _chai.expect)(select.options.item(0).text, 'default text').to.equal('Default');\n                                (0, _chai.expect)(select.options.item(1).value, 'first custom value').to.equal('custom-big-images.hbs');\n                                (0, _chai.expect)(select.options.item(1).text, 'first custom text').to.equal('Big Images');\n                                (0, _chai.expect)(select.options.item(2).value, 'second custom value').to.equal('custom-news-bulletin.hbs');\n                                (0, _chai.expect)(select.options.item(2).text, 'second custom text').to.equal('News Bulletin');\n\n                                // select the default template\n                                _context.next = 17;\n                                return (0, _emberNativeDomHelpers.fillIn)(select, '');\n\n                            case 17:\n                                _context.next = 19;\n                                return (0, _emberNativeDomHelpers.keyEvent)('.gh-app', 'keydown', KEY_S, {\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 19:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).customTemplate, 'saved custom template').to.equal('');\n\n                            case 20:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n\n            (0, _mocha.it)('disables template selector if slug matches slug-based template');\n\n            (0, _mocha.it)('doesn\\'t query themes endpoint unncessarily', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var themeRequests;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                themeRequests = function themeRequests() {\n                                    return server.pretender.handledRequests.filter(function (request) {\n                                        return request.url.match(/\\/themes\\//);\n                                    });\n                                };\n\n                                server.create('post', { customTemplate: 'custom-news-bulletin.hbs' });\n\n                                _context2.next = 4;\n                                return (0, _emberNativeDomHelpers.visit)('/editor/1');\n\n                            case 4:\n                                _context2.next = 6;\n                                return (0, _emberNativeDomHelpers.click)('[data-test-psm-trigger]');\n\n                            case 6:\n\n                                (0, _chai.expect)(themeRequests().length, 'after first open').to.equal(1);\n\n                                _context2.next = 9;\n                                return (0, _emberNativeDomHelpers.click)('[data-test-psm-trigger]');\n\n                            case 9:\n                                _context2.next = 11;\n                                return (0, _emberNativeDomHelpers.click)('[data-test-psm-trigger]');\n\n                            case 11:\n                                // show\n\n                                (0, _chai.expect)(themeRequests().length, 'after second open').to.equal(1);\n\n                            case 12:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n        });\n\n        (0, _mocha.describe)('without custom templates', function () {\n            (0, _mocha.beforeEach)(function () {\n                server.create('theme', {\n                    active: true,\n                    name: 'example-theme',\n                    package: {\n                        name: 'Example Theme',\n                        version: '0.1'\n                    },\n                    templates: []\n                });\n            });\n\n            (0, _mocha.it)('doesn\\'t show template selector', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                server.create('post', { customTemplate: 'custom-news-bulletin.hbs' });\n\n                                _context3.next = 3;\n                                return (0, _emberNativeDomHelpers.visit)('/editor/1');\n\n                            case 3:\n                                _context3.next = 5;\n                                return (0, _emberNativeDomHelpers.click)('[data-test-psm-trigger]');\n\n                            case 5:\n\n                                // template form should be shown\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-custom-template-form]')).to.not.exist;\n\n                            case 6:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/editor-test', ['ember-cli-mirage', 'ghost-admin/tests/helpers/destroy-app', 'moment', 'sinon', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_emberCliMirage, _destroyApp, _moment, _sinon, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Editor', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            server.create('user'); // necesary for post-author association\n                            server.create('post');\n\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 5;\n                            return visit('/editor/1');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 6:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('does not redirect to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n                            server.create('post');\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 6;\n                            return visit('/editor/1');\n\n                        case 6:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/1');\n\n                        case 7:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('does not redirect to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n                            server.create('post');\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 6;\n                            return visit('/editor/1');\n\n                        case 6:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/1');\n\n                        case 7:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.it)('displays 404 when post does not exist', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                    switch (_context4.prev = _context4.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context4.next = 5;\n                            return visit('/editor/1');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentPath()).to.equal('error404');\n                            (0, _chai.expect)(currentURL()).to.equal('/editor/1');\n\n                        case 7:\n                        case 'end':\n                            return _context4.stop();\n                    }\n                }\n            }, _callee4, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n                server.loadFixtures('settings');\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('renders the editor correctly, PSM Publish Date and Save Button', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var _server$createList, _server$createList2, post1, futureTime, validTime, newFutureTime;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _server$createList = server.createList('post', 2), _server$createList2 = _slicedToArray(_server$createList, 1), post1 = _server$createList2[0];\n                                futureTime = (0, _moment.default)().tz('Etc/UTC').add(10, 'minutes');\n\n                                // post id 1 is a draft, checking for draft behaviour now\n\n                                _context5.next = 4;\n                                return visit('/editor/1');\n\n                            case 4:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/1');\n\n                                // open post settings menu\n                                _context5.next = 7;\n                                return click('[data-test-psm-trigger]');\n\n                            case 7:\n                                _context5.next = 9;\n                                return fillIn('[data-test-date-time-picker-time-input]', 'foo');\n\n                            case 9:\n                                _context5.next = 11;\n                                return triggerEvent('[data-test-date-time-picker-time-input]', 'blur');\n\n                            case 11:\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-error]').text().trim(), 'inline error response for invalid time').to.equal('Must be in format: \"15:00\"');\n\n                                // should error, if the publish time is in the future\n                                // NOTE: date must be selected first, changing the time first will save\n                                // with the new time\n                                _context5.next = 14;\n                                return datepickerSelect('[data-test-date-time-picker-datepicker]', _moment.default.tz('Etc/UTC'));\n\n                            case 14:\n                                _context5.next = 16;\n                                return fillIn('[data-test-date-time-picker-time-input]', futureTime.format('HH:mm'));\n\n                            case 16:\n                                _context5.next = 18;\n                                return triggerEvent('[data-test-date-time-picker-time-input]', 'blur');\n\n                            case 18:\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-error]').text().trim(), 'inline error response for future time').to.equal('Must be in the past');\n\n                                // closing the PSM will reset the invalid date/time\n                                _context5.next = 21;\n                                return click('[data-test-close-settings-menu]');\n\n                            case 21:\n                                _context5.next = 23;\n                                return click('[data-test-psm-trigger]');\n\n                            case 23:\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-error]').text().trim(), 'date picker error after closing PSM').to.equal('');\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-date-input]').val(), 'PSM date value after closing with invalid date').to.equal((0, _moment.default)(post1.publishedAt).tz('Etc/UTC').format('MM/DD/YYYY'));\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-time-input]').val(), 'PSM time value after closing with invalid date').to.equal((0, _moment.default)(post1.publishedAt).tz('Etc/UTC').format('HH:mm'));\n\n                                // saves the post with the new date\n                                validTime = (0, _moment.default)('2017-04-09 12:00').tz('Etc/UTC');\n                                _context5.next = 29;\n                                return fillIn('[data-test-date-time-picker-time-input]', validTime.format('HH:mm'));\n\n                            case 29:\n                                _context5.next = 31;\n                                return triggerEvent('[data-test-date-time-picker-time-input]', 'blur');\n\n                            case 31:\n                                _context5.next = 33;\n                                return datepickerSelect('[data-test-date-time-picker-datepicker]', validTime);\n\n                            case 33:\n                                _context5.next = 35;\n                                return click('[data-test-close-settings-menu]');\n\n                            case 35:\n\n                                // checking the flow of the saving button for a draft\n                                (0, _chai.expect)(find('[data-test-publishmenu-trigger]').text().trim(), 'draft publish button text').to.equal('Publish');\n\n                                (0, _chai.expect)(find('[data-test-editor-post-status]').text().trim(), 'draft status text').to.equal('Draft');\n\n                                // click on publish now\n                                _context5.next = 39;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 39:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-draft]'), 'draft publish menu is shown').to.exist;\n\n                                _context5.next = 42;\n                                return click('[data-test-publishmenu-scheduled-option]');\n\n                            case 42:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'draft post schedule button text').to.equal('Schedule');\n\n                                _context5.next = 45;\n                                return click('[data-test-publishmenu-published-option]');\n\n                            case 45:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'draft post publish button text').to.equal('Publish');\n\n                                // Publish the post\n                                _context5.next = 48;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 48:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button updated after draft is published').to.equal('Published');\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-published]'), 'publish menu is shown after draft published').to.exist;\n\n                                (0, _chai.expect)(find('[data-test-editor-post-status]').text().trim(), 'post status updated after draft published').to.equal('Published');\n\n                                _context5.next = 53;\n                                return click('[data-test-publishmenu-cancel]');\n\n                            case 53:\n                                _context5.next = 55;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 55:\n                                _context5.next = 57;\n                                return click('[data-test-publishmenu-unpublished-option]');\n\n                            case 57:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'published post unpublish button text').to.equal('Unpublish');\n\n                                // post id 2 is a published post, checking for published post behaviour now\n                                _context5.next = 60;\n                                return visit('/editor/2');\n\n                            case 60:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/2');\n                                (0, _chai.expect)(find('[data-test-date-time-picker-date-input]').val()).to.equal('12/19/2015');\n                                (0, _chai.expect)(find('[data-test-date-time-picker-time-input]').val()).to.equal('16:25');\n\n                                // saves the post with a new date\n                                _context5.next = 65;\n                                return datepickerSelect('[data-test-date-time-picker-datepicker]', (0, _moment.default)('2016-05-10 10:00'));\n\n                            case 65:\n                                _context5.next = 67;\n                                return fillIn('[data-test-date-time-picker-time-input]', '10:00');\n\n                            case 67:\n                                _context5.next = 69;\n                                return triggerEvent('[data-test-date-time-picker-time-input]', 'blur');\n\n                            case 69:\n                                _context5.next = 71;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 71:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'published button text').to.equal('Update');\n\n                                _context5.next = 74;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 74:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button updated after published post is updated').to.equal('Updated');\n\n                                // go to settings to change the timezone\n                                _context5.next = 77;\n                                return visit('/settings/general');\n\n                            case 77:\n                                _context5.next = 79;\n                                return click('[data-test-toggle-timezone]');\n\n                            case 79:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL for settings').to.equal('/settings/general');\n                                (0, _chai.expect)(find('#activeTimezone option:selected').text().trim(), 'default timezone').to.equal('(GMT) UTC');\n\n                                // select a new timezone\n                                find('#activeTimezone option[value=\"Pacific/Kwajalein\"]').prop('selected', true);\n\n                                _context5.next = 84;\n                                return triggerEvent('#activeTimezone', 'change');\n\n                            case 84:\n                                _context5.next = 86;\n                                return click('.gh-btn.gh-btn-blue');\n\n                            case 86:\n\n                                (0, _chai.expect)(find('#activeTimezone option:selected').text().trim(), 'new timezone after saving').to.equal('(GMT +12:00) International Date Line West');\n\n                                // and now go back to the editor\n                                _context5.next = 89;\n                                return visit('/editor/2');\n\n                            case 89:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL in editor').to.equal('/editor/2');\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-date-input]').val(), 'date after timezone change').to.equal('05/10/2016');\n\n                                (0, _chai.expect)(find('[data-test-date-time-picker-time-input]').val(), 'time after timezone change').to.equal('22:00');\n\n                                // unpublish\n                                _context5.next = 94;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 94:\n                                _context5.next = 96;\n                                return click('[data-test-publishmenu-unpublished-option]');\n\n                            case 96:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'published post unpublish button text').to.equal('Unpublish');\n\n                                _context5.next = 99;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 99:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button updated after published post is unpublished').to.equal('Unpublished');\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-draft]'), 'draft menu is shown after unpublished').to.exist;\n\n                                (0, _chai.expect)(find('[data-test-editor-post-status]').text().trim(), 'post status updated after unpublished').to.equal('Draft');\n\n                                // schedule post\n                                _context5.next = 104;\n                                return click('[data-test-publishmenu-cancel]');\n\n                            case 104:\n                                _context5.next = 106;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 106:\n                                newFutureTime = _moment.default.tz('Pacific/Kwajalein').add(10, 'minutes');\n                                _context5.next = 109;\n                                return click('[data-test-publishmenu-scheduled-option]');\n\n                            case 109:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'draft post, schedule button text').to.equal('Schedule');\n\n                                _context5.next = 112;\n                                return datepickerSelect('[data-test-publishmenu-draft] [data-test-date-time-picker-datepicker]', newFutureTime);\n\n                            case 112:\n                                _context5.next = 114;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 114:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button updated after draft is scheduled').to.equal('Scheduled');\n\n                                _context5.next = 117;\n                                return click('[data-test-publishmenu-cancel]');\n\n                            case 117:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-scheduled]'), 'publish menu is not shown after closed').to.not.exist;\n\n                                // expect countdown to show warning, that post will be published in x minutes\n                                (0, _chai.expect)(find('[data-test-schedule-countdown]').text().trim(), 'notification countdown').to.contain('Post will be published in');\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-trigger]').text().trim(), 'scheduled publish button text').to.equal('Scheduled');\n\n                                (0, _chai.expect)(find('[data-test-editor-post-status]').text().trim(), 'scheduled post status').to.equal('Scheduled');\n\n                                // Re-schedule\n                                _context5.next = 123;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 123:\n                                _context5.next = 125;\n                                return click('[data-test-publishmenu-scheduled-option]');\n\n                            case 125:\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'scheduled post button reschedule text').to.equal('Reschedule');\n\n                                _context5.next = 128;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 128:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button text for a rescheduled post').to.equal('Rescheduled');\n\n                                _context5.next = 131;\n                                return click('[data-test-publishmenu-cancel]');\n\n                            case 131:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-scheduled]'), 'publish menu is not shown after closed').to.not.exist;\n\n                                (0, _chai.expect)(find('[data-test-editor-post-status]').text().trim(), 'scheduled status text').to.equal('Scheduled');\n\n                                // unschedule\n                                _context5.next = 135;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 135:\n                                _context5.next = 137;\n                                return click('[data-test-publishmenu-draft-option]');\n\n                            case 137:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button updated after scheduled post is unscheduled').to.equal('Unschedule');\n\n                                _context5.next = 140;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 140:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-save]').text().trim(), 'publish menu save button updated after scheduled post is unscheduled').to.equal('Unscheduled');\n\n                                _context5.next = 143;\n                                return click('[data-test-publishmenu-cancel]');\n\n                            case 143:\n\n                                (0, _chai.expect)(find('[data-test-publishmenu-trigger]').text().trim(), 'publish button text after unschedule').to.equal('Publish');\n\n                                (0, _chai.expect)(find('[data-test-editor-post-status]').text().trim(), 'status text after unschedule').to.equal('Draft');\n\n                                (0, _chai.expect)(find('[data-test-schedule-countdown]'), 'scheduled countdown after unschedule').to.not.exist;\n\n                            case 146:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('handles validation errors when scheduling', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                var post, plusTenMin;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                server.put('/posts/:id/', function () {\n                                    return new _emberCliMirage.default.Response(422, {}, {\n                                        errors: [{\n                                            errorType: 'ValidationError',\n                                            message: 'Error test'\n                                        }]\n                                    });\n                                });\n\n                                post = server.create('post', 1);\n                                plusTenMin = (0, _moment.default)().utc().add(10, 'minutes');\n                                _context6.next = 5;\n                                return visit('/editor/' + post.id);\n\n                            case 5:\n                                _context6.next = 7;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 7:\n                                _context6.next = 9;\n                                return click('[data-test-publishmenu-scheduled-option]');\n\n                            case 9:\n                                _context6.next = 11;\n                                return datepickerSelect('[data-test-publishmenu-draft] [data-test-date-time-picker-datepicker]', plusTenMin);\n\n                            case 11:\n                                _context6.next = 13;\n                                return fillIn('[data-test-publishmenu-draft] [data-test-date-time-picker-time-input]', plusTenMin.format('HH:mm'));\n\n                            case 13:\n                                _context6.next = 15;\n                                return triggerEvent('[data-test-publishmenu-draft] [data-test-date-time-picker-time-input]', 'blur');\n\n                            case 15:\n                                _context6.next = 17;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 17:\n\n                                (0, _chai.expect)(find('.gh-alert').length, 'number of alerts after failed schedule').to.equal(1);\n\n                                (0, _chai.expect)(find('.gh-alert').text(), 'alert text after failed schedule').to.match(/Saving failed: Error test/);\n\n                            case 19:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('handles title validation errors correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                server.createList('post', 1);\n\n                                // post id 1 is a draft, checking for draft behaviour now\n                                _context7.next = 3;\n                                return visit('/editor/1');\n\n                            case 3:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/1');\n\n                                _context7.next = 6;\n                                return fillIn('[data-test-editor-title-input]', Array(260).join('a'));\n\n                            case 6:\n                                _context7.next = 8;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 8:\n                                _context7.next = 10;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 10:\n\n                                (0, _chai.expect)(find('.gh-alert').length, 'number of alerts after invalid title').to.equal(1);\n\n                                (0, _chai.expect)(find('.gh-alert').text(), 'alert text after invalid title').to.match(/Title cannot be longer than 255 characters/);\n\n                            case 12:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            // NOTE: these tests are specific to the mobiledoc editor\n            // it('inserts a placeholder if the title is blank', async function () {\n            //     server.createList('post', 1);\n            //\n            //     // post id 1 is a draft, checking for draft behaviour now\n            //     await visit('/editor/1');\n            //\n            //     expect(currentURL(), 'currentURL')\n            //         .to.equal('/editor/1');\n            //\n            //     await titleRendered();\n            //\n            //     let title = find('#koenig-title-input div');\n            //     expect(title.data('placeholder')).to.equal('Your Post Title');\n            //     expect(title.hasClass('no-content')).to.be.false;\n            //\n            //     await replaceTitleHTML('');\n            //     expect(title.hasClass('no-content')).to.be.true;\n            //\n            //     await replaceTitleHTML('test');\n            //     expect(title.hasClass('no-content')).to.be.false;\n            // });\n            //\n            // it('removes HTML from the title.', async function () {\n            //     server.createList('post', 1);\n            //\n            //     // post id 1 is a draft, checking for draft behaviour now\n            //     await visit('/editor/1');\n            //\n            //     expect(currentURL(), 'currentURL')\n            //         .to.equal('/editor/1');\n            //\n            //     await titleRendered();\n            //\n            //     let title = find('#koenig-title-input div');\n            //     await replaceTitleHTML('<div>TITLE&nbsp;&#09;&nbsp;&thinsp;&ensp;&emsp;TEST</div>&nbsp;');\n            //     expect(title.html()).to.equal('TITLE      TEST ');\n            // });\n\n            (0, _mocha.it)('renders first countdown notification before scheduled time', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var clock, compareDate, compareDateString, compareTimeString;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                clock = _sinon.default.useFakeTimers((0, _moment.default)().valueOf());\n                                compareDate = (0, _moment.default)().tz('Etc/UTC').add(4, 'minutes');\n                                compareDateString = compareDate.format('MM/DD/YYYY');\n                                compareTimeString = compareDate.format('HH:mm');\n\n                                server.create('post', { publishedAt: _moment.default.utc().add(4, 'minutes'), status: 'scheduled' });\n                                server.create('setting', { activeTimezone: 'Europe/Dublin' });\n                                clock.restore();\n\n                                _context8.next = 9;\n                                return visit('/editor/1');\n\n                            case 9:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/1');\n                                (0, _chai.expect)(find('[data-test-date-time-picker-date-input]').val(), 'scheduled date').to.equal(compareDateString);\n                                (0, _chai.expect)(find('[data-test-date-time-picker-time-input]').val(), 'scheduled time').to.equal(compareTimeString);\n                                // Dropdown menu should be 'Update Post' and 'Unschedule'\n                                (0, _chai.expect)(find('[data-test-publishmenu-trigger]').text().trim(), 'text in save button for scheduled post').to.equal('Scheduled');\n                                // expect countdown to show warning, that post will be published in x minutes\n                                (0, _chai.expect)(find('[data-test-schedule-countdown]').text().trim(), 'notification countdown').to.contain('Post will be published in');\n\n                            case 14:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            })));\n\n            (0, _mocha.it)('shows author list and allows switching of author in PSM', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var role, author;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                server.create('post', { authorId: 1 });\n                                role = server.create('role', { name: 'Author' });\n                                author = server.create('user', { name: 'Waldo', roles: [role] });\n                                _context9.next = 5;\n                                return visit('/editor/1');\n\n                            case 5:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/editor/1');\n\n                                _context9.next = 8;\n                                return click('button.post-settings');\n\n                            case 8:\n\n                                (0, _chai.expect)(find('select[name=\"post-setting-author\"]').val()).to.equal('1');\n                                (0, _chai.expect)(find('select[name=\"post-setting-author\"] option[value=\"2\"]')).to.be.ok;\n\n                                _context9.next = 12;\n                                return fillIn('select[name=\"post-setting-author\"]', '2');\n\n                            case 12:\n\n                                (0, _chai.expect)(find('select[name=\"post-setting-author\"]').val()).to.equal('2');\n                                (0, _chai.expect)(server.db.posts[0].authorId).to.equal(author.id);\n\n                            case 14:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            })));\n\n            (0, _mocha.it)('autosaves when title loses focus', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                var role;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                role = server.create('role', { name: 'Administrator' });\n\n                                server.create('user', { name: 'Admin', roles: [role] });\n\n                                _context10.next = 4;\n                                return visit('/editor');\n\n                            case 4:\n\n                                // NOTE: there were checks here for the title element having focus\n                                // but they were very temperamental whilst running tests in the\n                                // browser so they've been left out for now\n\n                                (0, _chai.expect)(currentURL(), 'url on initial visit').to.equal('/editor');\n\n                                _context10.next = 7;\n                                return triggerEvent('[data-test-editor-title-input]', 'blur');\n\n                            case 7:\n\n                                (0, _chai.expect)(find('[data-test-editor-title-input]').val(), 'title value after autosave').to.equal('(Untitled)');\n\n                                (0, _chai.expect)(currentURL(), 'url after autosave').to.equal('/editor/1');\n\n                            case 9:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this);\n            })));\n\n            (0, _mocha.it)('saves post settings fields', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                var post, headerCM, footerCM;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                        switch (_context11.prev = _context11.next) {\n                            case 0:\n                                post = server.create('post');\n                                _context11.next = 3;\n                                return visit('/editor/' + post.id);\n\n                            case 3:\n                                _context11.next = 5;\n                                return click('[data-test-psm-trigger]');\n\n                            case 5:\n                                _context11.next = 7;\n                                return fillIn('[data-test-field=\"custom-excerpt\"]', Array(302).join('a'));\n\n                            case 7:\n                                _context11.next = 9;\n                                return triggerEvent('[data-test-field=\"custom-excerpt\"]', 'blur');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('[data-test-error=\"custom-excerpt\"]').text().trim(), 'excerpt too long error').to.match(/cannot be longer than 300/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).customExcerpt, 'saved excerpt after validation error').to.be.blank;\n\n                                // changing custom excerpt auto-saves\n                                _context11.next = 13;\n                                return fillIn('[data-test-field=\"custom-excerpt\"]', 'Testing excerpt');\n\n                            case 13:\n                                _context11.next = 15;\n                                return triggerEvent('[data-test-field=\"custom-excerpt\"]', 'blur');\n\n                            case 15:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).customExcerpt, 'saved excerpt').to.equal('Testing excerpt');\n\n                                // -------\n\n                                // open code injection subview\n                                _context11.next = 18;\n                                return click('[data-test-button=\"codeinjection\"]');\n\n                            case 18:\n\n                                // header injection has validation\n                                headerCM = find('[data-test-field=\"codeinjection-head\"] .CodeMirror')[0].CodeMirror;\n                                _context11.next = 21;\n                                return headerCM.setValue(Array(65540).join('a'));\n\n                            case 21:\n                                _context11.next = 23;\n                                return triggerEvent(headerCM.getInputField(), 'blur');\n\n                            case 23:\n\n                                (0, _chai.expect)(find('[data-test-error=\"codeinjection-head\"]').text().trim(), 'header injection too long error').to.match(/cannot be longer than 65535/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).codeinjectionHead, 'saved header injection after validation error').to.be.blank;\n\n                                // changing header injection auto-saves\n                                _context11.next = 27;\n                                return headerCM.setValue('<script src=\"http://example.com/inject-head.js\"></script>');\n\n                            case 27:\n                                _context11.next = 29;\n                                return triggerEvent(headerCM.getInputField(), 'blur');\n\n                            case 29:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).codeinjectionHead, 'saved header injection').to.equal('<script src=\"http://example.com/inject-head.js\"></script>');\n\n                                // footer injection has validation\n                                footerCM = find('[data-test-field=\"codeinjection-foot\"] .CodeMirror')[0].CodeMirror;\n                                _context11.next = 33;\n                                return footerCM.setValue(Array(65540).join('a'));\n\n                            case 33:\n                                _context11.next = 35;\n                                return triggerEvent(footerCM.getInputField(), 'blur');\n\n                            case 35:\n\n                                (0, _chai.expect)(find('[data-test-error=\"codeinjection-foot\"]').text().trim(), 'footer injection too long error').to.match(/cannot be longer than 65535/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).codeinjectionFoot, 'saved footer injection after validation error').to.be.blank;\n\n                                // changing footer injection auto-saves\n                                _context11.next = 39;\n                                return footerCM.setValue('<script src=\"http://example.com/inject-foot.js\"></script>');\n\n                            case 39:\n                                _context11.next = 41;\n                                return triggerEvent(footerCM.getInputField(), 'blur');\n\n                            case 41:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).codeinjectionFoot, 'saved footer injection').to.equal('<script src=\"http://example.com/inject-foot.js\"></script>');\n\n                                // closing subview switches back to main PSM view\n                                _context11.next = 44;\n                                return click('[data-test-button=\"close-psm-subview\"]');\n\n                            case 44:\n\n                                (0, _chai.expect)(find('[data-test-field=\"codeinjection-head\"]').length, 'header injection not present after closing subview').to.equal(0);\n\n                                // -------\n\n                                // open twitter data subview\n                                _context11.next = 47;\n                                return click('[data-test-button=\"twitter-data\"]');\n\n                            case 47:\n                                _context11.next = 49;\n                                return fillIn('[data-test-field=\"twitter-title\"]', Array(302).join('a'));\n\n                            case 49:\n                                _context11.next = 51;\n                                return triggerEvent('[data-test-field=\"twitter-title\"]', 'blur');\n\n                            case 51:\n\n                                (0, _chai.expect)(find('[data-test-error=\"twitter-title\"]').text().trim(), 'twitter title too long error').to.match(/cannot be longer than 300/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).twitterTitle, 'saved twitter title after validation error').to.be.blank;\n\n                                // changing twitter title auto-saves\n                                // twitter title has validation\n                                _context11.next = 55;\n                                return fillIn('[data-test-field=\"twitter-title\"]', 'Test Twitter Title');\n\n                            case 55:\n                                _context11.next = 57;\n                                return triggerEvent('[data-test-field=\"twitter-title\"]', 'blur');\n\n                            case 57:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).twitterTitle, 'saved twitter title').to.equal('Test Twitter Title');\n\n                                // twitter description has validation\n                                _context11.next = 60;\n                                return fillIn('[data-test-field=\"twitter-description\"]', Array(505).join('a'));\n\n                            case 60:\n                                _context11.next = 62;\n                                return triggerEvent('[data-test-field=\"twitter-description\"]', 'blur');\n\n                            case 62:\n\n                                (0, _chai.expect)(find('[data-test-error=\"twitter-description\"]').text().trim(), 'twitter description too long error').to.match(/cannot be longer than 500/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).twitterDescription, 'saved twitter description after validation error').to.be.blank;\n\n                                // changing twitter description auto-saves\n                                // twitter description has validation\n                                _context11.next = 66;\n                                return fillIn('[data-test-field=\"twitter-description\"]', 'Test Twitter Description');\n\n                            case 66:\n                                _context11.next = 68;\n                                return triggerEvent('[data-test-field=\"twitter-description\"]', 'blur');\n\n                            case 68:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).twitterDescription, 'saved twitter description').to.equal('Test Twitter Description');\n\n                                // closing subview switches back to main PSM view\n                                _context11.next = 71;\n                                return click('[data-test-button=\"close-psm-subview\"]');\n\n                            case 71:\n\n                                (0, _chai.expect)(find('[data-test-field=\"twitter-title\"]').length, 'twitter title not present after closing subview').to.equal(0);\n\n                                // -------\n\n                                // open facebook data subview\n                                _context11.next = 74;\n                                return click('[data-test-button=\"facebook-data\"]');\n\n                            case 74:\n                                _context11.next = 76;\n                                return fillIn('[data-test-field=\"og-title\"]', Array(302).join('a'));\n\n                            case 76:\n                                _context11.next = 78;\n                                return triggerEvent('[data-test-field=\"og-title\"]', 'blur');\n\n                            case 78:\n\n                                (0, _chai.expect)(find('[data-test-error=\"og-title\"]').text().trim(), 'facebook title too long error').to.match(/cannot be longer than 300/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).ogTitle, 'saved facebook title after validation error').to.be.blank;\n\n                                // changing facebook title auto-saves\n                                // facebook title has validation\n                                _context11.next = 82;\n                                return fillIn('[data-test-field=\"og-title\"]', 'Test Facebook Title');\n\n                            case 82:\n                                _context11.next = 84;\n                                return triggerEvent('[data-test-field=\"og-title\"]', 'blur');\n\n                            case 84:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).ogTitle, 'saved facebook title').to.equal('Test Facebook Title');\n\n                                // facebook description has validation\n                                _context11.next = 87;\n                                return fillIn('[data-test-field=\"og-description\"]', Array(505).join('a'));\n\n                            case 87:\n                                _context11.next = 89;\n                                return triggerEvent('[data-test-field=\"og-description\"]', 'blur');\n\n                            case 89:\n\n                                (0, _chai.expect)(find('[data-test-error=\"og-description\"]').text().trim(), 'facebook description too long error').to.match(/cannot be longer than 500/);\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).ogDescription, 'saved facebook description after validation error').to.be.blank;\n\n                                // changing facebook description auto-saves\n                                // facebook description has validation\n                                _context11.next = 93;\n                                return fillIn('[data-test-field=\"og-description\"]', 'Test Facebook Description');\n\n                            case 93:\n                                _context11.next = 95;\n                                return triggerEvent('[data-test-field=\"og-description\"]', 'blur');\n\n                            case 95:\n\n                                (0, _chai.expect)(server.db.posts.find(post.id).ogDescription, 'saved facebook description').to.equal('Test Facebook Description');\n\n                                // closing subview switches back to main PSM view\n                                _context11.next = 98;\n                                return click('[data-test-button=\"close-psm-subview\"]');\n\n                            case 98:\n\n                                (0, _chai.expect)(find('[data-test-field=\"og-title\"]').length, 'facebook title not present after closing subview').to.equal(0);\n\n                            case 99:\n                            case 'end':\n                                return _context11.stop();\n                        }\n                    }\n                }, _callee11, this);\n            })));\n\n            (0, _mocha.it)('has unsplash icon when server doesn\\'t return unsplash settings key', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                    while (1) {\n                        switch (_context12.prev = _context12.next) {\n                            case 0:\n                                server.createList('post', 1);\n\n                                _context12.next = 3;\n                                return visit('/editor/1');\n\n                            case 3:\n\n                                (0, _chai.expect)(find('.editor-toolbar .fa-camera'), 'unsplash toolbar button').to.exist;\n\n                            case 4:\n                            case 'end':\n                                return _context12.stop();\n                        }\n                    }\n                }, _callee12, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/error-handling-test', ['ember-cli-mirage', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai', 'ghost-admin/mirage/utils'], function (_emberCliMirage, _destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai, _utils) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    var htmlErrorResponse = function htmlErrorResponse() {\n        return new _emberCliMirage.default.Response(504, { 'Content-Type': 'text/html' }, '<!DOCTYPE html><head><title>Server Error</title></head><body>504 Gateway Timeout</body></html>');\n    };\n\n    (0, _mocha.describe)('Acceptance: Error Handling', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.describe)('VersionMismatch errors', function () {\n            (0, _mocha.describe)('logged in', function () {\n                (0, _mocha.beforeEach)(function () {\n                    var role = server.create('role', { name: 'Administrator' });\n                    server.create('user', { roles: [role] });\n\n                    return (0, _emberSimpleAuth.authenticateSession)(application);\n                });\n\n                (0, _mocha.it)('displays an alert and disables navigation when saving', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                            switch (_context.prev = _context.next) {\n                                case 0:\n                                    server.createList('post', 3);\n\n                                    // mock the post save endpoint to return version mismatch\n                                    server.put('/posts/:id', _utils.versionMismatchResponse);\n\n                                    _context.next = 4;\n                                    return visit('/');\n\n                                case 4:\n                                    _context.next = 6;\n                                    return click('.posts-list li:nth-of-type(2) a');\n\n                                case 6:\n                                    _context.next = 8;\n                                    return click('[data-test-publishmenu-trigger]');\n\n                                case 8:\n                                    _context.next = 10;\n                                    return click('[data-test-publishmenu-save]');\n\n                                case 10:\n                                    // \"Save post\"\n\n                                    // has the refresh to update alert\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/refresh/);\n\n                                    // try navigating back to the content list\n                                    _context.next = 14;\n                                    return click('.gh-nav-main-content');\n\n                                case 14:\n\n                                    (0, _chai.expect)(currentPath()).to.equal('editor.edit');\n\n                                case 15:\n                                case 'end':\n                                    return _context.stop();\n                            }\n                        }\n                    }, _callee, this);\n                })));\n\n                (0, _mocha.it)('displays alert and aborts the transition when navigating', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                            switch (_context2.prev = _context2.next) {\n                                case 0:\n                                    _context2.next = 2;\n                                    return visit('/');\n\n                                case 2:\n\n                                    // mock the tags endpoint to return version mismatch\n                                    server.get('/tags/', _utils.versionMismatchResponse);\n\n                                    _context2.next = 5;\n                                    return click('.gh-nav-settings-tags');\n\n                                case 5:\n\n                                    // navigation is blocked on loading screen\n                                    (0, _chai.expect)(currentPath()).to.equal('settings.tags_loading');\n\n                                    // has the refresh to update alert\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/refresh/);\n\n                                case 8:\n                                case 'end':\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2, this);\n                })));\n\n                (0, _mocha.it)('displays alert and aborts the transition when an ember-ajax error is thrown whilst navigating', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                        while (1) {\n                            switch (_context3.prev = _context3.next) {\n                                case 0:\n                                    server.get('/configuration/timezones/', _utils.versionMismatchResponse);\n\n                                    _context3.next = 3;\n                                    return visit('/settings/tags');\n\n                                case 3:\n                                    _context3.next = 5;\n                                    return click('.gh-nav-settings-general');\n\n                                case 5:\n\n                                    // navigation is blocked\n                                    (0, _chai.expect)(currentPath()).to.equal('settings.general_loading');\n\n                                    // has the refresh to update alert\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/refresh/);\n\n                                case 8:\n                                case 'end':\n                                    return _context3.stop();\n                            }\n                        }\n                    }, _callee3, this);\n                })));\n\n                (0, _mocha.it)('can be triggered when passed in to a component', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                        while (1) {\n                            switch (_context4.prev = _context4.next) {\n                                case 0:\n                                    server.post('/subscribers/csv/', _utils.versionMismatchResponse);\n\n                                    _context4.next = 3;\n                                    return visit('/subscribers');\n\n                                case 3:\n                                    _context4.next = 5;\n                                    return click('.gh-btn:contains(\"Import CSV\")');\n\n                                case 5:\n                                    _context4.next = 7;\n                                    return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'test.csv' });\n\n                                case 7:\n\n                                    // alert is shown\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/refresh/);\n\n                                case 9:\n                                case 'end':\n                                    return _context4.stop();\n                            }\n                        }\n                    }, _callee4, this);\n                })));\n            });\n\n            (0, _mocha.describe)('logged out', function () {\n                (0, _mocha.it)('displays alert', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                        while (1) {\n                            switch (_context5.prev = _context5.next) {\n                                case 0:\n                                    server.post('/authentication/token', _utils.versionMismatchResponse);\n\n                                    _context5.next = 3;\n                                    return visit('/signin');\n\n                                case 3:\n                                    _context5.next = 5;\n                                    return fillIn('[name=\"identification\"]', 'test@example.com');\n\n                                case 5:\n                                    _context5.next = 7;\n                                    return fillIn('[name=\"password\"]', 'password');\n\n                                case 7:\n                                    _context5.next = 9;\n                                    return click('.gh-btn-blue');\n\n                                case 9:\n\n                                    // has the refresh to update alert\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/refresh/);\n\n                                case 11:\n                                case 'end':\n                                    return _context5.stop();\n                            }\n                        }\n                    }, _callee5, this);\n                })));\n            });\n        });\n\n        (0, _mocha.describe)('CloudFlare errors', function () {\n            (0, _mocha.beforeEach)(function () {\n                var _server$db$roles$wher = server.db.roles.where({ name: 'Administrator' }),\n                    _server$db$roles$wher2 = _slicedToArray(_server$db$roles$wher, 1),\n                    role = _server$db$roles$wher2[0];\n\n                server.create('user', { roles: [role] });\n\n                server.loadFixtures();\n\n                (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('handles Ember Data HTML response', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                server.put('/posts/1/', htmlErrorResponse);\n                                server.create('post');\n\n                                _context6.next = 4;\n                                return visit('/editor/1');\n\n                            case 4:\n                                _context6.next = 6;\n                                return click('[data-test-publishmenu-trigger]');\n\n                            case 6:\n                                _context6.next = 8;\n                                return click('[data-test-publishmenu-save]');\n\n                            case 8:\n\n                                andThen(function () {\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.not.match(/html>/);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/Request was rejected due to server error/);\n                                });\n\n                            case 9:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('handles ember-ajax HTML response', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                server.del('/themes/foo/', htmlErrorResponse);\n\n                                _context7.next = 3;\n                                return visit('/settings/design');\n\n                            case 3:\n                                _context7.next = 5;\n                                return click('[data-test-theme-id=\"foo\"] [data-test-theme-delete-button]');\n\n                            case 5:\n                                _context7.next = 7;\n                                return click('.fullscreen-modal [data-test-delete-button]');\n\n                            case 7:\n\n                                andThen(function () {\n                                    (0, _chai.expect)(find('.gh-alert').length).to.equal(1);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.not.match(/html>/);\n                                    (0, _chai.expect)(find('.gh-alert').text()).to.match(/Request was rejected due to server error/);\n                                });\n\n                            case 8:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/ghost-desktop-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    var originalAgent = window.navigator.userAgent;\n\n    var setUserAgent = function setUserAgent(userAgent) {\n        var userAgentProp = {\n            get: function get() {\n                return userAgent;\n            },\n\n            configurable: true\n        };\n\n        try {\n            Object.defineProperty(window.navigator, 'userAgent', userAgentProp);\n        } catch (e) {\n            window.navigator = Object.create(window.navigator, {\n                userAgent: userAgentProp\n            });\n        }\n    };\n\n    var restoreUserAgent = function restoreUserAgent() {\n        setUserAgent(originalAgent);\n    };\n\n    (0, _mocha.describe)('Acceptance: Ghost Desktop', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.describe)('update alerts for broken versions', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.afterEach)(function () {\n                restoreUserAgent();\n            });\n\n            (0, _mocha.it)('displays alert for broken version', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/0.4.0 Chrome/51.0.2704.84 Electron/1.2.2 Safari/537.36');\n\n                                _context.next = 3;\n                                return visit('/');\n\n                            case 3:\n\n                                // has an alert with matching text\n                                (0, _chai.expect)(find('.gh-alert-blue').length, 'number of warning alerts').to.equal(1);\n                                (0, _chai.expect)(find('.gh-alert-blue').text().trim(), 'alert text').to.match(/Your version of Ghost Desktop needs to be manually updated/);\n\n                            case 5:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n\n            (0, _mocha.it)('doesn\\'t display alert for working version', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/0.5.1 Chrome/51.0.2704.84 Electron/1.2.2 Safari/537.36');\n\n                                _context2.next = 3;\n                                return visit('/');\n\n                            case 3:\n\n                                // no alerts\n                                (0, _chai.expect)(find('.gh-alert').length, 'number of alerts').to.equal(0);\n\n                            case 4:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/password-reset-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'chai'], function (_destroyApp, _startApp, _mocha, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Password Reset', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.describe)('request reset', function () {\n            (0, _mocha.it)('is successful with valid data', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                _context.next = 2;\n                                return visit('/signin');\n\n                            case 2:\n                                _context.next = 4;\n                                return fillIn('input[name=\"identification\"]', 'test@example.com');\n\n                            case 4:\n                                _context.next = 6;\n                                return click('.forgotten-link');\n\n                            case 6:\n\n                                // an alert with instructions is displayed\n                                (0, _chai.expect)(find('.gh-alert-blue').length, 'alert count').to.equal(1);\n\n                            case 7:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n\n            (0, _mocha.it)('shows error messages with invalid data', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return visit('/signin');\n\n                            case 2:\n                                _context2.next = 4;\n                                return click('.forgotten-link');\n\n                            case 4:\n\n                                // email field is invalid\n                                (0, _chai.expect)(find('input[name=\"identification\"]').closest('.form-group').hasClass('error'), 'email field has error class (no email)').to.be.true;\n\n                                // password field is valid\n                                (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').hasClass('error'), 'password field has error class (no email)').to.be.false;\n\n                                // error message shown\n                                (0, _chai.expect)(find('p.main-error').text().trim(), 'error message').to.equal('We need your email address to reset your password!');\n\n                                // invalid email provided\n                                _context2.next = 9;\n                                return fillIn('input[name=\"identification\"]', 'test');\n\n                            case 9:\n                                _context2.next = 11;\n                                return click('.forgotten-link');\n\n                            case 11:\n\n                                // email field is invalid\n                                (0, _chai.expect)(find('input[name=\"identification\"]').closest('.form-group').hasClass('error'), 'email field has error class (invalid email)').to.be.true;\n\n                                // password field is valid\n                                (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').hasClass('error'), 'password field has error class (invalid email)').to.be.false;\n\n                                // error message\n                                (0, _chai.expect)(find('p.main-error').text().trim(), 'error message').to.equal('We need your email address to reset your password!');\n\n                                // unknown email provided\n                                _context2.next = 16;\n                                return fillIn('input[name=\"identification\"]', 'unknown@example.com');\n\n                            case 16:\n                                _context2.next = 18;\n                                return click('.forgotten-link');\n\n                            case 18:\n\n                                // email field is invalid\n                                (0, _chai.expect)(find('input[name=\"identification\"]').closest('.form-group').hasClass('error'), 'email field has error class (unknown email)').to.be.true;\n\n                                // password field is valid\n                                (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').hasClass('error'), 'password field has error class (unknown email)').to.be.false;\n\n                                // error message\n                                (0, _chai.expect)(find('p.main-error').text().trim(), 'error message').to.equal('There is no user with that email address.');\n\n                            case 21:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n        });\n\n        // TODO: add tests for the change password screen\n    });\n});","define('ghost-admin/tests/acceptance/settings/amp-test', ['ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_ctrlOrCmd, _destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - Apps - AMP', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/apps/amp');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/apps/amp');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/apps/amp');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it enables or disables AMP properly and saves it', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$pretender$han, _server$pretender$han2, lastRequest, params, _server$pretender$han3, _server$pretender$han4, newRequest;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/apps/amp');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/amp');\n\n                                // AMP is enabled by default\n                                (0, _chai.expect)(find('[data-test-amp-checkbox]').prop('checked'), 'AMP checkbox').to.be.true;\n\n                                _context4.next = 6;\n                                return click('[data-test-amp-checkbox]');\n\n                            case 6:\n\n                                (0, _chai.expect)(find('[data-test-amp-checkbox]').prop('checked'), 'AMP checkbox').to.be.false;\n\n                                _context4.next = 9;\n                                return click('[data-test-save-button]');\n\n                            case 9:\n                                _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), lastRequest = _server$pretender$han2[0];\n                                params = JSON.parse(lastRequest.requestBody);\n\n\n                                (0, _chai.expect)(params.settings.findBy('key', 'amp').value).to.equal(false);\n\n                                // CMD-S shortcut works\n                                _context4.next = 14;\n                                return click('[data-test-amp-checkbox]');\n\n                            case 14:\n                                _context4.next = 16;\n                                return triggerEvent('.gh-app', 'keydown', {\n                                    keyCode: 83, // s\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 16:\n\n                                // we've already saved in this test so there's no on-screen indication\n                                // that we've had another save, check the request was fired instead\n                                _server$pretender$han3 = server.pretender.handledRequests.slice(-1), _server$pretender$han4 = _slicedToArray(_server$pretender$han3, 1), newRequest = _server$pretender$han4[0];\n\n                                params = JSON.parse(newRequest.requestBody);\n\n                                (0, _chai.expect)(find('[data-test-amp-checkbox]').prop('checked'), 'AMP checkbox').to.be.true;\n                                (0, _chai.expect)(params.settings.findBy('key', 'amp').value).to.equal(true);\n\n                            case 20:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('warns when leaving without saving', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/apps/amp');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/amp');\n\n                                // AMP is enabled by default\n                                (0, _chai.expect)(find('[data-test-amp-checkbox]').prop('checked'), 'AMP checkbox').to.be.true;\n\n                                _context5.next = 6;\n                                return click('[data-test-amp-checkbox]');\n\n                            case 6:\n\n                                (0, _chai.expect)(find('[data-test-amp-checkbox]').prop('checked'), 'AMP checkbox').to.be.false;\n\n                                _context5.next = 9;\n                                return visit('/team');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'modal exists').to.equal(1);\n\n                                // Leave without saving\n                                _context5.next = 12;\n                                return click('.fullscreen-modal [data-test-leave-button]'), 'leave without saving';\n\n                            case 12:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                                _context5.next = 15;\n                                return visit('/settings/apps/amp');\n\n                            case 15:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/amp');\n\n                                // settings were not saved\n                                (0, _chai.expect)(find('[data-test-amp-checkbox]').prop('checked'), 'AMP checkbox').to.be.true;\n\n                            case 17:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/apps-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - Apps', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/apps');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/apps');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/apps');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('renders correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/apps');\n\n                            case 2:\n\n                                // slack is not configured in the fixtures\n                                (0, _chai.expect)(find('[data-test-app=\"slack\"] [data-test-app-status]').text().trim(), 'slack app status').to.equal('Configure');\n\n                                // amp is enabled in the fixtures\n                                (0, _chai.expect)(find('[data-test-app=\"amp\"] [data-test-app-status]').text().trim(), 'amp app status').to.equal('Active');\n\n                            case 4:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('it redirects to Slack when clicking on the grid', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/apps');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps');\n\n                                _context5.next = 5;\n                                return click('[data-test-link=\"slack\"]');\n\n                            case 5:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/slack');\n\n                            case 6:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('it redirects to AMP when clicking on the grid', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.next = 2;\n                                return visit('/settings/apps');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps');\n\n                                _context6.next = 5;\n                                return click('[data-test-link=\"amp\"]');\n\n                            case 5:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/amp');\n\n                            case 6:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('it redirects to Unsplash when clicking on the grid', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                _context7.next = 2;\n                                return visit('/settings/apps');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps');\n\n                                _context7.next = 5;\n                                return click('[data-test-link=\"unsplash\"]');\n\n                            case 5:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/unsplash');\n\n                            case 6:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/code-injection-test', ['ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_ctrlOrCmd, _destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - Code-Injection', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/code-injection');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/code-injection');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/code-injection');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it renders, loads and saves editors correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$pretender$han, _server$pretender$han2, lastRequest, params, _server$pretender$han3, _server$pretender$han4, newRequest;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/code-injection');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/code-injection');\n\n                                // has correct page title\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Settings - Code injection - Test Blog');\n\n                                // highlights nav menu\n                                (0, _chai.expect)(Ember.$('.gh-nav-settings-code-injection').hasClass('active'), 'highlights nav menu item').to.be.true;\n\n                                (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Save');\n\n                                (0, _chai.expect)(find('#ghost-head .CodeMirror').length, 'ghost head codemirror element').to.equal(1);\n                                (0, _chai.expect)(Ember.$('#ghost-head .CodeMirror').hasClass('cm-s-xq-light'), 'ghost head editor theme').to.be.true;\n\n                                (0, _chai.expect)(find('#ghost-foot .CodeMirror').length, 'ghost head codemirror element').to.equal(1);\n                                (0, _chai.expect)(Ember.$('#ghost-foot .CodeMirror').hasClass('cm-s-xq-light'), 'ghost head editor theme').to.be.true;\n\n                                _context4.next = 12;\n                                return click('[data-test-save-button]');\n\n                            case 12:\n                                _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), lastRequest = _server$pretender$han2[0];\n                                params = JSON.parse(lastRequest.requestBody);\n\n\n                                (0, _chai.expect)(params.settings.findBy('key', 'ghost_head').value).to.equal('');\n                                (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Saved');\n\n                                // CMD-S shortcut works\n                                _context4.next = 18;\n                                return triggerEvent('.gh-app', 'keydown', {\n                                    keyCode: 83, // s\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 18:\n                                // we've already saved in this test so there's no on-screen indication\n                                // that we've had another save, check the request was fired instead\n                                _server$pretender$han3 = server.pretender.handledRequests.slice(-1), _server$pretender$han4 = _slicedToArray(_server$pretender$han3, 1), newRequest = _server$pretender$han4[0];\n\n                                params = JSON.parse(newRequest.requestBody);\n\n                                (0, _chai.expect)(params.settings.findBy('key', 'ghost_head').value).to.equal('');\n                                (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Saved');\n\n                            case 22:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/design-test', ['ember-cli-mirage', 'ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/mirage/config/themes', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_emberCliMirage, _ctrlOrCmd, _destroyApp, _themes, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - Design', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/design');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/design');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('can visit /settings/design', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return visit('/settings/design');\n\n                            case 2:\n\n                                (0, _chai.expect)(currentPath()).to.equal('settings.design.index');\n                                (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Save');\n\n                                // fixtures contain two nav items, check for three rows as we\n                                // should have one extra that's blank\n                                (0, _chai.expect)(find('.gh-blognav-item').length, 'navigation items count').to.equal(3);\n\n                            case 5:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n\n            (0, _mocha.it)('saves navigation settings', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$db$settings$w, _server$db$settings$w2, navSetting;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/design');\n\n                            case 2:\n                                _context4.next = 4;\n                                return fillIn('.gh-blognav-label:first input', 'Test');\n\n                            case 4:\n                                _context4.next = 6;\n                                return fillIn('.gh-blognav-url:first input', '/test');\n\n                            case 6:\n                                _context4.next = 8;\n                                return triggerEvent('.gh-blognav-url:first input', 'blur');\n\n                            case 8:\n                                _context4.next = 10;\n                                return click('[data-test-save-button]');\n\n                            case 10:\n                                _server$db$settings$w = server.db.settings.where({ key: 'navigation' }), _server$db$settings$w2 = _slicedToArray(_server$db$settings$w, 1), navSetting = _server$db$settings$w2[0];\n\n\n                                (0, _chai.expect)(navSetting.value).to.equal('[{\"label\":\"Test\",\"url\":\"/test/\"},{\"label\":\"About\",\"url\":\"/about\"}]');\n\n                                // don't test against .error directly as it will pick up failed\n                                // tests \"pre.error\" elements\n                                (0, _chai.expect)(find('span.error').length, 'error fields count').to.equal(0);\n                                (0, _chai.expect)(find('.gh-alert').length, 'alerts count').to.equal(0);\n                                (0, _chai.expect)(find('.response:visible').length, 'validation errors count').to.equal(0);\n\n                            case 15:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('validates new item correctly on save', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/design');\n\n                            case 2:\n                                _context5.next = 4;\n                                return click('[data-test-save-button]');\n\n                            case 4:\n\n                                (0, _chai.expect)(find('.gh-blognav-item').length, 'number of nav items after saving with blank new item').to.equal(3);\n\n                                _context5.next = 7;\n                                return fillIn('.gh-blognav-label:last input', 'Test');\n\n                            case 7:\n                                _context5.next = 9;\n                                return fillIn('.gh-blognav-url:last input', 'http://invalid domain/');\n\n                            case 9:\n                                _context5.next = 11;\n                                return triggerEvent('.gh-blognav-url:last input', 'blur');\n\n                            case 11:\n                                _context5.next = 13;\n                                return click('[data-test-save-button]');\n\n                            case 13:\n\n                                (0, _chai.expect)(find('.gh-blognav-item').length, 'number of nav items after saving with invalid new item').to.equal(3);\n\n                                (0, _chai.expect)(find('.gh-blognav-item:last .error').length, 'number of invalid fields in new item').to.equal(1);\n\n                            case 15:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('clears unsaved settings when navigating away but warns with a confirmation dialog', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.next = 2;\n                                return visit('/settings/design');\n\n                            case 2:\n                                _context6.next = 4;\n                                return fillIn('.gh-blognav-label:first input', 'Test');\n\n                            case 4:\n                                _context6.next = 6;\n                                return triggerEvent('.gh-blognav-label:first input', 'blur');\n\n                            case 6:\n\n                                (0, _chai.expect)(find('.gh-blognav-label:first input').val()).to.equal('Test');\n                                // this.timeout(0);\n                                // return pauseTest();\n\n                                _context6.next = 9;\n                                return visit('/settings/code-injection');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'modal exists').to.equal(1);\n\n                                // Leave without saving\n                                _context6.next = 12;\n                                return click('.fullscreen-modal [data-test-leave-button]'), 'leave without saving';\n\n                            case 12:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/code-injection');\n\n                                _context6.next = 15;\n                                return visit('/settings/design');\n\n                            case 15:\n\n                                (0, _chai.expect)(find('.gh-blognav-label:first input').val()).to.equal('Home');\n\n                            case 16:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('can add and remove items', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var _server$db$settings$w3, _server$db$settings$w4, navSetting;\n\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                _context7.next = 2;\n                                return visit('/settings/design');\n\n                            case 2:\n                                _context7.next = 4;\n                                return click('.gh-blognav-add');\n\n                            case 4:\n\n                                (0, _chai.expect)(find('.gh-blognav-label:last .response').is(':visible'), 'blank label has validation error').to.be.true;\n\n                                _context7.next = 7;\n                                return fillIn('.gh-blognav-label:last input', 'New');\n\n                            case 7:\n                                _context7.next = 9;\n                                return triggerEvent('.gh-blognav-label:last input', 'keypress', {});\n\n                            case 9:\n\n                                (0, _chai.expect)(find('.gh-blognav-label:last .response').is(':visible'), 'label validation is visible after typing').to.be.false;\n\n                                _context7.next = 12;\n                                return fillIn('.gh-blognav-url:last input', '/new');\n\n                            case 12:\n                                _context7.next = 14;\n                                return triggerEvent('.gh-blognav-url:last input', 'keypress', {});\n\n                            case 14:\n                                _context7.next = 16;\n                                return triggerEvent('.gh-blognav-url:last input', 'blur');\n\n                            case 16:\n\n                                (0, _chai.expect)(find('.gh-blognav-url:last .response').is(':visible'), 'url validation is visible after typing').to.be.false;\n\n                                (0, _chai.expect)(find('.gh-blognav-url:last input').val()).to.equal(window.location.origin + '/new');\n\n                                _context7.next = 20;\n                                return click('.gh-blognav-add');\n\n                            case 20:\n\n                                (0, _chai.expect)(find('.gh-blognav-item').length, 'number of nav items after successful add').to.equal(4);\n\n                                (0, _chai.expect)(find('.gh-blognav-label:last input').val(), 'new item label value after successful add').to.be.blank;\n\n                                (0, _chai.expect)(find('.gh-blognav-url:last input').val(), 'new item url value after successful add').to.equal(window.location.origin + '/');\n\n                                (0, _chai.expect)(find('.gh-blognav-item .response:visible').length, 'number or validation errors shown after successful add').to.equal(0);\n\n                                _context7.next = 26;\n                                return click('.gh-blognav-item:first .gh-blognav-delete');\n\n                            case 26:\n\n                                (0, _chai.expect)(find('.gh-blognav-item').length, 'number of nav items after successful remove').to.equal(3);\n\n                                // CMD-S shortcut works\n                                _context7.next = 29;\n                                return triggerEvent('.gh-app', 'keydown', {\n                                    keyCode: 83, // s\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 29:\n                                _server$db$settings$w3 = server.db.settings.where({ key: 'navigation' }), _server$db$settings$w4 = _slicedToArray(_server$db$settings$w3, 1), navSetting = _server$db$settings$w4[0];\n\n\n                                (0, _chai.expect)(navSetting.value).to.equal('[{\"label\":\"About\",\"url\":\"/about\"},{\"label\":\"New\",\"url\":\"/new/\"}]');\n\n                            case 31:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            (0, _mocha.it)('allows management of themes', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                // lists available themes + active theme is highlighted\n\n                                // theme upload\n                                // - displays modal\n                                // - validates mime type\n                                // - validates casper.zip\n                                // - handles validation errors\n                                // - handles upload and close\n                                // - handles upload and activate\n                                // - displays overwrite warning if theme already exists\n\n                                // theme activation\n                                // - switches theme\n\n                                // theme deletion\n                                // - displays modal\n                                // - deletes theme and refreshes list\n\n                                server.loadFixtures('themes');\n                                _context8.next = 3;\n                                return visit('/settings/design');\n\n                            case 3:\n\n                                // lists available themes (themes are specified in mirage/fixtures/settings)\n                                (0, _chai.expect)(find('[data-test-theme-id]').length, 'shows correct number of themes').to.equal(3);\n\n                                (0, _chai.expect)(find('[data-test-theme-active=\"true\"] [data-test-theme-title]').text().trim(), 'Blog theme marked as active').to.equal('Blog (default)');\n\n                                // theme upload displays modal\n                                _context8.next = 7;\n                                return click('[data-test-upload-theme-button]');\n\n                            case 7:\n                                (0, _chai.expect)(find('.fullscreen-modal .modal-content:contains(\"Upload a theme\")').length, 'theme upload modal displayed after button click').to.equal(1);\n\n                                // cancelling theme upload closes modal\n                                _context8.next = 10;\n                                return click('.fullscreen-modal [data-test-close-button]');\n\n                            case 10:\n                                (0, _chai.expect)(find('.fullscreen-modal').length === 0, 'upload theme modal is closed when cancelling').to.be.true;\n\n                                // theme upload validates mime type\n                                _context8.next = 13;\n                                return click('[data-test-upload-theme-button]');\n\n                            case 13:\n                                _context8.next = 15;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { type: 'text/csv' });\n\n                            case 15:\n                                (0, _chai.expect)(find('.fullscreen-modal .failed').text(), 'validation error is shown for invalid mime type').to.match(/is not supported/);\n\n                                // theme upload validates casper.zip\n                                _context8.next = 18;\n                                return click('[data-test-upload-try-again-button]');\n\n                            case 18:\n                                _context8.next = 20;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'casper.zip', type: 'application/zip' });\n\n                            case 20:\n                                (0, _chai.expect)(find('.fullscreen-modal .failed').text(), 'validation error is shown when uploading casper.zip').to.match(/default Casper theme cannot be overwritten/);\n\n                                // theme upload handles upload errors\n                                server.post('/themes/upload/', function () {\n                                    return new _emberCliMirage.default.Response(422, {}, {\n                                        errors: [{\n                                            message: 'Invalid theme'\n                                        }]\n                                    });\n                                });\n                                _context8.next = 24;\n                                return click('[data-test-upload-try-again-button]');\n\n                            case 24:\n                                _context8.next = 26;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'error.zip', type: 'application/zip' });\n\n                            case 26:\n                                (0, _chai.expect)(find('.fullscreen-modal .failed').text().trim(), 'validation error is passed through from server').to.equal('Invalid theme');\n\n                                // reset to default mirage handlers\n                                (0, _themes.default)(server);\n\n                                // theme upload handles validation errors\n                                server.post('/themes/upload/', function () {\n                                    return new _emberCliMirage.default.Response(422, {}, {\n                                        errors: [{\n                                            message: 'Theme is not compatible or contains errors.',\n                                            errorType: 'ThemeValidationError',\n                                            errorDetails: [{\n                                                level: 'error',\n                                                rule: 'Assets such as CSS & JS must use the <code>{{asset}}</code> helper',\n                                                details: '<p>The listed files should be included using the <code>{{asset}}</code> helper.</p>',\n                                                failures: [{\n                                                    ref: '/assets/javascripts/ui.js'\n                                                }]\n                                            }, {\n                                                level: 'error',\n                                                rule: 'Templates must contain valid Handlebars.',\n                                                failures: [{\n                                                    ref: 'index.hbs',\n                                                    message: 'The partial index_meta could not be found'\n                                                }, {\n                                                    ref: 'tag.hbs',\n                                                    message: 'The partial index_meta could not be found'\n                                                }]\n                                            }]\n                                        }]\n                                    });\n                                });\n\n                                _context8.next = 31;\n                                return click('[data-test-upload-try-again-button]');\n\n                            case 31:\n                                _context8.next = 33;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'bad-theme.zip', type: 'application/zip' });\n\n                            case 33:\n\n                                (0, _chai.expect)(find('.fullscreen-modal h1').text().trim(), 'modal title after uploading invalid theme').to.equal('Invalid theme');\n\n                                (0, _chai.expect)(find('.theme-validation-rule-text').text(), 'top-level errors are displayed').to.match(/Templates must contain valid Handlebars/);\n\n                                _context8.next = 37;\n                                return click('[data-test-toggle-details]');\n\n                            case 37:\n\n                                (0, _chai.expect)(find('.theme-validation-details').text(), 'top-level errors do not escape HTML').to.match(/The listed files should be included using the {{asset}} helper/);\n\n                                (0, _chai.expect)(find('.theme-validation-list ul li').text(), 'individual failures are displayed').to.match(/\\/assets\\/javascripts\\/ui\\.js/);\n\n                                // reset to default mirage handlers\n                                (0, _themes.default)(server);\n\n                                _context8.next = 42;\n                                return click('.fullscreen-modal [data-test-try-again-button]');\n\n                            case 42:\n                                (0, _chai.expect)(find('.theme-validation-errors').length, '\"Try Again\" resets form after theme validation error').to.equal(0);\n\n                                (0, _chai.expect)(find('.gh-image-uploader').length, '\"Try Again\" resets form after theme validation error').to.equal(1);\n\n                                (0, _chai.expect)(find('.fullscreen-modal h1').text().trim(), '\"Try Again\" resets form after theme validation error').to.equal('Upload a theme');\n\n                                // theme upload handles validation warnings\n                                server.post('/themes/upload/', function (_ref9) {\n                                    var themes = _ref9.themes;\n\n                                    var theme = {\n                                        name: 'blackpalm',\n                                        package: {\n                                            name: 'BlackPalm',\n                                            version: '1.0.0'\n                                        }\n                                    };\n\n                                    themes.create(theme);\n\n                                    theme.warnings = [{\n                                        level: 'warning',\n                                        rule: 'Assets such as CSS & JS must use the <code>{{asset}}</code> helper',\n                                        details: '<p>The listed files should be included using the <code>{{asset}}</code> helper.  For more information, please see the <a href=\"http://themes.ghost.org/docs/asset\">asset helper documentation</a>.</p>',\n                                        failures: [{\n                                            ref: '/assets/dist/img/apple-touch-icon.png'\n                                        }, {\n                                            ref: '/assets/dist/img/favicon.ico'\n                                        }, {\n                                            ref: '/assets/dist/css/blackpalm.min.css'\n                                        }, {\n                                            ref: '/assets/dist/js/blackpalm.min.js'\n                                        }],\n                                        code: 'GS030-ASSET-REQ'\n                                    }];\n\n                                    return new _emberCliMirage.default.Response(200, {}, {\n                                        themes: [theme]\n                                    });\n                                });\n\n                                _context8.next = 48;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'warning-theme.zip', type: 'application/zip' });\n\n                            case 48:\n\n                                (0, _chai.expect)(find('.fullscreen-modal h1').text().trim(), 'modal title after uploading theme with warnings').to.equal('Upload successful with warnings');\n\n                                _context8.next = 51;\n                                return click('[data-test-toggle-details]');\n\n                            case 51:\n\n                                (0, _chai.expect)(find('.theme-validation-details').text(), 'top-level warnings are displayed').to.match(/The listed files should be included using the {{asset}} helper/);\n\n                                (0, _chai.expect)(find('.theme-validation-list ul li').text(), 'individual warning failures are displayed').to.match(/\\/assets\\/dist\\/img\\/apple-touch-icon\\.png/);\n\n                                // reset to default mirage handlers\n                                (0, _themes.default)(server);\n\n                                _context8.next = 56;\n                                return click('.fullscreen-modal [data-test-close-button]');\n\n                            case 56:\n                                _context8.next = 58;\n                                return click('[data-test-upload-theme-button]');\n\n                            case 58:\n                                _context8.next = 60;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'theme-1.zip', type: 'application/zip' });\n\n                            case 60:\n\n                                (0, _chai.expect)(find('.fullscreen-modal h1').text().trim(), 'modal header after successful upload').to.equal('Upload successful!');\n\n                                (0, _chai.expect)(find('.modal-body').text(), 'modal displays theme name after successful upload').to.match(/\"Test 1 - 0\\.1\" uploaded successfully/);\n\n                                (0, _chai.expect)(find('[data-test-theme-id]').length, 'number of themes in list grows after upload').to.equal(5);\n\n                                (0, _chai.expect)(find('[data-test-theme-active=\"true\"] [data-test-theme-title]').text().trim(), 'newly uploaded theme is not active').to.equal('Blog (default)');\n\n                                _context8.next = 66;\n                                return click('.fullscreen-modal [data-test-close-button]');\n\n                            case 66:\n                                _context8.next = 68;\n                                return click('[data-test-upload-theme-button]');\n\n                            case 68:\n                                _context8.next = 70;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'theme-2.zip', type: 'application/zip' });\n\n                            case 70:\n                                _context8.next = 72;\n                                return click('.fullscreen-modal [data-test-activate-now-button]');\n\n                            case 72:\n\n                                (0, _chai.expect)(find('[data-test-theme-id]').length, 'number of themes in list grows after upload and activate').to.equal(6);\n\n                                (0, _chai.expect)(find('[data-test-theme-active=\"true\"] [data-test-theme-title]').text().trim(), 'newly uploaded+activated theme is active').to.equal('Test 2');\n\n                                // theme activation switches active theme\n                                _context8.next = 76;\n                                return click('[data-test-theme-id=\"casper\"] [data-test-theme-activate-button]');\n\n                            case 76:\n\n                                (0, _chai.expect)(find('[data-test-theme-id=\"test-2\"] .apps-card-app').hasClass('theme-list-item--active'), 'previously active theme is not active').to.be.false;\n\n                                (0, _chai.expect)(find('[data-test-theme-id=\"casper\"] .apps-card-app').hasClass('theme-list-item--active'), 'activated theme is active').to.be.true;\n\n                                // theme activation shows errors\n                                server.put('themes/:theme/activate', function () {\n                                    return new _emberCliMirage.default.Response(422, {}, {\n                                        errors: [{\n                                            message: 'Theme is not compatible or contains errors.',\n                                            errorType: 'ThemeValidationError',\n                                            errorDetails: [{\n                                                level: 'error',\n                                                rule: 'Assets such as CSS & JS must use the <code>{{asset}}</code> helper',\n                                                details: '<p>The listed files should be included using the <code>{{asset}}</code> helper.</p>',\n                                                failures: [{\n                                                    ref: '/assets/javascripts/ui.js'\n                                                }]\n                                            }, {\n                                                level: 'error',\n                                                rule: 'Templates must contain valid Handlebars.',\n                                                failures: [{\n                                                    ref: 'index.hbs',\n                                                    message: 'The partial index_meta could not be found'\n                                                }, {\n                                                    ref: 'tag.hbs',\n                                                    message: 'The partial index_meta could not be found'\n                                                }]\n                                            }]\n                                        }]\n                                    });\n                                });\n\n                                _context8.next = 81;\n                                return click('[data-test-theme-id=\"test-2\"] [data-test-theme-activate-button]');\n\n                            case 81:\n\n                                (0, _chai.expect)(find('[data-test-theme-warnings-modal]')).to.exist;\n\n                                (0, _chai.expect)(find('[data-test-theme-warnings-title]').text().trim(), 'modal title after activating invalid theme').to.equal('Activation failed');\n\n                                (0, _chai.expect)(find('[data-test-theme-warnings]').text(), 'top-level errors are displayed in activation errors').to.match(/Templates must contain valid Handlebars/);\n\n                                _context8.next = 86;\n                                return click('[data-test-toggle-details]');\n\n                            case 86:\n\n                                (0, _chai.expect)(find('.theme-validation-details').text(), 'top-level errors do not escape HTML in activation errors').to.match(/The listed files should be included using the {{asset}} helper/);\n\n                                (0, _chai.expect)(find('.theme-validation-list ul li').text(), 'individual failures are displayed in activation errors').to.match(/\\/assets\\/javascripts\\/ui\\.js/);\n\n                                // restore default mirage handlers\n                                (0, _themes.default)(server);\n\n                                _context8.next = 91;\n                                return click('[data-test-modal-close-button]');\n\n                            case 91:\n                                (0, _chai.expect)(find('[data-test-theme-warnings-modal]')).to.not.exist;\n\n                                // theme activation shows warnings\n                                server.put('themes/:theme/activate', function (_ref10, _ref11) {\n                                    var themes = _ref10.themes;\n                                    var params = _ref11.params;\n\n                                    themes.all().update('active', false);\n                                    var theme = themes.findBy({ name: params.theme }).update({ active: true });\n\n                                    theme.update({ warnings: [{\n                                            level: 'warning',\n                                            rule: 'Assets such as CSS & JS must use the <code>{{asset}}</code> helper',\n                                            details: '<p>The listed files should be included using the <code>{{asset}}</code> helper.  For more information, please see the <a href=\"http://themes.ghost.org/docs/asset\">asset helper documentation</a>.</p>',\n                                            failures: [{\n                                                ref: '/assets/dist/img/apple-touch-icon.png'\n                                            }, {\n                                                ref: '/assets/dist/img/favicon.ico'\n                                            }, {\n                                                ref: '/assets/dist/css/blackpalm.min.css'\n                                            }, {\n                                                ref: '/assets/dist/js/blackpalm.min.js'\n                                            }],\n                                            code: 'GS030-ASSET-REQ'\n                                        }] });\n\n                                    return { themes: [theme] };\n                                });\n\n                                _context8.next = 95;\n                                return click('[data-test-theme-id=\"test-2\"] [data-test-theme-activate-button]');\n\n                            case 95:\n\n                                (0, _chai.expect)(find('[data-test-theme-warnings-modal]')).to.exist;\n\n                                (0, _chai.expect)(find('[data-test-theme-warnings-title]').text().trim(), 'modal title after activating theme with warnings').to.equal('Activation successful with warnings');\n\n                                _context8.next = 99;\n                                return click('[data-test-toggle-details]');\n\n                            case 99:\n\n                                (0, _chai.expect)(find('.theme-validation-details').text(), 'top-level warnings are displayed in activation warnings').to.match(/The listed files should be included using the {{asset}} helper/);\n\n                                (0, _chai.expect)(find('.theme-validation-list ul li').text(), 'individual warning failures are displayed in activation warnings').to.match(/\\/assets\\/dist\\/img\\/apple-touch-icon\\.png/);\n\n                                // restore default mirage handlers\n                                (0, _themes.default)(server);\n\n                                _context8.next = 104;\n                                return click('[data-test-modal-close-button]');\n\n                            case 104:\n                                _context8.next = 106;\n                                return click('[data-test-theme-id=\"casper\"] [data-test-theme-activate-button]');\n\n                            case 106:\n                                _context8.next = 108;\n                                return click('[data-test-theme-id=\"test-1\"] [data-test-theme-delete-button]');\n\n                            case 108:\n                                (0, _chai.expect)(find('[data-test-delete-theme-modal]').length, 'theme deletion modal displayed after button click').to.equal(1);\n\n                                // cancelling theme deletion closes modal\n                                _context8.next = 111;\n                                return click('.fullscreen-modal [data-test-cancel-button]');\n\n                            case 111:\n                                (0, _chai.expect)(find('.fullscreen-modal').length === 0, 'delete theme modal is closed when cancelling').to.be.true;\n\n                                // confirming theme deletion closes modal and refreshes list\n                                _context8.next = 114;\n                                return click('[data-test-theme-id=\"test-1\"] [data-test-theme-delete-button]');\n\n                            case 114:\n                                _context8.next = 116;\n                                return click('.fullscreen-modal [data-test-delete-button]');\n\n                            case 116:\n                                (0, _chai.expect)(find('.fullscreen-modal').length === 0, 'delete theme modal closes after deletion').to.be.true;\n\n                                (0, _chai.expect)(find('[data-test-theme-id]').length, 'number of themes in list shrinks after delete').to.equal(5);\n\n                                (0, _chai.expect)(find('[data-test-theme-title]').text(), 'correct theme is removed from theme list after deletion').to.not.match(/Test 1/);\n\n                                // validation errors are handled when deleting a theme\n                                server.del('/themes/:theme/', function () {\n                                    return new _emberCliMirage.default.Response(422, {}, {\n                                        errors: [{\n                                            message: 'Can\\'t delete theme'\n                                        }]\n                                    });\n                                });\n\n                                _context8.next = 122;\n                                return click('[data-test-theme-id=\"test-2\"] [data-test-theme-delete-button]');\n\n                            case 122:\n                                _context8.next = 124;\n                                return click('.fullscreen-modal [data-test-delete-button]');\n\n                            case 124:\n\n                                (0, _chai.expect)(find('.fullscreen-modal').length === 0, 'delete theme modal closes after failed deletion').to.be.true;\n\n                                (0, _chai.expect)(find('.gh-alert').length, 'alert is shown when deletion fails').to.equal(1);\n\n                                (0, _chai.expect)(find('.gh-alert').text(), 'failed deletion alert has correct text').to.match(/Can't delete theme/);\n\n                                // restore default mirage handlers\n                                (0, _themes.default)(server);\n\n                            case 128:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            })));\n\n            (0, _mocha.it)('can delete then re-upload the same theme', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                server.loadFixtures('themes');\n\n                                // mock theme upload to emulate uploading theme with same id\n                                server.post('/themes/upload/', function (_ref13) {\n                                    var themes = _ref13.themes;\n\n                                    var theme = themes.create({\n                                        name: 'foo',\n                                        package: {\n                                            name: 'Foo',\n                                            version: '0.1'\n                                        }\n                                    });\n\n                                    return { themes: [theme] };\n                                });\n\n                                _context9.next = 4;\n                                return visit('/settings/design');\n\n                            case 4:\n                                _context9.next = 6;\n                                return click('[data-test-theme-id=\"foo\"] [data-test-theme-delete-button]');\n\n                            case 6:\n                                _context9.next = 8;\n                                return click('.fullscreen-modal [data-test-delete-button]');\n\n                            case 8:\n                                _context9.next = 10;\n                                return click('[data-test-upload-theme-button]');\n\n                            case 10:\n                                _context9.next = 12;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'foo.zip', type: 'application/zip' });\n\n                            case 12:\n                                _context9.next = 14;\n                                return click('.fullscreen-modal [data-test-activate-now-button]');\n\n                            case 14:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/general-test', ['ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/mirage/config/uploads', 'ghost-admin/tests/helpers/start-app', 'ember-test-helpers/wait', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_ctrlOrCmd, _destroyApp, _uploads, _startApp, _wait, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                arr2[i] = arr[i];\n            }\n\n            return arr2;\n        } else {\n            return Array.from(arr);\n        }\n    }\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - General', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/general');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/general');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/general');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it renders, handles image uploads', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$pretender$han, _server$pretender$han2, lastRequest, params;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/general');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/general');\n\n                                // has correct page title\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Settings - General - Test Blog');\n\n                                // highlights nav menu\n                                (0, _chai.expect)(Ember.$('.gh-nav-settings-general').hasClass('active'), 'highlights nav menu item').to.be.true;\n\n                                (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Save settings');\n\n                                (0, _chai.expect)(find('[data-test-dated-permalinks-checkbox]').prop('checked'), 'date permalinks checkbox').to.be.false;\n\n                                _context4.next = 9;\n                                return click('[data-test-toggle-pub-info]');\n\n                            case 9:\n                                _context4.next = 11;\n                                return fillIn('[data-test-title-input]', 'New Blog Title');\n\n                            case 11:\n                                _context4.next = 13;\n                                return click('[data-test-save-button]');\n\n                            case 13:\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Settings - General - New Blog Title');\n\n                                // blog icon upload\n                                // -------------------------------------------------------------- //\n\n                                // has fixture icon\n                                (0, _chai.expect)(find('[data-test-icon-img]').attr('src'), 'initial icon src').to.equal('/content/images/2014/Feb/favicon.ico');\n\n                                // delete removes icon + shows button\n                                _context4.next = 17;\n                                return click('[data-test-delete-image=\"icon\"]');\n\n                            case 17:\n                                (0, _chai.expect)(find('[data-test-icon-img]'), 'icon img after removal').to.not.exist;\n                                (0, _chai.expect)(find('[data-test-image-upload-btn=\"icon\"]'), 'icon upload button after removal').to.exist;\n\n                                // select file\n                                fileUpload('[data-test-file-input=\"icon\"]', ['test'], { name: 'pub-icon.ico', type: 'image/x-icon' });\n\n                                // check progress bar exists during upload\n                                Ember.run.later(function () {\n                                    (0, _chai.expect)(find('[data-test-setting=\"icon\"] [data-test-progress-bar]'), 'icon upload progress bar').to.exist;\n                                }, 50);\n\n                                // wait for upload to finish and check image is shown\n                                _context4.next = 23;\n                                return (0, _wait.default)();\n\n                            case 23:\n                                (0, _chai.expect)(find('[data-test-icon-img]').attr('src'), 'icon img after upload').to.match(/pub-icon\\.ico$/);\n                                (0, _chai.expect)(find('[data-test-image-upload-btn=\"icon\"]'), 'icon upload button after upload').to.not.exist;\n\n                                // failed upload shows error\n                                server.post('/uploads/icon/', function () {\n                                    return {\n                                        errors: [{\n                                            errorType: 'ValidationError',\n                                            message: 'Wrong icon size'\n                                        }]\n                                    };\n                                }, 422);\n                                _context4.next = 28;\n                                return click('[data-test-delete-image=\"icon\"]');\n\n                            case 28:\n                                _context4.next = 30;\n                                return fileUpload('[data-test-file-input=\"icon\"]', ['test'], { name: 'pub-icon.ico', type: 'image/x-icon' });\n\n                            case 30:\n                                (0, _chai.expect)(find('[data-test-error=\"icon\"]').text().trim(), 'failed icon upload message').to.equal('Wrong icon size');\n\n                                // reset upload endpoints\n                                (0, _uploads.default)(server);\n\n                                // blog logo upload\n                                // -------------------------------------------------------------- //\n\n                                // has fixture icon\n                                (0, _chai.expect)(find('[data-test-logo-img]').attr('src'), 'initial logo src').to.equal('/content/images/2013/Nov/logo.png');\n\n                                // delete removes logo + shows button\n                                _context4.next = 35;\n                                return click('[data-test-delete-image=\"logo\"]');\n\n                            case 35:\n                                (0, _chai.expect)(find('[data-test-logo-img]'), 'logo img after removal').to.not.exist;\n                                (0, _chai.expect)(find('[data-test-image-upload-btn=\"logo\"]'), 'logo upload button after removal').to.exist;\n\n                                // select file\n                                fileUpload('[data-test-file-input=\"logo\"]', ['test'], { name: 'pub-logo.png', type: 'image/png' });\n\n                                // check progress bar exists during upload\n                                Ember.run.later(function () {\n                                    (0, _chai.expect)(find('[data-test-setting=\"logo\"] [data-test-progress-bar]'), 'logo upload progress bar').to.exist;\n                                }, 50);\n\n                                // wait for upload to finish and check image is shown\n                                _context4.next = 41;\n                                return (0, _wait.default)();\n\n                            case 41:\n                                (0, _chai.expect)(find('[data-test-logo-img]').attr('src'), 'logo img after upload').to.match(/pub-logo\\.png$/);\n                                (0, _chai.expect)(find('[data-test-image-upload-btn=\"logo\"]'), 'logo upload button after upload').to.not.exist;\n\n                                // failed upload shows error\n                                server.post('/uploads/', function () {\n                                    return {\n                                        errors: [{\n                                            errorType: 'ValidationError',\n                                            message: 'Wrong logo size'\n                                        }]\n                                    };\n                                }, 422);\n                                _context4.next = 46;\n                                return click('[data-test-delete-image=\"logo\"]');\n\n                            case 46:\n                                _context4.next = 48;\n                                return fileUpload('[data-test-file-input=\"logo\"]', ['test'], { name: 'pub-logo.png', type: 'image/png' });\n\n                            case 48:\n                                (0, _chai.expect)(find('[data-test-error=\"logo\"]').text().trim(), 'failed logo upload message').to.equal('Wrong logo size');\n\n                                // reset upload endpoints\n                                (0, _uploads.default)(server);\n\n                                // blog cover upload\n                                // -------------------------------------------------------------- //\n\n                                // has fixture icon\n                                (0, _chai.expect)(find('[data-test-cover-img]').attr('src'), 'initial coverImage src').to.equal('/content/images/2014/Feb/cover.jpg');\n\n                                // delete removes coverImage + shows button\n                                _context4.next = 53;\n                                return click('[data-test-delete-image=\"coverImage\"]');\n\n                            case 53:\n                                (0, _chai.expect)(find('[data-test-coverImage-img]'), 'coverImage img after removal').to.not.exist;\n                                (0, _chai.expect)(find('[data-test-image-upload-btn=\"coverImage\"]'), 'coverImage upload button after removal').to.exist;\n\n                                // select file\n                                fileUpload('[data-test-file-input=\"coverImage\"]', ['test'], { name: 'pub-coverImage.png', type: 'image/png' });\n\n                                // check progress bar exists during upload\n                                Ember.run.later(function () {\n                                    (0, _chai.expect)(find('[data-test-setting=\"coverImage\"] [data-test-progress-bar]'), 'coverImage upload progress bar').to.exist;\n                                }, 50);\n\n                                // wait for upload to finish and check image is shown\n                                _context4.next = 59;\n                                return (0, _wait.default)();\n\n                            case 59:\n                                (0, _chai.expect)(find('[data-test-cover-img]').attr('src'), 'coverImage img after upload').to.match(/pub-coverImage\\.png$/);\n                                (0, _chai.expect)(find('[data-test-image-upload-btn=\"coverImage\"]'), 'coverImage upload button after upload').to.not.exist;\n\n                                // failed upload shows error\n                                server.post('/uploads/', function () {\n                                    return {\n                                        errors: [{\n                                            errorType: 'ValidationError',\n                                            message: 'Wrong coverImage size'\n                                        }]\n                                    };\n                                }, 422);\n                                _context4.next = 64;\n                                return click('[data-test-delete-image=\"coverImage\"]');\n\n                            case 64:\n                                _context4.next = 66;\n                                return fileUpload('[data-test-file-input=\"coverImage\"]', ['test'], { name: 'pub-coverImage.png', type: 'image/png' });\n\n                            case 66:\n                                (0, _chai.expect)(find('[data-test-error=\"coverImage\"]').text().trim(), 'failed coverImage upload message').to.equal('Wrong coverImage size');\n\n                                // reset upload endpoints\n                                (0, _uploads.default)(server);\n\n                                // CMD-S shortcut works\n                                // -------------------------------------------------------------- //\n                                _context4.next = 70;\n                                return fillIn('[data-test-title-input]', 'CMD-S Test');\n\n                            case 70:\n                                _context4.next = 72;\n                                return triggerEvent('.gh-app', 'keydown', {\n                                    keyCode: 83, // s\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 72:\n                                // we've already saved in this test so there's no on-screen indication\n                                // that we've had another save, check the request was fired instead\n                                _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), lastRequest = _server$pretender$han2[0];\n                                params = JSON.parse(lastRequest.requestBody);\n\n                                (0, _chai.expect)(params.settings.findBy('key', 'title').value).to.equal('CMD-S Test');\n\n                            case 75:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('renders timezone selector correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/general');\n\n                            case 2:\n                                _context5.next = 4;\n                                return click('[data-test-toggle-timezone]');\n\n                            case 4:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/general');\n\n                                (0, _chai.expect)(find('#activeTimezone option').length, 'available timezones').to.equal(66);\n                                (0, _chai.expect)(find('#activeTimezone option:selected').text().trim()).to.equal('(GMT) UTC');\n                                find('#activeTimezone option[value=\"Africa/Cairo\"]').prop('selected', true);\n\n                                _context5.next = 10;\n                                return triggerEvent('#activeTimezone', 'change');\n\n                            case 10:\n                                _context5.next = 12;\n                                return click('[data-test-save-button]');\n\n                            case 12:\n                                (0, _chai.expect)(find('#activeTimezone option:selected').text().trim()).to.equal('(GMT +2:00) Cairo, Egypt');\n\n                            case 13:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('handles private blog settings correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.next = 2;\n                                return visit('/settings/general');\n\n                            case 2:\n\n                                // handles private blog settings correctly\n                                (0, _chai.expect)(find('[data-test-private-checkbox]').prop('checked'), 'isPrivate checkbox').to.be.false;\n\n                                _context6.next = 5;\n                                return click('[data-test-private-checkbox]');\n\n                            case 5:\n\n                                (0, _chai.expect)(find('[data-test-private-checkbox]').prop('checked'), 'isPrivate checkbox').to.be.true;\n                                (0, _chai.expect)(find('[data-test-password-input]').length, 'password input').to.equal(1);\n                                (0, _chai.expect)(find('[data-test-password-input]').val(), 'password default value').to.not.equal('');\n\n                                _context6.next = 10;\n                                return fillIn('[data-test-password-input]', '');\n\n                            case 10:\n                                _context6.next = 12;\n                                return triggerEvent('[data-test-password-input]', 'blur');\n\n                            case 12:\n\n                                (0, _chai.expect)(find('[data-test-password-error]').text().trim(), 'empty password error').to.equal('Password must be supplied');\n\n                                _context6.next = 15;\n                                return fillIn('[data-test-password-input]', 'asdfg');\n\n                            case 15:\n                                _context6.next = 17;\n                                return triggerEvent('[data-test-password-input]', 'blur');\n\n                            case 17:\n\n                                (0, _chai.expect)(find('[data-test-password-error]').text().trim(), 'present password error').to.equal('');\n\n                            case 18:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('handles social blog settings correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                var _this = this;\n\n                var testSocialInput, testFacebookValidation, testTwitterValidation;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                testSocialInput = function () {\n                                    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(type, input, expectedValue) {\n                                        var expectedError = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n                                        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                            while (1) {\n                                                switch (_context7.prev = _context7.next) {\n                                                    case 0:\n                                                        _context7.next = 2;\n                                                        return fillIn('[data-test-' + type + '-input]', input);\n\n                                                    case 2:\n                                                        _context7.next = 4;\n                                                        return triggerEvent('[data-test-' + type + '-input]', 'blur');\n\n                                                    case 4:\n\n                                                        (0, _chai.expect)(find('[data-test-' + type + '-input]').val(), type + ' value for ' + input).to.equal(expectedValue);\n\n                                                        (0, _chai.expect)(find('[data-test-' + type + '-error]').text().trim(), type + ' validation response for ' + input).to.equal(expectedError);\n\n                                                        (0, _chai.expect)(find('[data-test-' + type + '-input]').closest('.form-group').hasClass('error'), type + ' input should be in error state with \\'' + input + '\\'').to.equal(!!expectedError);\n\n                                                    case 7:\n                                                    case 'end':\n                                                        return _context7.stop();\n                                                }\n                                            }\n                                        }, _callee7, this);\n                                    }));\n\n                                    return function testSocialInput(_x2, _x3, _x4) {\n                                        return _ref8.apply(this, arguments);\n                                    };\n                                }();\n\n                                testFacebookValidation = function () {\n                                    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                                            args[_key] = arguments[_key];\n                                        }\n\n                                        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                            while (1) {\n                                                switch (_context8.prev = _context8.next) {\n                                                    case 0:\n                                                        return _context8.abrupt('return', testSocialInput.apply(undefined, ['facebook'].concat(_toConsumableArray(args))));\n\n                                                    case 1:\n                                                    case 'end':\n                                                        return _context8.stop();\n                                                }\n                                            }\n                                        }, _callee8, _this);\n                                    }));\n\n                                    return function testFacebookValidation() {\n                                        return _ref9.apply(this, arguments);\n                                    };\n                                }();\n\n                                testTwitterValidation = function () {\n                                    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                                        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                                            args[_key2] = arguments[_key2];\n                                        }\n\n                                        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                                            while (1) {\n                                                switch (_context9.prev = _context9.next) {\n                                                    case 0:\n                                                        return _context9.abrupt('return', testSocialInput.apply(undefined, ['twitter'].concat(_toConsumableArray(args))));\n\n                                                    case 1:\n                                                    case 'end':\n                                                        return _context9.stop();\n                                                }\n                                            }\n                                        }, _callee9, _this);\n                                    }));\n\n                                    return function testTwitterValidation() {\n                                        return _ref10.apply(this, arguments);\n                                    };\n                                }();\n\n                                _context10.next = 5;\n                                return visit('/settings/general');\n\n                            case 5:\n                                _context10.next = 7;\n                                return click('[data-test-toggle-social]');\n\n                            case 7:\n\n                                // validates a facebook url correctly\n                                // loads fixtures and performs transform\n                                (0, _chai.expect)(find('[data-test-facebook-input]').val(), 'initial facebook value').to.equal('https://www.facebook.com/test');\n\n                                _context10.next = 10;\n                                return triggerEvent('[data-test-facebook-input]', 'focus');\n\n                            case 10:\n                                _context10.next = 12;\n                                return triggerEvent('[data-test-facebook-input]', 'blur');\n\n                            case 12:\n\n                                // regression test: we still have a value after the input is\n                                // focused and then blurred without any changes\n                                (0, _chai.expect)(find('[data-test-facebook-input]').val(), 'facebook value after blur with no change').to.equal('https://www.facebook.com/test');\n\n                                _context10.next = 15;\n                                return testFacebookValidation('facebook.com/username', 'https://www.facebook.com/username');\n\n                            case 15:\n                                _context10.next = 17;\n                                return testFacebookValidation('testuser', 'https://www.facebook.com/testuser');\n\n                            case 17:\n                                _context10.next = 19;\n                                return testFacebookValidation('ab99', 'https://www.facebook.com/ab99');\n\n                            case 19:\n                                _context10.next = 21;\n                                return testFacebookValidation('page/ab99', 'https://www.facebook.com/page/ab99');\n\n                            case 21:\n                                _context10.next = 23;\n                                return testFacebookValidation('page/*(&*(%%))', 'https://www.facebook.com/page/*(&*(%%))');\n\n                            case 23:\n                                _context10.next = 25;\n                                return testFacebookValidation('facebook.com/pages/some-facebook-page/857469375913?ref=ts', 'https://www.facebook.com/pages/some-facebook-page/857469375913?ref=ts');\n\n                            case 25:\n                                _context10.next = 27;\n                                return testFacebookValidation('https://www.facebook.com/groups/savethecrowninn', 'https://www.facebook.com/groups/savethecrowninn');\n\n                            case 27:\n                                _context10.next = 29;\n                                return testFacebookValidation('http://github.com/username', 'http://github.com/username', 'The URL must be in a format like https://www.facebook.com/yourPage');\n\n                            case 29:\n                                _context10.next = 31;\n                                return testFacebookValidation('http://github.com/pages/username', 'http://github.com/pages/username', 'The URL must be in a format like https://www.facebook.com/yourPage');\n\n                            case 31:\n\n                                // validates a twitter url correctly\n\n                                // loads fixtures and performs transform\n                                (0, _chai.expect)(find('[data-test-twitter-input]').val(), 'initial twitter value').to.equal('https://twitter.com/test');\n\n                                _context10.next = 34;\n                                return triggerEvent('[data-test-twitter-input]', 'focus');\n\n                            case 34:\n                                _context10.next = 36;\n                                return triggerEvent('[data-test-twitter-input]', 'blur');\n\n                            case 36:\n\n                                // regression test: we still have a value after the input is\n                                // focused and then blurred without any changes\n                                (0, _chai.expect)(find('[data-test-twitter-input]').val(), 'twitter value after blur with no change').to.equal('https://twitter.com/test');\n\n                                _context10.next = 39;\n                                return testTwitterValidation('twitter.com/username', 'https://twitter.com/username');\n\n                            case 39:\n                                _context10.next = 41;\n                                return testTwitterValidation('testuser', 'https://twitter.com/testuser');\n\n                            case 41:\n                                _context10.next = 43;\n                                return testTwitterValidation('http://github.com/username', 'https://twitter.com/username');\n\n                            case 43:\n                                _context10.next = 45;\n                                return testTwitterValidation('*(&*(%%))', '*(&*(%%))', 'The URL must be in a format like https://twitter.com/yourUsername');\n\n                            case 45:\n                                _context10.next = 47;\n                                return testTwitterValidation('thisusernamehasmorethan15characters', 'thisusernamehasmorethan15characters', 'Your Username is not a valid Twitter Username');\n\n                            case 47:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this);\n            })));\n\n            (0, _mocha.it)('warns when leaving without saving', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                        switch (_context11.prev = _context11.next) {\n                            case 0:\n                                _context11.next = 2;\n                                return visit('/settings/general');\n\n                            case 2:\n\n                                (0, _chai.expect)(find('[data-test-dated-permalinks-checkbox]').prop('checked'), 'date permalinks checkbox').to.be.false;\n\n                                _context11.next = 5;\n                                return click('[data-test-toggle-pub-info]');\n\n                            case 5:\n                                _context11.next = 7;\n                                return fillIn('[data-test-title-input]', 'New Blog Title');\n\n                            case 7:\n                                _context11.next = 9;\n                                return click('[data-test-dated-permalinks-checkbox]');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('[data-test-dated-permalinks-checkbox]').prop('checked'), 'dated permalink checkbox').to.be.true;\n\n                                _context11.next = 12;\n                                return visit('/settings/team');\n\n                            case 12:\n\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'modal exists').to.equal(1);\n\n                                // Leave without saving\n                                _context11.next = 15;\n                                return click('.fullscreen-modal [data-test-leave-button]'), 'leave without saving';\n\n                            case 15:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/team');\n\n                                _context11.next = 18;\n                                return visit('/settings/general');\n\n                            case 18:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/general');\n\n                                // settings were not saved\n                                (0, _chai.expect)(find('[data-test-dated-permalinks-checkbox]').prop('checked'), 'date permalinks checkbox').to.be.false;\n\n                                (0, _chai.expect)(find('[data-test-title-input]').text().trim(), 'Blog title').to.equal('');\n\n                            case 21:\n                            case 'end':\n                                return _context11.stop();\n                        }\n                    }\n                }, _callee11, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/labs-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    // import {timeout} from 'ember-concurrency';\n\n    (0, _mocha.describe)('Acceptance: Settings - Labs', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/labs');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/labs');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/labs');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            _mocha.it.skip('it renders, loads modals correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/labs');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/labs');\n\n                                // has correct page title\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Settings - Labs - Test Blog');\n\n                                // highlights nav menu\n                                (0, _chai.expect)(Ember.$('.gh-nav-settings-labs').hasClass('active'), 'highlights nav menu item').to.be.true;\n\n                                _context4.next = 7;\n                                return click('#settings-resetdb .js-delete');\n\n                            case 7:\n                                (0, _chai.expect)(find('.fullscreen-modal .modal-content').length, 'modal element').to.equal(1);\n\n                                _context4.next = 10;\n                                return click('.fullscreen-modal .modal-footer .gh-btn');\n\n                            case 10:\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'modal element').to.equal(0);\n\n                            case 11:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('can upload/download redirects', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var button, iframe;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/labs');\n\n                            case 2:\n\n                                // successful upload\n                                server.post('/redirects/json/', {}, 200);\n\n                                _context5.next = 5;\n                                return fileUpload('[data-test-file-input=\"redirects\"]', ['test'], { name: 'redirects.json', type: 'application/json' });\n\n                            case 5:\n\n                                // TODO: tests for the temporary success/failure state have been\n                                // disabled because they were randomly failing\n\n                                // this should be half-way through button reset timeout\n                                // await timeout(50);\n                                //\n                                // // shows success button\n                                // let button = find('[data-test-button=\"upload-redirects\"]');\n                                // expect(button.length, 'no of success buttons').to.equal(1);\n                                // expect(\n                                //     button.hasClass('gh-btn-green'),\n                                //     'success button is green'\n                                // ).to.be.true;\n                                // expect(\n                                //     button.text().trim(),\n                                //     'success button text'\n                                // ).to.have.string('Uploaded');\n                                //\n                                // await wait();\n\n                                // returned to normal button\n                                button = find('[data-test-button=\"upload-redirects\"]');\n\n                                (0, _chai.expect)(button.length, 'no of post-success buttons').to.equal(1);\n                                (0, _chai.expect)(button.hasClass('gh-btn-green'), 'post-success button doesn\\'t have success class').to.be.false;\n                                (0, _chai.expect)(button.text().trim(), 'post-success button text').to.have.string('Upload redirects');\n\n                                // failed upload\n                                server.post('/redirects/json/', {\n                                    errors: [{\n                                        errorType: 'BadRequestError',\n                                        message: 'Test failure message'\n                                    }]\n                                }, 400);\n\n                                _context5.next = 12;\n                                return fileUpload('[data-test-file-input=\"redirects\"]', ['test'], { name: 'redirects-bad.json', type: 'application/json' });\n\n                            case 12:\n\n                                // TODO: tests for the temporary success/failure state have been\n                                // disabled because they were randomly failing\n\n                                // this should be half-way through button reset timeout\n                                // await timeout(50);\n                                //\n                                // shows failure button\n                                // button = find('[data-test-button=\"upload-redirects\"]');\n                                // expect(button.length, 'no of failure buttons').to.equal(1);\n                                // expect(\n                                //     button.hasClass('gh-btn-red'),\n                                //     'failure button is red'\n                                // ).to.be.true;\n                                // expect(\n                                //     button.text().trim(),\n                                //     'failure button text'\n                                // ).to.have.string('Upload Failed');\n                                //\n                                // await wait();\n\n                                // shows error message\n                                (0, _chai.expect)(find('[data-test-error=\"redirects\"]').text().trim(), 'upload error text').to.have.string('Test failure message');\n\n                                // returned to normal button\n                                button = find('[data-test-button=\"upload-redirects\"]');\n                                (0, _chai.expect)(button.length, 'no of post-failure buttons').to.equal(1);\n                                (0, _chai.expect)(button.hasClass('gh-btn-red'), 'post-failure button doesn\\'t have failure class').to.be.false;\n                                (0, _chai.expect)(button.text().trim(), 'post-failure button text').to.have.string('Upload redirects');\n\n                                // successful upload clears error\n                                server.post('/redirects/json/', {}, 200);\n                                _context5.next = 20;\n                                return fileUpload('[data-test-file-input=\"redirects\"]', ['test'], { name: 'redirects-bad.json', type: 'application/json' });\n\n                            case 20:\n\n                                (0, _chai.expect)(find('[data-test-error=\"redirects\"]')).to.not.exist;\n\n                                // can download redirects.json\n                                _context5.next = 23;\n                                return click('[data-test-link=\"download-redirects\"]');\n\n                            case 23:\n                                iframe = Ember.$('#iframeDownload');\n\n                                (0, _chai.expect)(iframe.attr('src')).to.have.string('/redirects/json/');\n\n                            case 25:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/slack-test', ['ember-cli-mirage', 'ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_emberCliMirage, _ctrlOrCmd, _destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - Apps - Slack', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/apps/slack');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/apps/slack');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/apps/slack');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it validates and saves a slack url properly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$pretender$han, _server$pretender$han2, newRequest, params, _JSON$parse, _JSON$parse2, result, _server$pretender$han3, _server$pretender$han4, lastRequest;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/apps/slack');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/slack');\n\n                                _context4.next = 5;\n                                return fillIn('[data-test-slack-url-input]', 'notacorrecturl');\n\n                            case 5:\n                                _context4.next = 7;\n                                return click('[data-test-save-button]');\n\n                            case 7:\n\n                                (0, _chai.expect)(find('#slack-settings .error .response').text().trim(), 'inline validation response').to.equal('The URL must be in a format like https://hooks.slack.com/services/<your personal key>');\n\n                                // CMD-S shortcut works\n                                _context4.next = 10;\n                                return fillIn('[data-test-slack-url-input]', 'https://hooks.slack.com/services/1275958430');\n\n                            case 10:\n                                _context4.next = 12;\n                                return triggerEvent('.gh-app', 'keydown', {\n                                    keyCode: 83, // s\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 12:\n                                _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), newRequest = _server$pretender$han2[0];\n                                params = JSON.parse(newRequest.requestBody);\n                                _JSON$parse = JSON.parse(params.settings.findBy('key', 'slack').value), _JSON$parse2 = _slicedToArray(_JSON$parse, 1), result = _JSON$parse2[0];\n\n\n                                (0, _chai.expect)(result.url).to.equal('https://hooks.slack.com/services/1275958430');\n                                (0, _chai.expect)(find('#slack-settings .error .response').text().trim(), 'inline validation response').to.equal('');\n\n                                _context4.next = 19;\n                                return fillIn('[data-test-slack-url-input]', 'https://hooks.slack.com/services/1275958430');\n\n                            case 19:\n                                _context4.next = 21;\n                                return click('[data-test-send-notification-button]');\n\n                            case 21:\n\n                                (0, _chai.expect)(find('.gh-notification').length, 'number of notifications').to.equal(1);\n                                (0, _chai.expect)(find('#slack-settings .error .response').text().trim(), 'inline validation response').to.equal('');\n\n                                server.put('/settings/', function () {\n                                    return new _emberCliMirage.default.Response(422, {}, {\n                                        errors: [{\n                                            errorType: 'ValidationError',\n                                            message: 'Test error'\n                                        }]\n                                    });\n                                });\n\n                                _context4.next = 26;\n                                return click('.gh-notification .gh-notification-close');\n\n                            case 26:\n                                _context4.next = 28;\n                                return click('[data-test-send-notification-button]');\n\n                            case 28:\n\n                                // we shouldn't try to send the test request if the save fails\n                                _server$pretender$han3 = server.pretender.handledRequests.slice(-1), _server$pretender$han4 = _slicedToArray(_server$pretender$han3, 1), lastRequest = _server$pretender$han4[0];\n\n                                (0, _chai.expect)(lastRequest.url).to.not.match(/\\/slack\\/test/);\n                                (0, _chai.expect)(find('.gh-notification').length, 'check slack notification after api validation error').to.equal(0);\n\n                            case 31:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('warns when leaving without saving', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/apps/slack');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/slack');\n\n                                _context5.next = 5;\n                                return fillIn('[data-test-slack-url-input]', 'https://hooks.slack.com/services/1275958430');\n\n                            case 5:\n                                _context5.next = 7;\n                                return triggerEvent('[data-test-slack-url-input]', 'blur');\n\n                            case 7:\n                                _context5.next = 9;\n                                return visit('/settings/design');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'modal exists').to.equal(1);\n\n                                // Leave without saving\n                                _context5.next = 12;\n                                return click('.fullscreen-modal [data-test-leave-button]'), 'leave without saving';\n\n                            case 12:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/design');\n\n                                _context5.next = 15;\n                                return visit('/settings/apps/slack');\n\n                            case 15:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/slack');\n\n                                // settings were not saved\n                                (0, _chai.expect)(find('[data-test-slack-url-input]').text().trim(), 'Slack Webhook URL').to.equal('');\n\n                            case 17:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/tags-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'ember-test-helpers/wait', 'ember-cli-mirage', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'ghost-admin/tests/helpers/adapter-error', 'chai', 'ember-concurrency'], function (_destroyApp, _startApp, _wait, _emberCliMirage, _mocha, _emberSimpleAuth, _adapterError, _chai, _emberConcurrency) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    // Grabbed from keymaster's testing code because Ember's `keyEvent` helper\n    // is for some reason not triggering the events in a way that keymaster detects:\n    // https://github.com/madrobby/keymaster/blob/master/test/keymaster.html#L31\n    var modifierMap = {\n        16: 'shiftKey',\n        18: 'altKey',\n        17: 'ctrlKey',\n        91: 'metaKey'\n    };\n    var keydown = function keydown(code, modifiers, el) {\n        var event = document.createEvent('Event');\n        event.initEvent('keydown', true, true);\n        event.keyCode = code;\n        if (modifiers && modifiers.length > 0) {\n            for (var i in modifiers) {\n                event[modifierMap[modifiers[i]]] = true;\n            }\n        }\n        (el || document).dispatchEvent(event);\n    };\n    var keyup = function keyup(code, el) {\n        var event = document.createEvent('Event');\n        event.initEvent('keyup', true, true);\n        event.keyCode = code;\n        (el || document).dispatchEvent(event);\n    };\n\n    (0, _mocha.describe)('Acceptance: Settings - Tags', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/tags');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL()).to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/design');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it renders, can be navigated, can edit, create & delete tags', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var tag1, tag2;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                tag1 = server.create('tag');\n                                tag2 = server.create('tag');\n                                _context3.next = 4;\n                                return visit('/settings/tags');\n\n                            case 4:\n                                _context3.next = 6;\n                                return (0, _wait.default)();\n\n                            case 6:\n\n                                // it redirects to first tag\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/tags/' + tag1.slug);\n\n                                // it has correct page title\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Settings - Tags - Test Blog');\n\n                                // it highlights nav menu\n                                (0, _chai.expect)(Ember.$('.gh-nav-settings-tags').hasClass('active'), 'highlights nav menu item').to.be.true;\n\n                                // it lists all tags\n                                (0, _chai.expect)(find('.settings-tags .settings-tag').length, 'tag list count').to.equal(2);\n                                (0, _chai.expect)(find('.settings-tags .settings-tag:first .tag-title').text(), 'tag list item title').to.equal(tag1.name);\n\n                                // it highlights selected tag\n                                (0, _chai.expect)(find('a[href=\"/ghost/settings/tags/' + tag1.slug + '\"]').hasClass('active'), 'highlights selected tag').to.be.true;\n\n                                // it shows selected tag form\n                                (0, _chai.expect)(find('.tag-settings-pane h4').text(), 'settings pane title').to.equal('Tag Settings');\n                                (0, _chai.expect)(find('.tag-settings-pane input[name=\"name\"]').val(), 'loads correct tag into form').to.equal(tag1.name);\n\n                                // click the second tag in the list\n                                _context3.next = 16;\n                                return click('.tag-edit-button:last');\n\n                            case 16:\n\n                                // it navigates to selected tag\n                                (0, _chai.expect)(currentURL(), 'url after clicking tag').to.equal('/settings/tags/' + tag2.slug);\n\n                                // it highlights selected tag\n                                (0, _chai.expect)(find('a[href=\"/ghost/settings/tags/' + tag2.slug + '\"]').hasClass('active'), 'highlights selected tag').to.be.true;\n\n                                // it shows selected tag form\n                                (0, _chai.expect)(find('.tag-settings-pane input[name=\"name\"]').val(), 'loads correct tag into form').to.equal(tag2.name);\n\n                                // simulate up arrow press\n                                Ember.run(function () {\n                                    keydown(38);\n                                    keyup(38);\n                                });\n\n                                _context3.next = 22;\n                                return (0, _wait.default)();\n\n                            case 22:\n\n                                // it navigates to previous tag\n                                (0, _chai.expect)(currentURL(), 'url after keyboard up arrow').to.equal('/settings/tags/' + tag1.slug);\n\n                                // it highlights selected tag\n                                (0, _chai.expect)(find('a[href=\"/ghost/settings/tags/' + tag1.slug + '\"]').hasClass('active'), 'selects previous tag').to.be.true;\n\n                                // simulate down arrow press\n                                Ember.run(function () {\n                                    keydown(40);\n                                    keyup(40);\n                                });\n\n                                _context3.next = 27;\n                                return (0, _wait.default)();\n\n                            case 27:\n\n                                // it navigates to previous tag\n                                (0, _chai.expect)(currentURL(), 'url after keyboard down arrow').to.equal('/settings/tags/' + tag2.slug);\n\n                                // it highlights selected tag\n                                (0, _chai.expect)(find('a[href=\"/ghost/settings/tags/' + tag2.slug + '\"]').hasClass('active'), 'selects next tag').to.be.true;\n\n                                // trigger save\n                                _context3.next = 31;\n                                return fillIn('.tag-settings-pane input[name=\"name\"]', 'New Name');\n\n                            case 31:\n                                _context3.next = 33;\n                                return triggerEvent('.tag-settings-pane input[name=\"name\"]', 'blur');\n\n                            case 33:\n\n                                // check we update with the data returned from the server\n                                (0, _chai.expect)(find('.settings-tags .settings-tag:last .tag-title').text(), 'tag list updates on save').to.equal('New Name');\n                                (0, _chai.expect)(find('.tag-settings-pane input[name=\"name\"]').val(), 'settings form updates on save').to.equal('New Name');\n\n                                // start new tag\n                                _context3.next = 37;\n                                return click('.view-actions .gh-btn-green');\n\n                            case 37:\n\n                                // it navigates to the new tag route\n                                (0, _chai.expect)(currentURL(), 'new tag URL').to.equal('/settings/tags/new');\n\n                                // it displays the new tag form\n                                (0, _chai.expect)(find('.tag-settings-pane h4').text(), 'settings pane title').to.equal('New Tag');\n\n                                // all fields start blank\n                                find('.tag-settings-pane input, .tag-settings-pane textarea').each(function () {\n                                    (0, _chai.expect)(Ember.$(this).val(), 'input field for ' + Ember.$(this).attr('name')).to.be.blank;\n                                });\n\n                                // save new tag\n                                _context3.next = 42;\n                                return fillIn('.tag-settings-pane input[name=\"name\"]', 'New Tag');\n\n                            case 42:\n                                _context3.next = 44;\n                                return triggerEvent('.tag-settings-pane input[name=\"name\"]', 'blur');\n\n                            case 44:\n                                _context3.next = 46;\n                                return (0, _emberConcurrency.timeout)(100);\n\n                            case 46:\n\n                                // it redirects to the new tag's URL\n                                (0, _chai.expect)(currentURL(), 'URL after tag creation').to.equal('/settings/tags/new-tag');\n\n                                // it adds the tag to the list and selects\n                                (0, _chai.expect)(find('.settings-tags .settings-tag').length, 'tag list count after creation').to.equal(3);\n                                (0, _chai.expect)(find('.settings-tags .settings-tag:last .tag-title').text(), 'new tag list item title').to.equal('New Tag');\n                                (0, _chai.expect)(find('a[href=\"/ghost/settings/tags/new-tag\"]').hasClass('active'), 'highlights new tag').to.be.true;\n\n                                // delete tag\n                                _context3.next = 52;\n                                return click('.settings-menu-delete-button');\n\n                            case 52:\n                                _context3.next = 54;\n                                return click('.fullscreen-modal .gh-btn-red');\n\n                            case 54:\n\n                                // it redirects to the first tag\n                                (0, _chai.expect)(currentURL(), 'URL after tag deletion').to.equal('/settings/tags/' + tag1.slug);\n\n                                // it removes the tag from the list\n                                (0, _chai.expect)(find('.settings-tags .settings-tag').length, 'tag list count after deletion').to.equal(2);\n\n                            case 56:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n\n            // TODO: Unskip and fix\n            // skipped because it was failing most of the time on Travis\n            // see https://github.com/TryGhost/Ghost/issues/8805\n            _mocha.it.skip('loads tag via slug when accessed directly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                server.createList('tag', 2);\n\n                                _context4.next = 3;\n                                return visit('/settings/tags/tag-1');\n\n                            case 3:\n                                _context4.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _chai.expect)(currentURL(), 'URL after direct load').to.equal('/settings/tags/tag-1');\n\n                                // it loads all other tags\n                                (0, _chai.expect)(find('.settings-tags .settings-tag').length, 'tag list count after direct load').to.equal(2);\n\n                                // selects tag in list\n                                (0, _chai.expect)(find('a[href=\"/ghost/settings/tags/tag-1\"]').hasClass('active'), 'highlights requested tag').to.be.true;\n\n                                // shows requested tag in settings pane\n                                (0, _chai.expect)(find('.tag-settings-pane input[name=\"name\"]').val(), 'loads correct tag into form').to.equal('Tag 1');\n\n                            case 9:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('shows the internal tag label', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                server.create('tag', { name: '#internal-tag', slug: 'hash-internal-tag', visibility: 'internal' });\n\n                                _context5.next = 3;\n                                return visit('settings/tags/');\n\n                            case 3:\n                                _context5.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _chai.expect)(currentURL()).to.equal('/settings/tags/hash-internal-tag');\n\n                                (0, _chai.expect)(find('.settings-tags .settings-tag').length, 'tag list count').to.equal(1);\n\n                                (0, _chai.expect)(find('.settings-tags .settings-tag:first .label.label-blue').length, 'internal tag label').to.equal(1);\n\n                                (0, _chai.expect)(find('.settings-tags .settings-tag:first .label.label-blue').text().trim(), 'internal tag label text').to.equal('internal');\n\n                            case 9:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('redirects to 404 when tag does not exist', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                server.get('/tags/slug/unknown/', function () {\n                                    return new _emberCliMirage.Response(404, { 'Content-Type': 'application/json' }, { errors: [{ message: 'Tag not found.', errorType: 'NotFoundError' }] });\n                                });\n\n                                (0, _adapterError.errorOverride)();\n\n                                _context6.next = 4;\n                                return visit('settings/tags/unknown');\n\n                            case 4:\n\n                                (0, _adapterError.errorReset)();\n                                (0, _chai.expect)(currentPath()).to.equal('error404');\n                                (0, _chai.expect)(currentURL()).to.equal('/settings/tags/unknown');\n\n                            case 7:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/settings/unsplash-test', ['ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_ctrlOrCmd, _destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Settings - Apps - Unsplash', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/settings/apps/unsplash');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/settings/apps/unsplash');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects to team page when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/settings/apps/unsplash');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 6:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it can activate/deactivate', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$db$settings$w, _server$db$settings$w2, setting, _server$db$settings$w3, _server$db$settings$w4;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return visit('/settings/apps/unsplash');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/unsplash');\n\n                                // verify we don't have an unsplash setting fixture loaded\n                                (0, _chai.expect)(server.db.settings.where({ key: 'unsplash' }), 'initial server settings').to.be.empty;\n\n                                // it's enabled by default when settings is empty\n                                (0, _chai.expect)(find('[data-test-checkbox=\"unsplash\"]').prop('checked'), 'checked by default').to.be.true;\n\n                                // trigger a save\n                                _context4.next = 7;\n                                return click('[data-test-save-button]');\n\n                            case 7:\n\n                                // server should now have an unsplash setting\n                                _server$db$settings$w = server.db.settings.where({ key: 'unsplash' }), _server$db$settings$w2 = _slicedToArray(_server$db$settings$w, 1), setting = _server$db$settings$w2[0];\n\n                                (0, _chai.expect)(setting, 'unsplash setting after save').to.exist;\n                                (0, _chai.expect)(setting.value).to.equal('{\"isActive\":true}');\n\n                                // disable\n                                _context4.next = 12;\n                                return click(find('[data-test-checkbox=\"unsplash\"]'));\n\n                            case 12:\n                                _context4.next = 14;\n                                return triggerEvent('.gh-app', 'keydown', {\n                                    keyCode: 83, // s\n                                    metaKey: _ctrlOrCmd.default === 'command',\n                                    ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                });\n\n                            case 14:\n                                _server$db$settings$w3 = server.db.settings.where({ key: 'unsplash' });\n                                _server$db$settings$w4 = _slicedToArray(_server$db$settings$w3, 1);\n                                setting = _server$db$settings$w4[0];\n\n                                (0, _chai.expect)(setting.value).to.equal('{\"isActive\":false}');\n\n                            case 18:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('warns when leaving without saving', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return visit('/settings/apps/unsplash');\n\n                            case 2:\n\n                                // has correct url\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/unsplash');\n\n                                (0, _chai.expect)(find('[data-test-checkbox=\"unsplash\"]').prop('checked'), 'checked by default').to.be.true;\n\n                                _context5.next = 6;\n                                return click('[data-test-checkbox=\"unsplash\"]');\n\n                            case 6:\n\n                                (0, _chai.expect)(find('[data-test-checkbox=\"unsplash\"]').prop('checked'), 'Unsplash checkbox').to.be.false;\n\n                                _context5.next = 9;\n                                return visit('/settings/labs');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'modal exists').to.equal(1);\n\n                                // Leave without saving\n                                _context5.next = 12;\n                                return click('.fullscreen-modal [data-test-leave-button]'), 'leave without saving';\n\n                            case 12:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/labs');\n\n                                _context5.next = 15;\n                                return visit('/settings/apps/unsplash');\n\n                            case 15:\n\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/apps/unsplash');\n\n                                // settings were not saved\n                                (0, _chai.expect)(find('[data-test-checkbox=\"unsplash\"]').prop('checked'), 'Unsplash checkbox').to.be.true;\n\n                            case 17:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/setup-test', ['ghost-admin/tests/helpers/destroy-app', 'moment', 'ghost-admin/tests/helpers/start-app', 'ember-cli-mirage', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _moment, _startApp, _emberCliMirage, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Setup', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects if already authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            _context.next = 4;\n                            return (0, _emberSimpleAuth.authenticateSession)(application);\n\n                        case 4:\n                            _context.next = 6;\n                            return visit('/setup/one');\n\n                        case 6:\n                            (0, _chai.expect)(currentURL()).to.equal('/');\n\n                            _context.next = 9;\n                            return visit('/setup/two');\n\n                        case 9:\n                            (0, _chai.expect)(currentURL()).to.equal('/');\n\n                            _context.next = 12;\n                            return visit('/setup/three');\n\n                        case 12:\n                            (0, _chai.expect)(currentURL()).to.equal('/');\n\n                        case 13:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects to signin if already set up', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            // mimick an already setup blog\n                            server.get('/authentication/setup/', function () {\n                                return {\n                                    setup: [{ status: true }]\n                                };\n                            });\n\n                            _context2.next = 3;\n                            return (0, _emberSimpleAuth.invalidateSession)(application);\n\n                        case 3:\n                            _context2.next = 5;\n                            return visit('/setup');\n\n                        case 5:\n                            (0, _chai.expect)(currentURL()).to.equal('/signin');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.describe)('with a new blog', function () {\n            (0, _mocha.beforeEach)(function () {\n                // mimick a new blog\n                server.get('/authentication/setup/', function () {\n                    return {\n                        setup: [{ status: false }]\n                    };\n                });\n            });\n\n            (0, _mocha.it)('has a successful happy path', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                (0, _emberSimpleAuth.invalidateSession)(application);\n                                server.loadFixtures('roles');\n\n                                _context3.next = 4;\n                                return visit('/setup');\n\n                            case 4:\n\n                                // it redirects to step one\n                                (0, _chai.expect)(currentURL(), 'url after accessing /setup').to.equal('/setup/one');\n\n                                // it highlights first step\n                                (0, _chai.expect)(find('.gh-flow-nav .step:first-of-type').hasClass('active')).to.be.true;\n                                (0, _chai.expect)(find('.gh-flow-nav .step:nth-of-type(2)').hasClass('active')).to.be.false;\n                                (0, _chai.expect)(find('.gh-flow-nav .step:nth-of-type(3)').hasClass('active')).to.be.false;\n\n                                // it displays download count (count increments for each ajax call\n                                // and polling is disabled in testing so our count should be \"1\"\n                                (0, _chai.expect)(find('.gh-flow-content em').text().trim()).to.equal('1');\n\n                                _context3.next = 11;\n                                return click('.gh-btn-green');\n\n                            case 11:\n\n                                // it transitions to step two\n                                (0, _chai.expect)(currentURL(), 'url after clicking \"Create your account\"').to.equal('/setup/two');\n\n                                // email field is focused by default\n                                // NOTE: $('x').is(':focus') doesn't work in phantomjs CLI runner\n                                // https://github.com/ariya/phantomjs/issues/10427\n                                (0, _chai.expect)(find('[data-test-blog-title-input]').get(0) === document.activeElement, 'blog title has focus').to.be.true;\n\n                                _context3.next = 15;\n                                return click('.gh-btn-green');\n\n                            case 15:\n\n                                // it marks fields as invalid\n                                (0, _chai.expect)(find('.form-group.error').length, 'number of invalid fields').to.equal(4);\n\n                                // it displays error messages\n                                (0, _chai.expect)(find('.error .response').length, 'number of in-line validation messages').to.equal(4);\n\n                                // it displays main error\n                                (0, _chai.expect)(find('.main-error').length, 'main error is displayed').to.equal(1);\n\n                                // enter valid details and submit\n                                _context3.next = 20;\n                                return fillIn('[data-test-email-input]', 'test@example.com');\n\n                            case 20:\n                                _context3.next = 22;\n                                return fillIn('[data-test-name-input]', 'Test User');\n\n                            case 22:\n                                _context3.next = 24;\n                                return fillIn('[data-test-password-input]', 'thisissupersafe');\n\n                            case 24:\n                                _context3.next = 26;\n                                return fillIn('[data-test-blog-title-input]', 'Blog Title');\n\n                            case 26:\n                                _context3.next = 28;\n                                return click('.gh-btn-green');\n\n                            case 28:\n\n                                // it transitions to step 3\n                                (0, _chai.expect)(currentURL(), 'url after submitting step two').to.equal('/setup/three');\n\n                                // submit button is \"disabled\"\n                                (0, _chai.expect)(find('button[type=\"submit\"]').hasClass('gh-btn-green'), 'invite button with no emails is white').to.be.false;\n\n                                // fill in a valid email\n                                _context3.next = 32;\n                                return fillIn('[name=\"users\"]', 'new-user@example.com');\n\n                            case 32:\n\n                                // submit button is \"enabled\"\n                                (0, _chai.expect)(find('button[type=\"submit\"]').hasClass('gh-btn-green'), 'invite button is green with valid email address').to.be.true;\n\n                                // submit the invite form\n                                _context3.next = 35;\n                                return click('button[type=\"submit\"]');\n\n                            case 35:\n\n                                // it redirects to the home / \"content\" screen\n                                (0, _chai.expect)(currentURL(), 'url after submitting invites').to.equal('/');\n\n                                // it displays success alert\n                                (0, _chai.expect)(find('.gh-alert-green').length, 'number of success alerts').to.equal(1);\n\n                            case 37:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n\n            (0, _mocha.it)('handles validation errors in step 2', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var postCount;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                postCount = 0;\n\n\n                                (0, _emberSimpleAuth.invalidateSession)(application);\n                                server.loadFixtures('roles');\n\n                                server.post('/authentication/setup', function () {\n                                    postCount += 1;\n\n                                    // validation error\n                                    if (postCount === 1) {\n                                        return new _emberCliMirage.Response(422, {}, {\n                                            errors: [{\n                                                errorType: 'ValidationError',\n                                                message: 'Server response message'\n                                            }]\n                                        });\n                                    }\n\n                                    // server error\n                                    if (postCount === 2) {\n                                        return new _emberCliMirage.Response(500, {}, null);\n                                    }\n                                });\n\n                                _context4.next = 6;\n                                return visit('/setup/two');\n\n                            case 6:\n                                _context4.next = 8;\n                                return click('.gh-btn-green');\n\n                            case 8:\n\n                                // non-server validation\n                                (0, _chai.expect)(find('.main-error').text().trim(), 'error text').to.not.be.blank;\n\n                                _context4.next = 11;\n                                return fillIn('[data-test-email-input]', 'test@example.com');\n\n                            case 11:\n                                _context4.next = 13;\n                                return fillIn('[data-test-name-input]', 'Test User');\n\n                            case 13:\n                                _context4.next = 15;\n                                return fillIn('[data-test-password-input]', 'thisissupersafe');\n\n                            case 15:\n                                _context4.next = 17;\n                                return fillIn('[data-test-blog-title-input]', 'Blog Title');\n\n                            case 17:\n                                _context4.next = 19;\n                                return click('.gh-btn-green');\n\n                            case 19:\n\n                                (0, _chai.expect)(find('.main-error').text().trim(), 'error text').to.equal('Server response message');\n\n                                // second post - simulated server error\n                                _context4.next = 22;\n                                return click('.gh-btn-green');\n\n                            case 22:\n\n                                (0, _chai.expect)(find('.main-error').text().trim(), 'error text').to.be.blank;\n\n                                (0, _chai.expect)(find('.gh-alert-red').length, 'number of alerts').to.equal(1);\n\n                            case 24:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('handles invalid origin error on step 2', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                // mimick the API response for an invalid origin\n                                server.post('/authentication/token', function () {\n                                    return new _emberCliMirage.Response(401, {}, {\n                                        errors: [{\n                                            errorType: 'UnauthorizedError',\n                                            message: 'Access Denied from url: unknown.com. Please use the url configured in config.js.'\n                                        }]\n                                    });\n                                });\n\n                                (0, _emberSimpleAuth.invalidateSession)(application);\n                                server.loadFixtures('roles');\n\n                                _context5.next = 5;\n                                return visit('/setup/two');\n\n                            case 5:\n                                _context5.next = 7;\n                                return fillIn('[data-test-email-input]', 'test@example.com');\n\n                            case 7:\n                                _context5.next = 9;\n                                return fillIn('[data-test-name-input]', 'Test User');\n\n                            case 9:\n                                _context5.next = 11;\n                                return fillIn('[data-test-password-input]', 'thisissupersafe');\n\n                            case 11:\n                                _context5.next = 13;\n                                return fillIn('[data-test-blog-title-input]', 'Blog Title');\n\n                            case 13:\n                                _context5.next = 15;\n                                return click('.gh-btn-green');\n\n                            case 15:\n\n                                // button should not be spinning\n                                (0, _chai.expect)(find('.gh-btn-green .spinner').length, 'button has spinner').to.equal(0);\n                                // we should show an error message\n                                (0, _chai.expect)(find('.main-error').text(), 'error text').to.equal('Access Denied from url: unknown.com. Please use the url configured in config.js.');\n\n                            case 17:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('handles validation errors in step 3', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                var input, postCount, button, formGroup;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                input = '[name=\"users\"]';\n                                postCount = 0;\n                                button = void 0, formGroup = void 0;\n\n\n                                (0, _emberSimpleAuth.invalidateSession)(application);\n                                server.loadFixtures('roles');\n\n                                server.post('/invites/', function (_ref7) {\n                                    var invites = _ref7.invites;\n\n                                    var attrs = this.normalizedRequestAttrs();\n\n                                    postCount += 1;\n\n                                    // invalid\n                                    if (postCount === 1) {\n                                        return new _emberCliMirage.Response(422, {}, {\n                                            errors: [{\n                                                errorType: 'ValidationError',\n                                                message: 'Dummy validation error'\n                                            }]\n                                        });\n                                    }\n\n                                    // TODO: duplicated from mirage/config/invites - extract method?\n                                    attrs.token = invites.all().models.length + '-token';\n                                    attrs.expires = _moment.default.utc().add(1, 'day').valueOf();\n                                    attrs.createdAt = _moment.default.utc().format();\n                                    attrs.createdBy = 1;\n                                    attrs.updatedAt = _moment.default.utc().format();\n                                    attrs.updatedBy = 1;\n                                    attrs.status = 'sent';\n\n                                    return invites.create(attrs);\n                                });\n\n                                // complete step 2 so we can access step 3\n                                _context6.next = 8;\n                                return visit('/setup/two');\n\n                            case 8:\n                                _context6.next = 10;\n                                return fillIn('[data-test-email-input]', 'test@example.com');\n\n                            case 10:\n                                _context6.next = 12;\n                                return fillIn('[data-test-name-input]', 'Test User');\n\n                            case 12:\n                                _context6.next = 14;\n                                return fillIn('[data-test-password-input]', 'thisissupersafe');\n\n                            case 14:\n                                _context6.next = 16;\n                                return fillIn('[data-test-blog-title-input]', 'Blog Title');\n\n                            case 16:\n                                _context6.next = 18;\n                                return click('.gh-btn-green');\n\n                            case 18:\n\n                                // default field/button state\n                                formGroup = find('.gh-flow-invite .form-group');\n                                button = find('.gh-flow-invite button[type=\"submit\"]');\n\n                                (0, _chai.expect)(formGroup.hasClass('error'), 'default field has error class').to.be.false;\n\n                                (0, _chai.expect)(button.text().trim(), 'default button text').to.equal('Invite some users');\n\n                                (0, _chai.expect)(button.hasClass('gh-btn-minor'), 'default button is disabled').to.be.true;\n\n                                // no users submitted state\n                                _context6.next = 25;\n                                return click('.gh-flow-invite button[type=\"submit\"]');\n\n                            case 25:\n\n                                (0, _chai.expect)(formGroup.hasClass('error'), 'no users submitted field has error class').to.be.true;\n\n                                (0, _chai.expect)(button.text().trim(), 'no users submitted button text').to.equal('No users to invite');\n\n                                (0, _chai.expect)(button.hasClass('gh-btn-minor'), 'no users submitted button is disabled').to.be.true;\n\n                                // single invalid email\n                                _context6.next = 30;\n                                return fillIn(input, 'invalid email');\n\n                            case 30:\n                                _context6.next = 32;\n                                return triggerEvent(input, 'blur');\n\n                            case 32:\n\n                                (0, _chai.expect)(formGroup.hasClass('error'), 'invalid field has error class').to.be.true;\n\n                                (0, _chai.expect)(button.text().trim(), 'single invalid button text').to.equal('1 invalid email address');\n\n                                (0, _chai.expect)(button.hasClass('gh-btn-minor'), 'invalid email button is disabled').to.be.true;\n\n                                // multiple invalid emails\n                                _context6.next = 37;\n                                return fillIn(input, 'invalid email\\nanother invalid address');\n\n                            case 37:\n                                _context6.next = 39;\n                                return triggerEvent(input, 'blur');\n\n                            case 39:\n\n                                (0, _chai.expect)(button.text().trim(), 'multiple invalid button text').to.equal('2 invalid email addresses');\n\n                                // single valid email\n                                _context6.next = 42;\n                                return fillIn(input, 'invited@example.com');\n\n                            case 42:\n                                _context6.next = 44;\n                                return triggerEvent(input, 'blur');\n\n                            case 44:\n\n                                (0, _chai.expect)(formGroup.hasClass('error'), 'valid field has error class').to.be.false;\n\n                                (0, _chai.expect)(button.text().trim(), 'single valid button text').to.equal('Invite 1 user');\n\n                                (0, _chai.expect)(button.hasClass('gh-btn-green'), 'valid email button is enabled').to.be.true;\n\n                                // multiple valid emails\n                                _context6.next = 49;\n                                return fillIn(input, 'invited1@example.com\\ninvited2@example.com');\n\n                            case 49:\n                                _context6.next = 51;\n                                return triggerEvent(input, 'blur');\n\n                            case 51:\n\n                                (0, _chai.expect)(button.text().trim(), 'multiple valid button text').to.equal('Invite 2 users');\n\n                                // submit invitations with simulated failure on 1 invite\n                                _context6.next = 54;\n                                return click('.gh-btn-green');\n\n                            case 54:\n\n                                // it redirects to the home / \"content\" screen\n                                (0, _chai.expect)(currentURL(), 'url after submitting invites').to.equal('/');\n\n                                // it displays success alert\n                                (0, _chai.expect)(find('.gh-alert-green').length, 'number of success alerts').to.equal(1);\n\n                                // it displays failure alert\n                                (0, _chai.expect)(find('.gh-alert-red').length, 'number of failure alerts').to.equal(1);\n\n                            case 57:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/signin-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'ember-cli-mirage', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _startApp, _emberCliMirage, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Signin', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects if already authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            _context.next = 4;\n                            return (0, _emberSimpleAuth.authenticateSession)(application);\n\n                        case 4:\n                            _context.next = 6;\n                            return visit('/signin');\n\n                        case 6:\n\n                            (0, _chai.expect)(currentURL(), 'current url').to.equal('/');\n\n                        case 7:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.describe)('when attempting to signin', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role], slug: 'test-user' });\n\n                server.post('/authentication/token', function (schema, _ref2) {\n                    var requestBody = _ref2.requestBody;\n\n                    var _Ember$$deparam = Ember.$.deparam(requestBody),\n                        grantType = _Ember$$deparam.grant_type,\n                        username = _Ember$$deparam.username,\n                        password = _Ember$$deparam.password,\n                        clientId = _Ember$$deparam.client_id;\n\n                    (0, _chai.expect)(grantType, 'grant type').to.equal('password');\n                    (0, _chai.expect)(username, 'username').to.equal('test@example.com');\n                    (0, _chai.expect)(clientId, 'client id').to.equal('ghost-admin');\n\n                    if (password === 'thisissupersafe') {\n                        return {\n                            access_token: 'MirageAccessToken',\n                            expires_in: 3600,\n                            refresh_token: 'MirageRefreshToken',\n                            token_type: 'Bearer'\n                        };\n                    } else {\n                        return new _emberCliMirage.Response(401, {}, {\n                            errors: [{\n                                errorType: 'UnauthorizedError',\n                                message: 'Invalid Password'\n                            }]\n                        });\n                    }\n                    /* eslint-enable camelcase */\n                });\n            });\n\n            (0, _mocha.it)('errors correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return (0, _emberSimpleAuth.invalidateSession)(application);\n\n                            case 2:\n                                _context2.next = 4;\n                                return visit('/signin');\n\n                            case 4:\n\n                                (0, _chai.expect)(currentURL(), 'signin url').to.equal('/signin');\n\n                                (0, _chai.expect)(find('input[name=\"identification\"]').length, 'email input field').to.equal(1);\n                                (0, _chai.expect)(find('input[name=\"password\"]').length, 'password input field').to.equal(1);\n\n                                _context2.next = 9;\n                                return click('.gh-btn-blue');\n\n                            case 9:\n\n                                (0, _chai.expect)(find('.form-group.error').length, 'number of invalid fields').to.equal(2);\n\n                                (0, _chai.expect)(find('.main-error').length, 'main error is displayed').to.equal(1);\n\n                                _context2.next = 13;\n                                return fillIn('[name=\"identification\"]', 'test@example.com');\n\n                            case 13:\n                                _context2.next = 15;\n                                return fillIn('[name=\"password\"]', 'invalid');\n\n                            case 15:\n                                _context2.next = 17;\n                                return click('.gh-btn-blue');\n\n                            case 17:\n\n                                (0, _chai.expect)(currentURL(), 'current url').to.equal('/signin');\n\n                                (0, _chai.expect)(find('.main-error').length, 'main error is displayed').to.equal(1);\n\n                                (0, _chai.expect)(find('.main-error').text().trim(), 'main error text').to.equal('Invalid Password');\n\n                            case 20:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n\n            (0, _mocha.it)('submits successfully', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                (0, _emberSimpleAuth.invalidateSession)(application);\n\n                                _context3.next = 3;\n                                return visit('/signin');\n\n                            case 3:\n                                (0, _chai.expect)(currentURL(), 'current url').to.equal('/signin');\n\n                                _context3.next = 6;\n                                return fillIn('[name=\"identification\"]', 'test@example.com');\n\n                            case 6:\n                                _context3.next = 8;\n                                return fillIn('[name=\"password\"]', 'thisissupersafe');\n\n                            case 8:\n                                _context3.next = 10;\n                                return click('.gh-btn-blue');\n\n                            case 10:\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/');\n\n                            case 11:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/signup-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'chai'], function (_destroyApp, _startApp, _mocha, _chai) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Signup', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('can signup successfully', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            server.get('/authentication/invitation', function () {\n                                return {\n                                    invitation: [{ valid: true }]\n                                };\n                            });\n\n                            server.post('/authentication/invitation/', function (_ref2, _ref3) {\n                                var users = _ref2.users;\n                                var requestBody = _ref3.requestBody;\n\n                                var params = JSON.parse(requestBody);\n                                (0, _chai.expect)(params.invitation[0].name).to.equal('Test User');\n                                (0, _chai.expect)(params.invitation[0].email).to.equal('kevin+test2@ghost.org');\n                                (0, _chai.expect)(params.invitation[0].password).to.equal('thisissupersafe');\n                                (0, _chai.expect)(params.invitation[0].token).to.equal('MTQ3MDM0NjAxNzkyOXxrZXZpbit0ZXN0MkBnaG9zdC5vcmd8MmNEblFjM2c3ZlFUajluTks0aUdQU0dmdm9ta0xkWGY2OEZ1V2dTNjZVZz0');\n\n                                // ensure that `/users/me/` request returns a user\n                                var role = server.create('role', { name: 'Author' });\n                                users.create({ email: 'kevin@test2@ghost.org', roles: [role] });\n\n                                return {\n                                    invitation: [{\n                                        message: 'Invitation accepted.'\n                                    }]\n                                };\n                            });\n\n                            // token details:\n                            // \"1470346017929|kevin+test2@ghost.org|2cDnQc3g7fQTj9nNK4iGPSGfvomkLdXf68FuWgS66Ug=\"\n                            _context.next = 4;\n                            return visit('/signup/MTQ3MDM0NjAxNzkyOXxrZXZpbit0ZXN0MkBnaG9zdC5vcmd8MmNEblFjM2c3ZlFUajluTks0aUdQU0dmdm9ta0xkWGY2OEZ1V2dTNjZVZz0');\n\n                        case 4:\n\n                            (0, _chai.expect)(currentPath()).to.equal('signup');\n\n                            // email address should be pre-filled and disabled\n                            (0, _chai.expect)(find('input[name=\"email\"]').val(), 'email field value').to.equal('kevin+test2@ghost.org');\n\n                            (0, _chai.expect)(find('input[name=\"email\"]').is(':disabled'), 'email field is disabled').to.be.true;\n\n                            // focus out in Name field triggers inline error\n                            _context.next = 9;\n                            return triggerEvent('input[name=\"name\"]', 'blur');\n\n                        case 9:\n\n                            (0, _chai.expect)(find('input[name=\"name\"]').closest('.form-group').hasClass('error'), 'name field group has error class when empty').to.be.true;\n\n                            (0, _chai.expect)(find('input[name=\"name\"]').closest('.form-group').find('.response').text().trim(), 'name inline-error text').to.match(/Please enter a name/);\n\n                            // entering text in Name field clears error\n                            _context.next = 13;\n                            return fillIn('input[name=\"name\"]', 'Test User');\n\n                        case 13:\n                            _context.next = 15;\n                            return triggerEvent('input[name=\"name\"]', 'blur');\n\n                        case 15:\n\n                            (0, _chai.expect)(find('input[name=\"name\"]').closest('.form-group').hasClass('error'), 'name field loses error class after text input').to.be.false;\n\n                            (0, _chai.expect)(find('input[name=\"name\"]').closest('.form-group').find('.response').text().trim(), 'name field error is removed after text input').to.equal('');\n\n                            // check password validation\n                            // focus out in password field triggers inline error\n                            // no password\n                            _context.next = 19;\n                            return triggerEvent('input[name=\"password\"]', 'blur');\n\n                        case 19:\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').hasClass('error'), 'password field group has error class when empty').to.be.true;\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').find('.response').text().trim(), 'password field error text').to.match(/must be at least 10 characters/);\n\n                            // password too short\n                            _context.next = 23;\n                            return fillIn('input[name=\"password\"]', 'short');\n\n                        case 23:\n                            _context.next = 25;\n                            return triggerEvent('input[name=\"password\"]', 'blur');\n\n                        case 25:\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').find('.response').text().trim(), 'password field error text').to.match(/must be at least 10 characters/);\n\n                            // password must not be a bad password\n                            _context.next = 28;\n                            return fillIn('input[name=\"password\"]', '1234567890');\n\n                        case 28:\n                            _context.next = 30;\n                            return triggerEvent('input[name=\"password\"]', 'blur');\n\n                        case 30:\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').find('.response').text().trim(), 'password field error text').to.match(/you cannot use an insecure password/);\n\n                            // password must not be a disallowed password\n                            _context.next = 33;\n                            return fillIn('input[name=\"password\"]', 'password99');\n\n                        case 33:\n                            _context.next = 35;\n                            return triggerEvent('input[name=\"password\"]', 'blur');\n\n                        case 35:\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').find('.response').text().trim(), 'password field error text').to.match(/you cannot use an insecure password/);\n\n                            // password must not have repeating characters\n                            _context.next = 38;\n                            return fillIn('input[name=\"password\"]', '2222222222');\n\n                        case 38:\n                            _context.next = 40;\n                            return triggerEvent('input[name=\"password\"]', 'blur');\n\n                        case 40:\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').find('.response').text().trim(), 'password field error text').to.match(/you cannot use an insecure password/);\n\n                            // entering valid text in Password field clears error\n                            _context.next = 43;\n                            return fillIn('input[name=\"password\"]', 'thisissupersafe');\n\n                        case 43:\n                            _context.next = 45;\n                            return triggerEvent('input[name=\"password\"]', 'blur');\n\n                        case 45:\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').hasClass('error'), 'password field loses error class after text input').to.be.false;\n\n                            (0, _chai.expect)(find('input[name=\"password\"]').closest('.form-group').find('.response').text().trim(), 'password field error is removed after text input').to.equal('');\n\n                            // submitting sends correct details and redirects to content screen\n                            _context.next = 49;\n                            return click('.gh-btn-green');\n\n                        case 49:\n\n                            (0, _chai.expect)(currentPath()).to.equal('posts.index');\n\n                        case 50:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects if already logged in');\n        (0, _mocha.it)('redirects with alert on invalid token');\n        (0, _mocha.it)('redirects with alert on non-existant or expired token');\n    });\n});","define('ghost-admin/tests/acceptance/subscribers-test', ['ghost-admin/tests/helpers/destroy-app', 'ghost-admin/tests/helpers/start-app', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'chai'], function (_destroyApp, _startApp, _mocha, _emberSimpleAuth, _chai) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Subscribers', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/subscribers');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL()).to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects editors to posts', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role] });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 5;\n                            return visit('/subscribers');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL()).to.equal('/');\n                            (0, _chai.expect)(find('.gh-nav-main a:contains(\"Subscribers\")').length, 'sidebar link is visible').to.equal(0);\n\n                        case 7:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects authors to posts', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role] });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 5;\n                            return visit('/subscribers');\n\n                        case 5:\n\n                            (0, _chai.expect)(currentURL()).to.equal('/');\n                            (0, _chai.expect)(find('.gh-nav-main a:contains(\"Subscribers\")').length, 'sidebar link is visible').to.equal(0);\n\n                        case 7:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('an admin', function () {\n            (0, _mocha.beforeEach)(function () {\n                var role = server.create('role', { name: 'Administrator' });\n                server.create('user', { roles: [role] });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('can manage subscribers', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var _server$pretender$han, _server$pretender$han2, lastRequest, createdAtHeader, _server$pretender$han3, _server$pretender$han4, _server$pretender$han5, _server$pretender$han6;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                server.createList('subscriber', 40);\n\n                                (0, _emberSimpleAuth.authenticateSession)(application);\n                                _context4.next = 4;\n                                return visit('/');\n\n                            case 4:\n                                _context4.next = 6;\n                                return click('.gh-nav-main a:contains(\"Subscribers\")');\n\n                            case 6:\n\n                                // it navigates to the correct page\n                                (0, _chai.expect)(currentPath()).to.equal('subscribers.index');\n\n                                // it has correct page title\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Subscribers - Test Blog');\n\n                                // it loads the first page\n                                (0, _chai.expect)(find('.subscribers-table .lt-body .lt-row').length, 'number of subscriber rows').to.equal(30);\n\n                                // it shows the total number of subscribers\n                                (0, _chai.expect)(find('[data-test-total-subscribers]').text().trim(), 'displayed subscribers total').to.equal('(40)');\n\n                                // it defaults to sorting by created_at desc\n                                _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), lastRequest = _server$pretender$han2[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.order).to.equal('created_at desc');\n\n                                createdAtHeader = find('.subscribers-table th:contains(\"Subscription Date\")');\n\n                                (0, _chai.expect)(createdAtHeader.hasClass('is-sorted'), 'createdAt column is sorted').to.be.true;\n                                (0, _chai.expect)(createdAtHeader.find('.gh-icon-descending').length, 'createdAt column has descending icon').to.equal(1);\n\n                                // click the column to re-order\n                                _context4.next = 17;\n                                return click('th:contains(\"Subscription Date\")');\n\n                            case 17:\n                                _server$pretender$han3 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han4 = _slicedToArray(_server$pretender$han3, 1);\n                                lastRequest = _server$pretender$han4[0];\n\n                                (0, _chai.expect)(lastRequest.queryParams.order).to.equal('created_at asc');\n\n                                createdAtHeader = find('.subscribers-table th:contains(\"Subscription Date\")');\n                                (0, _chai.expect)(createdAtHeader.find('.gh-icon-ascending').length, 'createdAt column has ascending icon').to.equal(1);\n\n                                // TODO: scroll test disabled as ember-light-table doesn't calculate\n                                // the scroll trigger element's positioning against the scroll\n                                // container - https://github.com/offirgolan/ember-light-table/issues/201\n                                //\n                                // // scroll to the bottom of the table to simulate infinite scroll\n                                // await find('.subscribers-table').scrollTop(find('.subscribers-table .ember-light-table').height() - 50);\n                                //\n                                // // trigger infinite scroll\n                                // await triggerEvent('.subscribers-table tbody', 'scroll');\n                                //\n                                // // it loads the next page\n                                // expect(find('.subscribers-table .lt-body .lt-row').length, 'number of subscriber rows after infinite-scroll')\n                                //     .to.equal(40);\n\n                                // click the add subscriber button\n                                _context4.next = 25;\n                                return click('.gh-btn:contains(\"Add Subscriber\")');\n\n                            case 25:\n\n                                // it displays the add subscriber modal\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'add subscriber modal displayed').to.equal(1);\n\n                                // cancel the modal\n                                _context4.next = 28;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Cancel\")');\n\n                            case 28:\n\n                                // it closes the add subscriber modal\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'add subscriber modal displayed after cancel').to.equal(0);\n\n                                // save a new subscriber\n                                _context4.next = 31;\n                                return click('.gh-btn:contains(\"Add Subscriber\")');\n\n                            case 31:\n                                _context4.next = 33;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'test@example.com');\n\n                            case 33:\n                                _context4.next = 35;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Add\")');\n\n                            case 35:\n\n                                // the add subscriber modal is closed\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'add subscriber modal displayed after save').to.equal(0);\n\n                                // the subscriber is added to the table\n                                (0, _chai.expect)(find('.subscribers-table .lt-body .lt-row:first-of-type .lt-cell:first-of-type').text().trim(), 'first email in list after addition').to.equal('test@example.com');\n\n                                // the table is scrolled to the top\n                                // TODO: implement scroll to new record after addition\n                                // expect(find('.subscribers-table').scrollTop(), 'scroll position after addition')\n                                //     .to.equal(0);\n\n                                // the subscriber total is updated\n                                (0, _chai.expect)(find('[data-test-total-subscribers]').text().trim(), 'subscribers total after addition').to.equal('(41)');\n\n                                // saving a duplicate subscriber\n                                _context4.next = 40;\n                                return click('.gh-btn:contains(\"Add Subscriber\")');\n\n                            case 40:\n                                _context4.next = 42;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'test@example.com');\n\n                            case 42:\n                                _context4.next = 44;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Add\")');\n\n                            case 44:\n\n                                // the validation error is displayed\n                                (0, _chai.expect)(find('.fullscreen-modal .error .response').text().trim(), 'duplicate email validation').to.equal('Email already exists.');\n\n                                // the subscriber is not added to the table\n                                (0, _chai.expect)(find('.lt-cell:contains(test@example.com)').length, 'number of \"test@example.com rows\"').to.equal(1);\n\n                                // the subscriber total is unchanged\n                                (0, _chai.expect)(find('[data-test-total-subscribers]').text().trim(), 'subscribers total after failed add').to.equal('(41)');\n\n                                // deleting a subscriber\n                                _context4.next = 49;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Cancel\")');\n\n                            case 49:\n                                _context4.next = 51;\n                                return click('.subscribers-table tbody tr:first-of-type button:last-of-type');\n\n                            case 51:\n\n                                // it displays the delete subscriber modal\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'delete subscriber modal displayed').to.equal(1);\n\n                                // cancel the modal\n                                _context4.next = 54;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Cancel\")');\n\n                            case 54:\n\n                                // it closes the add subscriber modal\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'delete subscriber modal displayed after cancel').to.equal(0);\n\n                                _context4.next = 57;\n                                return click('.subscribers-table tbody tr:first-of-type button:last-of-type');\n\n                            case 57:\n                                _context4.next = 59;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Delete\")');\n\n                            case 59:\n\n                                // the add subscriber modal is closed\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'delete subscriber modal displayed after confirm').to.equal(0);\n\n                                // the subscriber is removed from the table\n                                (0, _chai.expect)(find('.subscribers-table .lt-body .lt-row:first-of-type .lt-cell:first-of-type').text().trim(), 'first email in list after addition').to.not.equal('test@example.com');\n\n                                // the subscriber total is updated\n                                (0, _chai.expect)(find('[data-test-total-subscribers]').text().trim(), 'subscribers total after addition').to.equal('(40)');\n\n                                // click the import subscribers button\n                                _context4.next = 64;\n                                return click('.gh-btn:contains(\"Import CSV\")');\n\n                            case 64:\n\n                                // it displays the import subscribers modal\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'import subscribers modal displayed').to.equal(1);\n                                (0, _chai.expect)(find('.fullscreen-modal input[type=\"file\"]').length, 'import modal contains file input').to.equal(1);\n\n                                // cancel the modal\n                                _context4.next = 68;\n                                return click('.fullscreen-modal .gh-btn:contains(\"Cancel\")');\n\n                            case 68:\n\n                                // it closes the import subscribers modal\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'import subscribers modal displayed after cancel').to.equal(0);\n\n                                _context4.next = 71;\n                                return click('.gh-btn:contains(\"Import CSV\")');\n\n                            case 71:\n                                _context4.next = 73;\n                                return fileUpload('.fullscreen-modal input[type=\"file\"]', ['test'], { name: 'test.csv' });\n\n                            case 73:\n\n                                // modal title changes\n                                (0, _chai.expect)(find('.fullscreen-modal h1').text().trim(), 'import modal title after import').to.equal('Import Successful');\n\n                                // modal button changes\n                                (0, _chai.expect)(find('.fullscreen-modal .modal-footer button').text().trim(), 'import modal button text after import').to.equal('Close');\n\n                                // subscriber total is updated\n                                (0, _chai.expect)(find('[data-test-total-subscribers]').text().trim(), 'subscribers total after import').to.equal('(90)');\n\n                                // table is reset\n                                _server$pretender$han5 = server.pretender.handledRequests.slice(-1);\n                                _server$pretender$han6 = _slicedToArray(_server$pretender$han5, 1);\n                                lastRequest = _server$pretender$han6[0];\n\n                                (0, _chai.expect)(lastRequest.url, 'endpoint requested after import').to.match(/\\/subscribers\\/\\?/);\n                                (0, _chai.expect)(lastRequest.queryParams.page, 'page requested after import').to.equal('1');\n\n                                (0, _chai.expect)(find('.subscribers-table .lt-body .lt-row').length, 'number of rows in table after import').to.equal(30);\n\n                                // close modal\n\n                            case 82:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/acceptance/team-test', ['ghost-admin/utils/ctrl-or-cmd', 'ghost-admin/tests/helpers/destroy-app', 'moment', 'ghost-admin/tests/helpers/start-app', 'ghost-admin/utils/window-proxy', 'ember-cli-mirage', 'mocha', 'ghost-admin/tests/helpers/ember-simple-auth', 'ghost-admin/tests/helpers/adapter-error', 'chai'], function (_ctrlOrCmd, _destroyApp, _moment, _startApp, _windowProxy, _emberCliMirage, _mocha, _emberSimpleAuth, _adapterError, _chai) {\n    'use strict';\n\n    function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                arr2[i] = arr[i];\n            }\n\n            return arr2;\n        } else {\n            return Array.from(arr);\n        }\n    }\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Acceptance: Team', function () {\n        var application = void 0;\n\n        (0, _mocha.beforeEach)(function () {\n            application = (0, _startApp.default)();\n        });\n\n        (0, _mocha.afterEach)(function () {\n            (0, _destroyApp.default)(application);\n        });\n\n        (0, _mocha.it)('redirects to signin when not authenticated', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _emberSimpleAuth.invalidateSession)(application);\n                            _context.next = 3;\n                            return visit('/team');\n\n                        case 3:\n\n                            (0, _chai.expect)(currentURL()).to.equal('/signin');\n\n                        case 4:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('redirects correctly when authenticated as author', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Author' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            server.create('user', { slug: 'no-access' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context2.next = 6;\n                            return visit('/team/no-access');\n\n                        case 6:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-user');\n\n                        case 7:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('redirects correctly when authenticated as editor', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var role;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            role = server.create('role', { name: 'Editor' });\n\n                            server.create('user', { roles: [role], slug: 'test-user' });\n\n                            server.create('user', { slug: 'no-access' });\n\n                            (0, _emberSimpleAuth.authenticateSession)(application);\n                            _context3.next = 6;\n                            return visit('/team/no-access');\n\n                        case 6:\n\n                            (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                        case 7:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.describe)('when logged in as admin', function () {\n            var admin = void 0,\n                adminRole = void 0,\n                suspendedUser = void 0;\n\n            (0, _mocha.beforeEach)(function () {\n                server.loadFixtures('roles');\n                adminRole = server.schema.roles.find(1);\n\n                admin = server.create('user', { email: 'admin@example.com', roles: [adminRole] });\n\n                // add an expired invite\n                server.create('invite', { expires: _moment.default.utc().subtract(1, 'day').valueOf() });\n\n                // add a suspended user\n                suspendedUser = server.create('user', { email: 'suspended@example.com', roles: [adminRole], status: 'inactive' });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('it renders and navigates correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var user1, user2;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                user1 = server.create('user');\n                                user2 = server.create('user');\n                                _context4.next = 4;\n                                return visit('/team');\n\n                            case 4:\n\n                                // doesn't do any redirecting\n                                (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team');\n\n                                // it has correct page title\n                                (0, _chai.expect)(document.title, 'page title').to.equal('Team - Test Blog');\n\n                                // it shows active users in active section\n                                (0, _chai.expect)(find('[data-test-active-users] [data-test-user-id]').length, 'number of active users').to.equal(3);\n                                (0, _chai.expect)(find('[data-test-active-users] [data-test-user-id=\"' + user1.id + '\"]')).to.exist;\n                                (0, _chai.expect)(find('[data-test-active-users] [data-test-user-id=\"' + user2.id + '\"]')).to.exist;\n                                (0, _chai.expect)(find('[data-test-active-users] [data-test-user-id=\"' + admin.id + '\"]')).to.exist;\n\n                                // it shows suspended users in suspended section\n                                (0, _chai.expect)(find('[data-test-suspended-users] [data-test-user-id]').length, 'number of suspended users').to.equal(1);\n                                (0, _chai.expect)(find('[data-test-suspended-users] [data-test-user-id=\"' + suspendedUser.id + '\"]')).to.exist;\n\n                                _context4.next = 14;\n                                return click('[data-test-user-id=\"' + user2.id + '\"]');\n\n                            case 14:\n\n                                // url is correct\n                                (0, _chai.expect)(currentURL(), 'url after clicking user').to.equal('/team/' + user2.slug);\n\n                                // title is correct\n                                (0, _chai.expect)(document.title, 'title after clicking user').to.equal('Team - User - Test Blog');\n\n                                // view title should exist and be linkable and active\n                                (0, _chai.expect)(find('[data-test-screen-title] a[href=\"/ghost/team\"]').hasClass('active'), 'has linkable url back to team main page').to.be.true;\n\n                                _context4.next = 19;\n                                return click('[data-test-screen-title] a');\n\n                            case 19:\n\n                                // url should be /team again\n                                (0, _chai.expect)(currentURL(), 'url after clicking back').to.equal('/team');\n\n                            case 20:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('can manage invites', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var roleOptions, checkOwnerExists, checkSelectedIsAuthor;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                checkSelectedIsAuthor = function checkSelectedIsAuthor() {\n                                    for (var i in roleOptions) {\n                                        if (roleOptions[i].selected) {\n                                            return roleOptions[i].text === 'Author';\n                                        }\n                                    }\n                                    return false;\n                                };\n\n                                checkOwnerExists = function checkOwnerExists() {\n                                    for (var i in roleOptions) {\n                                        if (roleOptions[i].tagName === 'option' && roleOptions[i].text === 'Owner') {\n                                            return true;\n                                        }\n                                    }\n                                    return false;\n                                };\n\n                                _context5.next = 4;\n                                return visit('/team');\n\n                            case 4:\n\n                                // invite user button exists\n                                (0, _chai.expect)(find('.view-actions .gh-btn-green').text().trim(), 'invite people button text').to.equal('Invite People');\n\n                                // existing users are listed\n                                (0, _chai.expect)(find('[data-test-user-id]').length, 'initial number of active users').to.equal(2);\n\n                                (0, _chai.expect)(find('[data-test-user-id=\"1\"] [data-test-role-name]').text().trim(), 'active user\\'s role label').to.equal('Administrator');\n\n                                // existing invites are shown\n                                (0, _chai.expect)(find('[data-test-invite-id]').length, 'initial number of invited users').to.equal(1);\n\n                                (0, _chai.expect)(find('[data-test-invite-id=\"1\"] [data-test-invite-description]').text(), 'expired invite description').to.match(/expired/);\n\n                                // remove expired invite\n                                _context5.next = 11;\n                                return click('[data-test-invite-id=\"1\"] [data-test-revoke-button]');\n\n                            case 11:\n\n                                (0, _chai.expect)(find('[data-test-invite-id]').length, 'initial number of invited users').to.equal(0);\n\n                                // click the invite people button\n                                _context5.next = 14;\n                                return click('.view-actions .gh-btn-green');\n\n                            case 14:\n                                roleOptions = find('.fullscreen-modal select[name=\"role\"] option');\n\n\n                                // modal is displayed\n                                (0, _chai.expect)(find('.fullscreen-modal h1').text().trim(), 'correct modal is displayed').to.equal('Invite a New User');\n\n                                // number of roles is correct\n                                (0, _chai.expect)(find('.fullscreen-modal select[name=\"role\"] option').length, 'number of selectable roles').to.equal(3);\n\n                                (0, _chai.expect)(checkOwnerExists(), 'owner role isn\\'t available').to.be.false;\n                                (0, _chai.expect)(checkSelectedIsAuthor(), 'author role is selected initially').to.be.true;\n\n                                // submit valid invite form\n                                _context5.next = 21;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'invite1@example.com');\n\n                            case 21:\n                                _context5.next = 23;\n                                return click('.fullscreen-modal .gh-btn-green');\n\n                            case 23:\n\n                                // modal closes\n                                (0, _chai.expect)(find('.fullscreen-modal').length, 'number of modals after sending invite').to.equal(0);\n\n                                // invite is displayed, has correct e-mail + role\n                                (0, _chai.expect)(find('[data-test-invite-id]').length, 'number of invites after first invite').to.equal(1);\n\n                                (0, _chai.expect)(find('[data-test-invite-id=\"2\"] [data-test-email]').text().trim(), 'displayed email of first invite').to.equal('invite1@example.com');\n\n                                (0, _chai.expect)(find('[data-test-invite-id=\"2\"] [data-test-role-name]').text().trim(), 'displayed role of first invite').to.equal('Author');\n\n                                (0, _chai.expect)(find('[data-test-invite-id=\"2\"] [data-test-invite-description]').text(), 'new invite description').to.match(/expires/);\n\n                                // number of users is unchanged\n                                (0, _chai.expect)(find('[data-test-user-id]').length, 'number of active users after first invite').to.equal(2);\n\n                                // submit new invite with different role\n                                _context5.next = 31;\n                                return click('.view-actions .gh-btn-green');\n\n                            case 31:\n                                _context5.next = 33;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'invite2@example.com');\n\n                            case 33:\n                                _context5.next = 35;\n                                return fillIn('.fullscreen-modal select[name=\"role\"]', '2');\n\n                            case 35:\n                                _context5.next = 37;\n                                return click('.fullscreen-modal .gh-btn-green');\n\n                            case 37:\n\n                                // number of invites increases\n                                (0, _chai.expect)(find('[data-test-invite-id]').length, 'number of invites after second invite').to.equal(2);\n\n                                // invite has correct e-mail + role\n                                (0, _chai.expect)(find('[data-test-invite-id=\"3\"] [data-test-email]').text().trim(), 'displayed email of second invite').to.equal('invite2@example.com');\n\n                                (0, _chai.expect)(find('[data-test-invite-id=\"3\"] [data-test-role-name]').text().trim(), 'displayed role of second invite').to.equal('Editor');\n\n                                // submit invite form with existing user\n                                _context5.next = 42;\n                                return click('.view-actions .gh-btn-green');\n\n                            case 42:\n                                _context5.next = 44;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'admin@example.com');\n\n                            case 44:\n                                _context5.next = 46;\n                                return click('.fullscreen-modal .gh-btn-green');\n\n                            case 46:\n\n                                // validation message is displayed\n                                (0, _chai.expect)(find('.fullscreen-modal .error .response').text().trim(), 'inviting existing user error').to.equal('A user with that email address already exists.');\n\n                                // submit invite form with existing invite\n                                _context5.next = 49;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'invite1@example.com');\n\n                            case 49:\n                                _context5.next = 51;\n                                return click('.fullscreen-modal .gh-btn-green');\n\n                            case 51:\n\n                                // validation message is displayed\n                                (0, _chai.expect)(find('.fullscreen-modal .error .response').text().trim(), 'inviting invited user error').to.equal('A user with that email address was already invited.');\n\n                                // submit invite form with an invalid email\n                                _context5.next = 54;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'test');\n\n                            case 54:\n                                _context5.next = 56;\n                                return click('.fullscreen-modal .gh-btn-green');\n\n                            case 56:\n\n                                // validation message is displayed\n                                (0, _chai.expect)(find('.fullscreen-modal .error .response').text().trim(), 'inviting invalid email error').to.equal('Invalid Email.');\n\n                                _context5.next = 59;\n                                return click('.fullscreen-modal a.close');\n\n                            case 59:\n                                _context5.next = 61;\n                                return click('[data-test-invite-id=\"3\"] [data-test-revoke-button]');\n\n                            case 61:\n\n                                // number of invites decreases\n                                (0, _chai.expect)(find('[data-test-invite-id]').length, 'number of invites after revoke').to.equal(1);\n\n                                // notification is displayed\n                                (0, _chai.expect)(find('.gh-notification').text().trim(), 'notifications contain revoke').to.match(/Invitation revoked\\. \\(invite2@example\\.com\\)/);\n\n                                // correct invite is removed\n                                (0, _chai.expect)(find('[data-test-invite-id] [data-test-email]').text().trim(), 'displayed email of remaining invite').to.equal('invite1@example.com');\n\n                                // add another invite to test ordering on resend\n                                _context5.next = 66;\n                                return click('.view-actions .gh-btn-green');\n\n                            case 66:\n                                _context5.next = 68;\n                                return fillIn('.fullscreen-modal input[name=\"email\"]', 'invite3@example.com');\n\n                            case 68:\n                                _context5.next = 70;\n                                return click('.fullscreen-modal .gh-btn-green');\n\n                            case 70:\n\n                                // new invite should be last in the list\n                                (0, _chai.expect)(find('[data-test-invite-id]:last [data-test-email]').text().trim(), 'last invite email in list').to.equal('invite3@example.com');\n\n                                // resend first invite\n                                _context5.next = 73;\n                                return click('[data-test-invite-id=\"2\"] [data-test-resend-button]');\n\n                            case 73:\n\n                                // notification is displayed\n                                (0, _chai.expect)(find('.gh-notification').text().trim(), 'notifications contain resend').to.match(/Invitation resent! \\(invite1@example\\.com\\)/);\n\n                                // first invite is still at the top\n                                (0, _chai.expect)(find('[data-test-invite-id]:first-of-type [data-test-email]').text().trim(), 'first invite email in list').to.equal('invite1@example.com');\n\n                                // regression test: can revoke a resent invite\n                                _context5.next = 77;\n                                return click('[data-test-invite-id]:first-of-type [data-test-resend-button]');\n\n                            case 77:\n                                _context5.next = 79;\n                                return click('[data-test-invite-id]:first-of-type [data-test-revoke-button]');\n\n                            case 79:\n\n                                // number of invites decreases\n                                (0, _chai.expect)(find('[data-test-invite-id]').length, 'number of invites after resend/revoke').to.equal(1);\n\n                                // notification is displayed\n                                (0, _chai.expect)(find('.gh-notification').text().trim(), 'notifications contain revoke after resend/revoke').to.match(/Invitation revoked\\. \\(invite1@example\\.com\\)/);\n\n                            case 81:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('can manage suspended users', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.next = 2;\n                                return visit('/team');\n\n                            case 2:\n                                _context6.next = 4;\n                                return click('[data-test-user-id=\"' + suspendedUser.id + '\"]');\n\n                            case 4:\n\n                                (0, _chai.expect)(find('[data-test-suspended-badge]')).to.exist;\n\n                                _context6.next = 7;\n                                return click('[data-test-user-actions]');\n\n                            case 7:\n                                _context6.next = 9;\n                                return click('[data-test-unsuspend-button]');\n\n                            case 9:\n                                _context6.next = 11;\n                                return click('[data-test-modal-confirm]');\n\n                            case 11:\n                                _context6.next = 13;\n                                return click('[data-test-team-link]');\n\n                            case 13:\n                                // suspendedUser is now in active list\n                                (0, _chai.expect)(find('[data-test-active-users] [data-test-user-id=\"' + suspendedUser.id + '\"]')).to.exist;\n\n                                // no suspended users\n                                (0, _chai.expect)(find('[data-test-suspended-users] [data-test-user-id]').length).to.equal(0);\n\n                                _context6.next = 17;\n                                return click('[data-test-user-id=\"' + suspendedUser.id + '\"]');\n\n                            case 17:\n                                _context6.next = 19;\n                                return click('[data-test-user-actions]');\n\n                            case 19:\n                                _context6.next = 21;\n                                return click('[data-test-suspend-button]');\n\n                            case 21:\n                                _context6.next = 23;\n                                return click('[data-test-modal-confirm]');\n\n                            case 23:\n                                (0, _chai.expect)(find('[data-test-suspended-badge]')).to.exist;\n\n                            case 24:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('can delete users', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var user1, user2, post;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                user1 = server.create('user');\n                                user2 = server.create('user');\n                                post = server.create('post');\n\n\n                                user2.posts = [post];\n\n                                _context7.next = 6;\n                                return visit('/team');\n\n                            case 6:\n                                _context7.next = 8;\n                                return click('[data-test-user-id=\"' + user1.id + '\"]');\n\n                            case 8:\n                                _context7.next = 10;\n                                return click('button.delete');\n\n                            case 10:\n                                (0, _chai.expect)(find('.fullscreen-modal .modal-content:contains(\"delete this user\")').length, 'user deletion modal displayed after button click').to.equal(1);\n\n                                // user has no posts so no warning about post deletion\n                                (0, _chai.expect)(find('.fullscreen-modal .modal-content:contains(\"is the author of\")').length, 'deleting user with no posts has no post count').to.equal(0);\n\n                                // cancelling user deletion closes modal\n                                _context7.next = 14;\n                                return click('.fullscreen-modal button:contains(\"Cancel\")');\n\n                            case 14:\n                                (0, _chai.expect)(find('.fullscreen-modal').length === 0, 'delete user modal is closed when cancelling').to.be.true;\n\n                                // deleting a user with posts\n                                _context7.next = 17;\n                                return visit('/team');\n\n                            case 17:\n                                _context7.next = 19;\n                                return click('[data-test-user-id=\"' + user2.id + '\"]');\n\n                            case 19:\n                                _context7.next = 21;\n                                return click('button.delete');\n\n                            case 21:\n                                // user has  posts so should warn about post deletion\n                                (0, _chai.expect)(find('.fullscreen-modal .modal-content:contains(\"1 post created by this user\")').length, 'deleting user with posts has post count').to.equal(1);\n\n                                _context7.next = 24;\n                                return click('.fullscreen-modal button:contains(\"Delete\")');\n\n                            case 24:\n                                // redirected to team page\n                                (0, _chai.expect)(currentURL()).to.equal('/team');\n\n                                // deleted user is not in list\n                                (0, _chai.expect)(find('[data-test-user-id=\"' + user2.id + '\"]').length, 'deleted user is not in user list after deletion').to.equal(0);\n\n                            case 26:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            (0, _mocha.describe)('existing user', function () {\n                var user = void 0,\n                    newLocation = void 0,\n                    originalReplaceState = void 0;\n\n                (0, _mocha.beforeEach)(function () {\n                    user = server.create('user', {\n                        slug: 'test-1',\n                        name: 'Test User',\n                        facebook: 'test',\n                        twitter: '@test'\n                    });\n\n                    originalReplaceState = _windowProxy.default.replaceState;\n                    _windowProxy.default.replaceState = function (params, title, url) {\n                        newLocation = url;\n                    };\n                    newLocation = undefined;\n                });\n\n                (0, _mocha.afterEach)(function () {\n                    _windowProxy.default.replaceState = originalReplaceState;\n                });\n\n                (0, _mocha.it)('input fields reset and validate correctly', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                    var _this = this;\n\n                    var _server$pretender$han, _server$pretender$han2, lastRequest, params, testSocialInput, testFacebookValidation, testTwitterValidation, _server$pretender$han3, _server$pretender$han4, newRequest;\n\n                    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                        while (1) {\n                            switch (_context11.prev = _context11.next) {\n                                case 0:\n                                    _context11.next = 2;\n                                    return visit('/team/test-1');\n\n                                case 2:\n\n                                    (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-1');\n                                    (0, _chai.expect)(find('[data-test-name-input]').val(), 'current user name').to.equal('Test User');\n\n                                    (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Save');\n\n                                    // test empty user name\n                                    _context11.next = 7;\n                                    return fillIn('[data-test-name-input]', '');\n\n                                case 7:\n                                    _context11.next = 9;\n                                    return triggerEvent('[data-test-name-input]', 'blur');\n\n                                case 9:\n\n                                    (0, _chai.expect)(find('.user-details-bottom .first-form-group').hasClass('error'), 'username input is in error state with blank input').to.be.true;\n\n                                    // test too long user name\n                                    _context11.next = 12;\n                                    return fillIn('[data-test-name-input]', new Array(195).join('a'));\n\n                                case 12:\n                                    _context11.next = 14;\n                                    return triggerEvent('[data-test-name-input]', 'blur');\n\n                                case 14:\n\n                                    (0, _chai.expect)(find('.user-details-bottom .first-form-group').hasClass('error'), 'username input is in error state with too long input').to.be.true;\n\n                                    // reset name field\n                                    _context11.next = 17;\n                                    return fillIn('[data-test-name-input]', 'Test User');\n\n                                case 17:\n\n                                    (0, _chai.expect)(find('[data-test-slug-input]').val(), 'slug value is default').to.equal('test-1');\n\n                                    _context11.next = 20;\n                                    return fillIn('[data-test-slug-input]', '');\n\n                                case 20:\n                                    _context11.next = 22;\n                                    return triggerEvent('[data-test-slug-input]', 'blur');\n\n                                case 22:\n\n                                    (0, _chai.expect)(find('[data-test-slug-input]').val(), 'slug value is reset to original upon empty string').to.equal('test-1');\n\n                                    // Save changes\n                                    _context11.next = 25;\n                                    return click('[data-test-save-button]');\n\n                                case 25:\n\n                                    (0, _chai.expect)(find('[data-test-save-button]').text().trim(), 'save button text').to.equal('Saved');\n\n                                    // CMD-S shortcut works\n                                    _context11.next = 28;\n                                    return fillIn('[data-test-slug-input]', 'Test User');\n\n                                case 28:\n                                    _context11.next = 30;\n                                    return triggerEvent('.gh-app', 'keydown', {\n                                        keyCode: 83, // s\n                                        metaKey: _ctrlOrCmd.default === 'command',\n                                        ctrlKey: _ctrlOrCmd.default === 'ctrl'\n                                    });\n\n                                case 30:\n\n                                    // we've already saved in this test so there's no on-screen indication\n                                    // that we've had another save, check the request was fired instead\n                                    _server$pretender$han = server.pretender.handledRequests.slice(-1), _server$pretender$han2 = _slicedToArray(_server$pretender$han, 1), lastRequest = _server$pretender$han2[0];\n                                    params = JSON.parse(lastRequest.requestBody);\n\n\n                                    (0, _chai.expect)(params.users[0].name).to.equal('Test User');\n\n                                    // check that the history state has been updated\n                                    (0, _chai.expect)(newLocation).to.equal('Test User');\n\n                                    _context11.next = 36;\n                                    return fillIn('[data-test-slug-input]', 'white space');\n\n                                case 36:\n                                    _context11.next = 38;\n                                    return triggerEvent('[data-test-slug-input]', 'blur');\n\n                                case 38:\n\n                                    (0, _chai.expect)(find('[data-test-slug-input]').val(), 'slug value is correctly dasherized').to.equal('white-space');\n\n                                    _context11.next = 41;\n                                    return fillIn('[data-test-email-input]', 'thisisnotanemail');\n\n                                case 41:\n                                    _context11.next = 43;\n                                    return triggerEvent('[data-test-email-input]', 'blur');\n\n                                case 43:\n\n                                    (0, _chai.expect)(find('.user-details-bottom .form-group:nth-of-type(3)').hasClass('error'), 'email input should be in error state with invalid email').to.be.true;\n\n                                    _context11.next = 46;\n                                    return fillIn('[data-test-email-input]', 'test@example.com');\n\n                                case 46:\n                                    _context11.next = 48;\n                                    return fillIn('[data-test-location-input]', new Array(160).join('a'));\n\n                                case 48:\n                                    _context11.next = 50;\n                                    return triggerEvent('[data-test-location-input]', 'blur');\n\n                                case 50:\n\n                                    (0, _chai.expect)(find('[data-test-location-input]').closest('.form-group').hasClass('error'), 'location input should be in error state').to.be.true;\n\n                                    _context11.next = 53;\n                                    return fillIn('[data-test-location-input]', '');\n\n                                case 53:\n                                    _context11.next = 55;\n                                    return fillIn('[data-test-website-input]', 'thisisntawebsite');\n\n                                case 55:\n                                    _context11.next = 57;\n                                    return triggerEvent('[data-test-website-input]', 'blur');\n\n                                case 57:\n\n                                    (0, _chai.expect)(find('[data-test-website-input]').closest('.form-group').hasClass('error'), 'website input should be in error state').to.be.true;\n\n                                    testSocialInput = function () {\n                                        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(type, input, expectedValue) {\n                                            var expectedError = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n                                            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                                while (1) {\n                                                    switch (_context8.prev = _context8.next) {\n                                                        case 0:\n                                                            _context8.next = 2;\n                                                            return fillIn('[data-test-' + type + '-input]', input);\n\n                                                        case 2:\n                                                            _context8.next = 4;\n                                                            return triggerEvent('[data-test-' + type + '-input]', 'blur');\n\n                                                        case 4:\n\n                                                            (0, _chai.expect)(find('[data-test-' + type + '-input]').val(), type + ' value for ' + input).to.equal(expectedValue);\n\n                                                            (0, _chai.expect)(find('[data-test-' + type + '-error]').text().trim(), type + ' validation response for ' + input).to.equal(expectedError);\n\n                                                            (0, _chai.expect)(find('[data-test-' + type + '-input]').closest('.form-group').hasClass('error'), type + ' input should be in error state with \\'' + input + '\\'').to.equal(!!expectedError);\n\n                                                        case 7:\n                                                        case 'end':\n                                                            return _context8.stop();\n                                                    }\n                                                }\n                                            }, _callee8, this);\n                                        }));\n\n                                        return function testSocialInput(_x2, _x3, _x4) {\n                                            return _ref9.apply(this, arguments);\n                                        };\n                                    }();\n\n                                    testFacebookValidation = function () {\n                                        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                                            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                                                args[_key] = arguments[_key];\n                                            }\n\n                                            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                                                while (1) {\n                                                    switch (_context9.prev = _context9.next) {\n                                                        case 0:\n                                                            return _context9.abrupt('return', testSocialInput.apply(undefined, ['facebook'].concat(_toConsumableArray(args))));\n\n                                                        case 1:\n                                                        case 'end':\n                                                            return _context9.stop();\n                                                    }\n                                                }\n                                            }, _callee9, _this);\n                                        }));\n\n                                        return function testFacebookValidation() {\n                                            return _ref10.apply(this, arguments);\n                                        };\n                                    }();\n\n                                    testTwitterValidation = function () {\n                                        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                                            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                                                args[_key2] = arguments[_key2];\n                                            }\n\n                                            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                                                while (1) {\n                                                    switch (_context10.prev = _context10.next) {\n                                                        case 0:\n                                                            return _context10.abrupt('return', testSocialInput.apply(undefined, ['twitter'].concat(_toConsumableArray(args))));\n\n                                                        case 1:\n                                                        case 'end':\n                                                            return _context10.stop();\n                                                    }\n                                                }\n                                            }, _callee10, _this);\n                                        }));\n\n                                        return function testTwitterValidation() {\n                                            return _ref11.apply(this, arguments);\n                                        };\n                                    }();\n\n                                    // Testing Facebook input\n\n                                    // displays initial value\n\n\n                                    (0, _chai.expect)(find('[data-test-facebook-input]').val(), 'initial facebook value').to.equal('https://www.facebook.com/test');\n\n                                    _context11.next = 64;\n                                    return triggerEvent('[data-test-facebook-input]', 'focus');\n\n                                case 64:\n                                    _context11.next = 66;\n                                    return triggerEvent('[data-test-facebook-input]', 'blur');\n\n                                case 66:\n\n                                    // regression test: we still have a value after the input is\n                                    // focused and then blurred without any changes\n                                    (0, _chai.expect)(find('[data-test-facebook-input]').val(), 'facebook value after blur with no change').to.equal('https://www.facebook.com/test');\n\n                                    _context11.next = 69;\n                                    return testFacebookValidation('facebook.com/username', 'https://www.facebook.com/username');\n\n                                case 69:\n                                    _context11.next = 71;\n                                    return testFacebookValidation('testuser', 'https://www.facebook.com/testuser');\n\n                                case 71:\n                                    _context11.next = 73;\n                                    return testFacebookValidation('ab99', 'https://www.facebook.com/ab99');\n\n                                case 73:\n                                    _context11.next = 75;\n                                    return testFacebookValidation('page/ab99', 'https://www.facebook.com/page/ab99');\n\n                                case 75:\n                                    _context11.next = 77;\n                                    return testFacebookValidation('page/*(&*(%%))', 'https://www.facebook.com/page/*(&*(%%))');\n\n                                case 77:\n                                    _context11.next = 79;\n                                    return testFacebookValidation('facebook.com/pages/some-facebook-page/857469375913?ref=ts', 'https://www.facebook.com/pages/some-facebook-page/857469375913?ref=ts');\n\n                                case 79:\n                                    _context11.next = 81;\n                                    return testFacebookValidation('https://www.facebook.com/groups/savethecrowninn', 'https://www.facebook.com/groups/savethecrowninn');\n\n                                case 81:\n                                    _context11.next = 83;\n                                    return testFacebookValidation('http://github.com/username', 'http://github.com/username', 'The URL must be in a format like https://www.facebook.com/yourPage');\n\n                                case 83:\n                                    _context11.next = 85;\n                                    return testFacebookValidation('http://github.com/pages/username', 'http://github.com/pages/username', 'The URL must be in a format like https://www.facebook.com/yourPage');\n\n                                case 85:\n\n                                    // Testing Twitter input\n\n                                    // loads fixtures and performs transform\n                                    (0, _chai.expect)(find('[data-test-twitter-input]').val(), 'initial twitter value').to.equal('https://twitter.com/test');\n\n                                    _context11.next = 88;\n                                    return triggerEvent('[data-test-twitter-input]', 'focus');\n\n                                case 88:\n                                    _context11.next = 90;\n                                    return triggerEvent('[data-test-twitter-input]', 'blur');\n\n                                case 90:\n\n                                    // regression test: we still have a value after the input is\n                                    // focused and then blurred without any changes\n                                    (0, _chai.expect)(find('[data-test-twitter-input]').val(), 'twitter value after blur with no change').to.equal('https://twitter.com/test');\n\n                                    _context11.next = 93;\n                                    return testTwitterValidation('twitter.com/username', 'https://twitter.com/username');\n\n                                case 93:\n                                    _context11.next = 95;\n                                    return testTwitterValidation('testuser', 'https://twitter.com/testuser');\n\n                                case 95:\n                                    _context11.next = 97;\n                                    return testTwitterValidation('http://github.com/username', 'https://twitter.com/username');\n\n                                case 97:\n                                    _context11.next = 99;\n                                    return testTwitterValidation('*(&*(%%))', '*(&*(%%))', 'The URL must be in a format like https://twitter.com/yourUsername');\n\n                                case 99:\n                                    _context11.next = 101;\n                                    return testTwitterValidation('thisusernamehasmorethan15characters', 'thisusernamehasmorethan15characters', 'Your Username is not a valid Twitter Username');\n\n                                case 101:\n                                    _context11.next = 103;\n                                    return fillIn('[data-test-website-input]', '');\n\n                                case 103:\n                                    _context11.next = 105;\n                                    return fillIn('[data-test-bio-input]', new Array(210).join('a'));\n\n                                case 105:\n                                    _context11.next = 107;\n                                    return triggerEvent('[data-test-bio-input]', 'blur');\n\n                                case 107:\n\n                                    (0, _chai.expect)(find('[data-test-bio-input]').closest('.form-group').hasClass('error'), 'bio input should be in error state').to.be.true;\n\n                                    // password reset ------\n\n                                    // button triggers validation\n                                    _context11.next = 110;\n                                    return click('[data-test-save-pw-button]');\n\n                                case 110:\n\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').closest('.form-group').hasClass('error'), 'new password has error class when blank').to.be.true;\n\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').siblings('.response').text(), 'new password error when blank').to.match(/can't be blank/);\n\n                                    // validates too short password (< 10 characters)\n                                    _context11.next = 114;\n                                    return fillIn('[data-test-new-pass-input]', 'notlong');\n\n                                case 114:\n                                    _context11.next = 116;\n                                    return fillIn('[data-test-ne2-pass-input]', 'notlong');\n\n                                case 116:\n                                    _context11.next = 118;\n                                    return keyEvent('[data-test-new-pass-input]', 'keyup', 13);\n\n                                case 118:\n\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').closest('.form-group').hasClass('error'), 'new password has error class when password too short').to.be.true;\n\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').siblings('.response').text(), 'confirm password error when it\\'s too short').to.match(/at least 10 characters long/);\n\n                                    // validates unsafe password\n                                    _context11.next = 122;\n                                    return fillIn('#user-password-new', 'ghostisawesome');\n\n                                case 122:\n                                    _context11.next = 124;\n                                    return fillIn('#user-new-password-verification', 'ghostisawesome');\n\n                                case 124:\n                                    _context11.next = 126;\n                                    return keyEvent('#user-password-new', 'keyup', 13);\n\n                                case 126:\n\n                                    (0, _chai.expect)(find('#user-password-new').closest('.form-group').hasClass('error'), 'new password has error class when password is insecure').to.be.true;\n\n                                    (0, _chai.expect)(find('#user-password-new').siblings('.response').text(), 'confirm password error when it\\'s insecure').to.match(/you cannot use an insecure password/);\n\n                                    // typing in inputs clears validation\n                                    _context11.next = 130;\n                                    return fillIn('[data-test-new-pass-input]', 'thisissupersafe');\n\n                                case 130:\n                                    _context11.next = 132;\n                                    return triggerEvent('[data-test-new-pass-input]', 'input');\n\n                                case 132:\n\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').closest('.form-group').hasClass('error'), 'password validation is visible after typing').to.be.false;\n\n                                    // enter key triggers action\n                                    _context11.next = 135;\n                                    return keyEvent('[data-test-new-pass-input]', 'keyup', 13);\n\n                                case 135:\n\n                                    (0, _chai.expect)(find('[data-test-ne2-pass-input]').closest('.form-group').hasClass('error'), 'confirm password has error class when it doesn\\'t match').to.be.true;\n\n                                    (0, _chai.expect)(find('[data-test-ne2-pass-input]').siblings('.response').text(), 'confirm password error when it doesn\\'t match').to.match(/do not match/);\n\n                                    // submits with correct details\n                                    _context11.next = 139;\n                                    return fillIn('[data-test-ne2-pass-input]', 'thisissupersafe');\n\n                                case 139:\n                                    _context11.next = 141;\n                                    return click('[data-test-save-pw-button]');\n\n                                case 141:\n\n                                    // hits the endpoint\n                                    _server$pretender$han3 = server.pretender.handledRequests.slice(-1), _server$pretender$han4 = _slicedToArray(_server$pretender$han3, 1), newRequest = _server$pretender$han4[0];\n\n                                    params = JSON.parse(newRequest.requestBody);\n\n                                    (0, _chai.expect)(newRequest.url, 'password request URL').to.match(/\\/users\\/password/);\n\n                                    // eslint-disable-next-line camelcase\n                                    (0, _chai.expect)(params.password[0].user_id).to.equal(user.id.toString());\n                                    (0, _chai.expect)(params.password[0].newPassword).to.equal('thisissupersafe');\n                                    (0, _chai.expect)(params.password[0].ne2Password).to.equal('thisissupersafe');\n\n                                    // clears the fields\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').val(), 'password field after submit').to.be.blank;\n\n                                    (0, _chai.expect)(find('[data-test-ne2-pass-input]').val(), 'password verification field after submit').to.be.blank;\n\n                                    // displays a notification\n                                    (0, _chai.expect)(find('.gh-notifications .gh-notification').length, 'password saved notification is displayed').to.equal(1);\n\n                                case 150:\n                                case 'end':\n                                    return _context11.stop();\n                            }\n                        }\n                    }, _callee11, this);\n                })));\n\n                (0, _mocha.it)('warns when leaving without saving', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                        while (1) {\n                            switch (_context12.prev = _context12.next) {\n                                case 0:\n                                    _context12.next = 2;\n                                    return visit('/team/test-1');\n\n                                case 2:\n\n                                    (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-1');\n\n                                    _context12.next = 5;\n                                    return fillIn('[data-test-slug-input]', 'another slug');\n\n                                case 5:\n                                    _context12.next = 7;\n                                    return triggerEvent('[data-test-slug-input]', 'blur');\n\n                                case 7:\n\n                                    (0, _chai.expect)(find('[data-test-slug-input]').val()).to.be.equal('another-slug');\n\n                                    _context12.next = 10;\n                                    return fillIn('[data-test-facebook-input]', 'testuser');\n\n                                case 10:\n                                    _context12.next = 12;\n                                    return triggerEvent('[data-test-facebook-input]', 'blur');\n\n                                case 12:\n\n                                    (0, _chai.expect)(find('[data-test-facebook-input]').val()).to.be.equal('https://www.facebook.com/testuser');\n\n                                    _context12.next = 15;\n                                    return visit('/settings/team');\n\n                                case 15:\n\n                                    (0, _chai.expect)(find('.fullscreen-modal').length, 'modal exists').to.equal(1);\n\n                                    // Leave without saving\n                                    _context12.next = 18;\n                                    return click('.fullscreen-modal [data-test-leave-button]'), 'leave without saving';\n\n                                case 18:\n\n                                    (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/settings/team');\n\n                                    _context12.next = 21;\n                                    return visit('/team/test-1');\n\n                                case 21:\n\n                                    (0, _chai.expect)(currentURL(), 'currentURL').to.equal('/team/test-1');\n\n                                    // settings were not saved\n                                    (0, _chai.expect)(find('[data-test-slug-input]').val()).to.be.equal('test-1');\n                                    (0, _chai.expect)(find('[data-test-facebook-input]').val()).to.be.equal('https://www.facebook.com/test');\n\n                                case 24:\n                                case 'end':\n                                    return _context12.stop();\n                            }\n                        }\n                    }, _callee12, this);\n                })));\n            });\n\n            (0, _mocha.describe)('own user', function () {\n                (0, _mocha.it)('requires current password when changing password', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n                    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                        while (1) {\n                            switch (_context13.prev = _context13.next) {\n                                case 0:\n                                    _context13.next = 2;\n                                    return visit('/team/' + admin.slug);\n\n                                case 2:\n                                    _context13.next = 4;\n                                    return click('[data-test-save-pw-button]');\n\n                                case 4:\n\n                                    // old password has error\n                                    (0, _chai.expect)(find('[data-test-old-pass-input]').closest('.form-group').hasClass('error'), 'old password has error class when blank').to.be.true;\n\n                                    (0, _chai.expect)(find('[data-test-old-pass-input]').siblings('.response').text(), 'old password error when blank').to.match(/is required/);\n\n                                    // new password has error\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').closest('.form-group').hasClass('error'), 'new password has error class when blank').to.be.true;\n\n                                    (0, _chai.expect)(find('[data-test-new-pass-input]').siblings('.response').text(), 'new password error when blank').to.match(/can't be blank/);\n\n                                    // validation is cleared when typing\n                                    _context13.next = 10;\n                                    return fillIn('[data-test-old-pass-input]', 'password');\n\n                                case 10:\n                                    _context13.next = 12;\n                                    return triggerEvent('[data-test-old-pass-input]', 'input');\n\n                                case 12:\n\n                                    (0, _chai.expect)(find('[data-test-old-pass-input]').closest('.form-group').hasClass('error'), 'old password validation is in error state after typing').to.be.false;\n\n                                case 13:\n                                case 'end':\n                                    return _context13.stop();\n                            }\n                        }\n                    }, _callee13, this);\n                })));\n            });\n\n            (0, _mocha.it)('redirects to 404 when user does not exist', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                    while (1) {\n                        switch (_context14.prev = _context14.next) {\n                            case 0:\n                                server.get('/users/slug/unknown/', function () {\n                                    return new _emberCliMirage.Response(404, { 'Content-Type': 'application/json' }, { errors: [{ message: 'User not found.', errorType: 'NotFoundError' }] });\n                                });\n\n                                (0, _adapterError.errorOverride)();\n\n                                _context14.next = 4;\n                                return visit('/team/unknown');\n\n                            case 4:\n\n                                (0, _adapterError.errorReset)();\n                                (0, _chai.expect)(currentPath()).to.equal('error404');\n                                (0, _chai.expect)(currentURL()).to.equal('/team/unknown');\n\n                            case 7:\n                            case 'end':\n                                return _context14.stop();\n                        }\n                    }\n                }, _callee14, this);\n            })));\n        });\n\n        (0, _mocha.describe)('when logged in as author', function () {\n            var adminRole = void 0,\n                authorRole = void 0;\n\n            (0, _mocha.beforeEach)(function () {\n                adminRole = server.create('role', { name: 'Administrator' });\n                authorRole = server.create('role', { name: 'Author' });\n                server.create('user', { roles: [authorRole] });\n\n                server.get('/invites/', function () {\n                    return new _emberCliMirage.Response(403, {}, {\n                        errors: [{\n                            errorType: 'NoPermissionError',\n                            message: 'You do not have permission to perform this action'\n                        }]\n                    });\n                });\n\n                return (0, _emberSimpleAuth.authenticateSession)(application);\n            });\n\n            (0, _mocha.it)('can access the team page', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                    while (1) {\n                        switch (_context15.prev = _context15.next) {\n                            case 0:\n                                server.create('user', { roles: [adminRole] });\n                                server.create('invite', { roles: [authorRole] });\n\n                                (0, _adapterError.errorOverride)();\n\n                                _context15.next = 5;\n                                return visit('/team');\n\n                            case 5:\n\n                                (0, _adapterError.errorReset)();\n                                (0, _chai.expect)(currentPath()).to.equal('team.index');\n                                (0, _chai.expect)(find('.gh-alert').length).to.equal(0);\n\n                            case 8:\n                            case 'end':\n                                return _context15.stop();\n                        }\n                    }\n                }, _callee15, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/app.lint-test', [], function () {\n  'use strict';\n\n  describe('ESLint | app', function () {\n\n    it('adapters/application.js', function () {\n      // test passed\n    });\n\n    it('adapters/base.js', function () {\n      // test passed\n    });\n\n    it('adapters/embedded-relation-adapter.js', function () {\n      // test passed\n    });\n\n    it('adapters/setting.js', function () {\n      // test passed\n    });\n\n    it('adapters/tag.js', function () {\n      // test passed\n    });\n\n    it('adapters/theme.js', function () {\n      // test passed\n    });\n\n    it('adapters/user.js', function () {\n      // test passed\n    });\n\n    it('app.js', function () {\n      // test passed\n    });\n\n    it('authenticators/oauth2.js', function () {\n      // test passed\n    });\n\n    it('authorizers/oauth2.js', function () {\n      // test passed\n    });\n\n    it('components/gh-activating-list-item.js', function () {\n      // test passed\n    });\n\n    it('components/gh-alert.js', function () {\n      // test passed\n    });\n\n    it('components/gh-alerts.js', function () {\n      // test passed\n    });\n\n    it('components/gh-app.js', function () {\n      // test passed\n    });\n\n    it('components/gh-basic-dropdown.js', function () {\n      // test passed\n    });\n\n    it('components/gh-blog-url.js', function () {\n      // test passed\n    });\n\n    it('components/gh-cm-editor.js', function () {\n      // test passed\n    });\n\n    it('components/gh-content-cover.js', function () {\n      // test passed\n    });\n\n    it('components/gh-date-time-picker.js', function () {\n      // test passed\n    });\n\n    it('components/gh-download-count.js', function () {\n      // test passed\n    });\n\n    it('components/gh-dropdown-button.js', function () {\n      // test passed\n    });\n\n    it('components/gh-dropdown.js', function () {\n      // test passed\n    });\n\n    it('components/gh-editor-post-status.js', function () {\n      // test passed\n    });\n\n    it('components/gh-editor.js', function () {\n      // test passed\n    });\n\n    it('components/gh-error-message.js', function () {\n      // test passed\n    });\n\n    it('components/gh-feature-flag.js', function () {\n      // test passed\n    });\n\n    it('components/gh-file-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-file-upload.js', function () {\n      // test passed\n    });\n\n    it('components/gh-file-uploader.js', function () {\n      // test passed\n    });\n\n    it('components/gh-form-group.js', function () {\n      // test passed\n    });\n\n    it('components/gh-fullscreen-modal.js', function () {\n      // test passed\n    });\n\n    it('components/gh-image-uploader-with-preview.js', function () {\n      // test passed\n    });\n\n    it('components/gh-image-uploader.js', function () {\n      // test passed\n    });\n\n    it('components/gh-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-loading-spinner.js', function () {\n      // test passed\n    });\n\n    it('components/gh-main.js', function () {\n      // test passed\n    });\n\n    it('components/gh-markdown-editor.js', function () {\n      // test passed\n    });\n\n    it('components/gh-menu-toggle.js', function () {\n      // test passed\n    });\n\n    it('components/gh-mobile-nav-bar.js', function () {\n      // test passed\n    });\n\n    it('components/gh-nav-menu.js', function () {\n      // test passed\n    });\n\n    it('components/gh-navitem-url-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-navitem.js', function () {\n      // test passed\n    });\n\n    it('components/gh-notification.js', function () {\n      // test passed\n    });\n\n    it('components/gh-notifications.js', function () {\n      // test passed\n    });\n\n    it('components/gh-post-settings-menu.js', function () {\n      // test passed\n    });\n\n    it('components/gh-posts-list-item.js', function () {\n      // test passed\n    });\n\n    it('components/gh-profile-image.js', function () {\n      // test passed\n    });\n\n    it('components/gh-progress-bar.js', function () {\n      // test passed\n    });\n\n    it('components/gh-psm-tags-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-psm-template-select.js', function () {\n      // test passed\n    });\n\n    it('components/gh-publishmenu-draft.js', function () {\n      // test passed\n    });\n\n    it('components/gh-publishmenu-published.js', function () {\n      // test passed\n    });\n\n    it('components/gh-publishmenu-scheduled.js', function () {\n      // test passed\n    });\n\n    it('components/gh-publishmenu.js', function () {\n      // test passed\n    });\n\n    it('components/gh-scheduled-post-countdown.js', function () {\n      // test passed\n    });\n\n    it('components/gh-scroll-trigger.js', function () {\n      // test passed\n    });\n\n    it('components/gh-search-input-trigger.js', function () {\n      // test passed\n    });\n\n    it('components/gh-search-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-simplemde.js', function () {\n      // test passed\n    });\n\n    it('components/gh-skip-link.js', function () {\n      // test passed\n    });\n\n    it('components/gh-subscribers-table.js', function () {\n      // test passed\n    });\n\n    it('components/gh-tag-settings-form.js', function () {\n      // test passed\n    });\n\n    it('components/gh-tag.js', function () {\n      // test passed\n    });\n\n    it('components/gh-tags-management-container.js', function () {\n      // test passed\n    });\n\n    it('components/gh-task-button.js', function () {\n      // test passed\n    });\n\n    it('components/gh-textarea.js', function () {\n      // test passed\n    });\n\n    it('components/gh-theme-error-li.js', function () {\n      // test passed\n    });\n\n    it('components/gh-theme-table.js', function () {\n      // test passed\n    });\n\n    it('components/gh-timezone-select.js', function () {\n      // test passed\n    });\n\n    it('components/gh-token-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-token-input/select-multiple.js', function () {\n      // test passed\n    });\n\n    it('components/gh-token-input/select.js', function () {\n      // test passed\n    });\n\n    it('components/gh-token-input/suggested-option.js', function () {\n      // test passed\n    });\n\n    it('components/gh-token-input/tag-token.js', function () {\n      // test passed\n    });\n\n    it('components/gh-token-input/trigger.js', function () {\n      // test passed\n    });\n\n    it('components/gh-tour-item.js', function () {\n      // test passed\n    });\n\n    it('components/gh-trim-focus-input.js', function () {\n      // test passed\n    });\n\n    it('components/gh-unsplash-photo.js', function () {\n      // test passed\n    });\n\n    it('components/gh-unsplash.js', function () {\n      // test passed\n    });\n\n    it('components/gh-uploader.js', function () {\n      // test passed\n    });\n\n    it('components/gh-url-preview.js', function () {\n      // test passed\n    });\n\n    it('components/gh-user-active.js', function () {\n      // test passed\n    });\n\n    it('components/gh-user-invited.js', function () {\n      // test passed\n    });\n\n    it('components/gh-user-list-item.js', function () {\n      // test passed\n    });\n\n    it('components/gh-validation-status-container.js', function () {\n      // test passed\n    });\n\n    it('components/gh-view-title.js', function () {\n      // test passed\n    });\n\n    it('components/modal-base.js', function () {\n      // test passed\n    });\n\n    it('components/modal-delete-all.js', function () {\n      // test passed\n    });\n\n    it('components/modal-delete-post.js', function () {\n      // test passed\n    });\n\n    it('components/modal-delete-subscriber.js', function () {\n      // test passed\n    });\n\n    it('components/modal-delete-tag.js', function () {\n      // test passed\n    });\n\n    it('components/modal-delete-theme.js', function () {\n      // test passed\n    });\n\n    it('components/modal-delete-user.js', function () {\n      // test passed\n    });\n\n    it('components/modal-import-subscribers.js', function () {\n      // test passed\n    });\n\n    it('components/modal-invite-new-user.js', function () {\n      // test passed\n    });\n\n    it('components/modal-leave-editor.js', function () {\n      // test passed\n    });\n\n    it('components/modal-leave-settings.js', function () {\n      // test passed\n    });\n\n    it('components/modal-markdown-help.js', function () {\n      // test passed\n    });\n\n    it('components/modal-new-subscriber.js', function () {\n      // test passed\n    });\n\n    it('components/modal-re-authenticate.js', function () {\n      // test passed\n    });\n\n    it('components/modal-suspend-user.js', function () {\n      // test passed\n    });\n\n    it('components/modal-theme-warnings.js', function () {\n      // test passed\n    });\n\n    it('components/modal-transfer-owner.js', function () {\n      // test passed\n    });\n\n    it('components/modal-unsuspend-user.js', function () {\n      // test passed\n    });\n\n    it('components/modal-upload-image.js', function () {\n      // test passed\n    });\n\n    it('components/modal-upload-theme.js', function () {\n      // test passed\n    });\n\n    it('components/power-select-vertical-collection-options.js', function () {\n      // test passed\n    });\n\n    it('components/power-select/trigger.js', function () {\n      // test passed\n    });\n\n    it('controllers/about.js', function () {\n      // test passed\n    });\n\n    it('controllers/application.js', function () {\n      // test passed\n    });\n\n    it('controllers/editor.js', function () {\n      // test passed\n    });\n\n    it('controllers/error.js', function () {\n      // test passed\n    });\n\n    it('controllers/posts-loading.js', function () {\n      // test passed\n    });\n\n    it('controllers/posts.js', function () {\n      // test passed\n    });\n\n    it('controllers/reset.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/apps/amp.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/apps/index.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/apps/slack.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/apps/unsplash.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/apps/zapier.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/code-injection.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/design.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/general.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/labs.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/tags.js', function () {\n      // test passed\n    });\n\n    it('controllers/settings/tags/tag.js', function () {\n      // test passed\n    });\n\n    it('controllers/setup.js', function () {\n      // test passed\n    });\n\n    it('controllers/setup/three.js', function () {\n      // test passed\n    });\n\n    it('controllers/setup/two.js', function () {\n      // test passed\n    });\n\n    it('controllers/signin.js', function () {\n      // test passed\n    });\n\n    it('controllers/signup.js', function () {\n      // test passed\n    });\n\n    it('controllers/subscribers.js', function () {\n      // test passed\n    });\n\n    it('controllers/team/index.js', function () {\n      // test passed\n    });\n\n    it('controllers/team/user.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-count-characters.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-count-down-characters.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-count-words.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-format-html.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-format-post-time.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-path.js', function () {\n      // test passed\n    });\n\n    it('helpers/gh-user-can-admin.js', function () {\n      // test passed\n    });\n\n    it('helpers/highlighted-text.js', function () {\n      // test passed\n    });\n\n    it('helpers/is-equal.js', function () {\n      // test passed\n    });\n\n    it('helpers/is-not.js', function () {\n      // test passed\n    });\n\n    it('initializers/ember-simple-auth.js', function () {\n      // test passed\n    });\n\n    it('initializers/trailing-hash.js', function () {\n      // test passed\n    });\n\n    it('initializers/upgrade-status.js', function () {\n      // test passed\n    });\n\n    it('mixins/body-event-listener.js', function () {\n      // test passed\n    });\n\n    it('mixins/current-user-settings.js', function () {\n      // test passed\n    });\n\n    it('mixins/dropdown-mixin.js', function () {\n      // test passed\n    });\n\n    it('mixins/pagination.js', function () {\n      // test passed\n    });\n\n    it('mixins/settings-menu-component.js', function () {\n      // test passed\n    });\n\n    it('mixins/shortcuts-route.js', function () {\n      // test passed\n    });\n\n    it('mixins/shortcuts.js', function () {\n      // test passed\n    });\n\n    it('mixins/slug-url.js', function () {\n      // test passed\n    });\n\n    it('mixins/style-body.js', function () {\n      // test passed\n    });\n\n    it('mixins/text-input.js', function () {\n      // test passed\n    });\n\n    it('mixins/unauthenticated-route-mixin.js', function () {\n      // test passed\n    });\n\n    it('mixins/validation-engine.js', function () {\n      // test passed\n    });\n\n    it('mixins/validation-state.js', function () {\n      // test passed\n    });\n\n    it('models/invite.js', function () {\n      // test passed\n    });\n\n    it('models/navigation-item.js', function () {\n      // test passed\n    });\n\n    it('models/notification.js', function () {\n      // test passed\n    });\n\n    it('models/post.js', function () {\n      // test passed\n    });\n\n    it('models/role.js', function () {\n      // test passed\n    });\n\n    it('models/setting.js', function () {\n      // test passed\n    });\n\n    it('models/slack-integration.js', function () {\n      // test passed\n    });\n\n    it('models/subscriber.js', function () {\n      // test passed\n    });\n\n    it('models/tag.js', function () {\n      // test passed\n    });\n\n    it('models/theme.js', function () {\n      // test passed\n    });\n\n    it('models/unsplash-integration.js', function () {\n      // test passed\n    });\n\n    it('models/user.js', function () {\n      // test passed\n    });\n\n    it('resolver.js', function () {\n      // test passed\n    });\n\n    it('router.js', function () {\n      // test passed\n    });\n\n    it('routes/about.js', function () {\n      // test passed\n    });\n\n    it('routes/application.js', function () {\n      // test passed\n    });\n\n    it('routes/authenticated.js', function () {\n      // test passed\n    });\n\n    it('routes/editor.js', function () {\n      // test passed\n    });\n\n    it('routes/editor/edit.js', function () {\n      // test passed\n    });\n\n    it('routes/editor/new.js', function () {\n      // test passed\n    });\n\n    it('routes/error404.js', function () {\n      // test passed\n    });\n\n    it('routes/posts.js', function () {\n      // test passed\n    });\n\n    it('routes/reset.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/apps.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/apps/amp.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/apps/slack.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/apps/unsplash.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/apps/zapier.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/code-injection.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/design.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/design/uploadtheme.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/general.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/labs.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/tags.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/tags/index.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/tags/new.js', function () {\n      // test passed\n    });\n\n    it('routes/settings/tags/tag.js', function () {\n      // test passed\n    });\n\n    it('routes/setup.js', function () {\n      // test passed\n    });\n\n    it('routes/setup/index.js', function () {\n      // test passed\n    });\n\n    it('routes/setup/three.js', function () {\n      // test passed\n    });\n\n    it('routes/signin.js', function () {\n      // test passed\n    });\n\n    it('routes/signout.js', function () {\n      // test passed\n    });\n\n    it('routes/signup.js', function () {\n      // test passed\n    });\n\n    it('routes/subscribers.js', function () {\n      // test passed\n    });\n\n    it('routes/subscribers/import.js', function () {\n      // test passed\n    });\n\n    it('routes/subscribers/new.js', function () {\n      // test passed\n    });\n\n    it('routes/team/index.js', function () {\n      // test passed\n    });\n\n    it('routes/team/user.js', function () {\n      // test passed\n    });\n\n    it('serializers/application.js', function () {\n      // test passed\n    });\n\n    it('serializers/invite.js', function () {\n      // test passed\n    });\n\n    it('serializers/notification.js', function () {\n      // test passed\n    });\n\n    it('serializers/post.js', function () {\n      // test passed\n    });\n\n    it('serializers/role.js', function () {\n      // test passed\n    });\n\n    it('serializers/setting.js', function () {\n      // test passed\n    });\n\n    it('serializers/subscriber.js', function () {\n      // test passed\n    });\n\n    it('serializers/tag.js', function () {\n      // test passed\n    });\n\n    it('serializers/theme.js', function () {\n      // test passed\n    });\n\n    it('serializers/user.js', function () {\n      // test passed\n    });\n\n    it('services/ajax.js', function () {\n      // test passed\n    });\n\n    it('services/clock.js', function () {\n      // test passed\n    });\n\n    it('services/config.js', function () {\n      // test passed\n    });\n\n    it('services/dropdown.js', function () {\n      // test passed\n    });\n\n    it('services/event-bus.js', function () {\n      // test passed\n    });\n\n    it('services/feature.js', function () {\n      // test passed\n    });\n\n    it('services/ghost-paths.js', function () {\n      // test passed\n    });\n\n    it('services/lazy-loader.js', function () {\n      // test passed\n    });\n\n    it('services/media-queries.js', function () {\n      // test passed\n    });\n\n    it('services/notifications.js', function () {\n      // test passed\n    });\n\n    it('services/session.js', function () {\n      // test passed\n    });\n\n    it('services/settings.js', function () {\n      // test passed\n    });\n\n    it('services/slug-generator.js', function () {\n      // test passed\n    });\n\n    it('services/tour.js', function () {\n      // test passed\n    });\n\n    it('services/ui.js', function () {\n      // test passed\n    });\n\n    it('services/unsplash.js', function () {\n      // test passed\n    });\n\n    it('services/upgrade-status.js', function () {\n      // test passed\n    });\n\n    it('session-stores/application.js', function () {\n      // test passed\n    });\n\n    it('transforms/facebook-url-user.js', function () {\n      // test passed\n    });\n\n    it('transforms/json-string.js', function () {\n      // test passed\n    });\n\n    it('transforms/moment-date.js', function () {\n      // test passed\n    });\n\n    it('transforms/moment-utc.js', function () {\n      // test passed\n    });\n\n    it('transforms/navigation-settings.js', function () {\n      // test passed\n    });\n\n    it('transforms/raw.js', function () {\n      // test passed\n    });\n\n    it('transforms/slack-settings.js', function () {\n      // test passed\n    });\n\n    it('transforms/twitter-url-user.js', function () {\n      // test passed\n    });\n\n    it('transforms/unsplash-settings.js', function () {\n      // test passed\n    });\n\n    it('transitions.js', function () {\n      // test passed\n    });\n\n    it('utils/bound-one-way.js', function () {\n      // test passed\n    });\n\n    it('utils/caja-sanitizers.js', function () {\n      // test passed\n    });\n\n    it('utils/ctrl-or-cmd.js', function () {\n      // test passed\n    });\n\n    it('utils/document-title.js', function () {\n      // test passed\n    });\n\n    it('utils/format-markdown.js', function () {\n      // test passed\n    });\n\n    it('utils/ghost-paths.js', function () {\n      // test passed\n    });\n\n    it('utils/isFinite.js', function () {\n      // test passed\n    });\n\n    it('utils/isNumber.js', function () {\n      // test passed\n    });\n\n    it('utils/link-component.js', function () {\n      // test passed\n    });\n\n    it('utils/random-password.js', function () {\n      // test passed\n    });\n\n    it('utils/route.js', function () {\n      // test passed\n    });\n\n    it('utils/text-field.js', function () {\n      // test passed\n    });\n\n    it('utils/titleize.js', function () {\n      // test passed\n    });\n\n    it('utils/validator-extensions.js', function () {\n      // test passed\n    });\n\n    it('utils/window-proxy.js', function () {\n      // test passed\n    });\n\n    it('utils/word-count.js', function () {\n      // test passed\n    });\n\n    it('validators/base.js', function () {\n      // test passed\n    });\n\n    it('validators/invite-user.js', function () {\n      // test passed\n    });\n\n    it('validators/nav-item.js', function () {\n      // test passed\n    });\n\n    it('validators/new-user.js', function () {\n      // test passed\n    });\n\n    it('validators/password.js', function () {\n      // test passed\n    });\n\n    it('validators/post.js', function () {\n      // test passed\n    });\n\n    it('validators/reset.js', function () {\n      // test passed\n    });\n\n    it('validators/setting.js', function () {\n      // test passed\n    });\n\n    it('validators/setup.js', function () {\n      // test passed\n    });\n\n    it('validators/signin.js', function () {\n      // test passed\n    });\n\n    it('validators/signup.js', function () {\n      // test passed\n    });\n\n    it('validators/slack-integration.js', function () {\n      // test passed\n    });\n\n    it('validators/subscriber.js', function () {\n      // test passed\n    });\n\n    it('validators/tag-settings.js', function () {\n      // test passed\n    });\n\n    it('validators/user.js', function () {\n      // test passed\n    });\n  });\n});","define('ghost-admin/tests/helpers/adapter-error', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.errorOverride = errorOverride;\n    exports.errorReset = errorReset;\n    var Logger = Ember.Logger;\n\n\n    var originalException = void 0,\n        originalLoggerError = void 0;\n\n    function errorOverride() {\n        originalException = Ember.Test.adapter.exception;\n        originalLoggerError = Logger.error;\n        Ember.Test.adapter.exception = function () {};\n        Logger.error = function () {};\n    }\n\n    function errorReset() {\n        Ember.Test.adapter.exception = originalException;\n        Logger.error = originalLoggerError;\n    }\n});","define('ghost-admin/tests/helpers/data-transfer', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var c = Ember.Object.extend({\n    getData: function getData() {\n      return this.get('payload');\n    },\n\n    setData: function setData(dataType, payload) {\n      this.set(\"data\", { dataType: dataType, payload: payload });\n    }\n  });\n\n  c.reopenClass({\n    makeMockEvent: function makeMockEvent(payload) {\n      var transfer = this.create({ payload: payload });\n      var res = { dataTransfer: transfer };\n      res.originalEvent = res;\n      res.originalEvent.preventDefault = function () {\n        console.log('prevent default');\n      };\n      res.originalEvent.stopPropagation = function () {\n        console.log('stop propagation');\n      };\n      return res;\n    },\n\n    createDomEvent: function createDomEvent(type) {\n      var event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(type, true, true, null);\n      event.dataTransfer = {\n        data: {},\n        setData: function setData(type, val) {\n          this.data[type] = val;\n        },\n        getData: function getData(type) {\n          return this.data[type];\n        }\n      };\n      return event;\n    }\n  });\n\n  exports.default = c;\n});","define('ghost-admin/tests/helpers/destroy-app', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = destroyApp;\n    function destroyApp(application) {\n        // this is required to fix \"second Pretender instance\" warnings\n        if (server) {\n            server.shutdown();\n        }\n\n        Ember.run(application, 'destroy');\n    }\n});","define('ghost-admin/tests/helpers/drag-drop', ['exports', 'ember-native-dom-helpers', 'ghost-admin/tests/helpers/mock-event'], function (exports, _emberNativeDomHelpers, _mockEvent) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.drag = undefined;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  }\n\n  var dragOver = function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dropSelector, moves) {\n      var _this = this;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              moves = moves || [[{ clientX: 1, clientY: 1 }, dropSelector]];\n              return _context2.abrupt('return', moves.forEach(function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n                  var _ref4 = _slicedToArray(_ref2, 2),\n                      position = _ref4[0],\n                      selector = _ref4[1];\n\n                  var event;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          event = new _mockEvent.default(position);\n                          _context.next = 3;\n                          return (0, _emberNativeDomHelpers.triggerEvent)(selector || dropSelector, 'dragover', event);\n\n                        case 3:\n                        case 'end':\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, _this);\n                }));\n\n                return function (_x3) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n\n            case 2:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function dragOver(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var drop = function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dragSelector, dragEvent, options) {\n      var dropSelector, dropEndOptions, dragOverMoves, dropElement, event;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dropSelector = options.drop, dropEndOptions = options.dropEndOptions, dragOverMoves = options.dragOverMoves;\n              _context3.next = 3;\n              return (0, _emberNativeDomHelpers.find)(dropSelector);\n\n            case 3:\n              dropElement = _context3.sent;\n\n              if (dropElement) {\n                _context3.next = 6;\n                break;\n              }\n\n              throw 'There are no drop targets by the given selector: \\'' + dropSelector + '\\'';\n\n            case 6:\n              _context3.next = 8;\n              return dragOver(dropSelector, dragOverMoves);\n\n            case 8:\n              if (!options.beforeDrop) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 11;\n              return options.beforeDrop.call();\n\n            case 11:\n              event = new _mockEvent.default().useDataTransferData(dragEvent);\n              _context3.next = 14;\n              return (0, _emberNativeDomHelpers.triggerEvent)(dropSelector, 'drop', event);\n\n            case 14:\n              _context3.next = 16;\n              return (0, _emberNativeDomHelpers.triggerEvent)(dragSelector, 'dragend', dropEndOptions);\n\n            case 16:\n              return _context3.abrupt('return', _context3.sent);\n\n            case 17:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function drop(_x4, _x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var drag = exports.drag = function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(dragSelector) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var dragEvent;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dragEvent = new _mockEvent.default(options.dragStartOptions);\n              _context4.next = 3;\n              return (0, _emberNativeDomHelpers.triggerEvent)(dragSelector, 'mouseover');\n\n            case 3:\n              _context4.next = 5;\n              return (0, _emberNativeDomHelpers.triggerEvent)(dragSelector, 'dragstart', dragEvent);\n\n            case 5:\n              if (!options.afterDrag) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 8;\n              return options.afterDrag.call();\n\n            case 8:\n              if (!options.drop) {\n                _context4.next = 11;\n                break;\n              }\n\n              _context4.next = 11;\n              return drop(dragSelector, dragEvent, options);\n\n            case 11:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function drag(_x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n});","define('ghost-admin/tests/helpers/editor-helpers', ['exports', 'ember-test-helpers/wait', 'mobiledoc-kit/renderers/mobiledoc', 'gh-koenig/components/gh-koenig', 'ember-native-dom-helpers'], function (exports, _wait, _mobiledoc, _ghKoenig, _emberNativeDomHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.EMPTY_DOC = undefined;\n    exports.findEditor = findEditor;\n    exports.focusEditor = focusEditor;\n    exports.titleRendered = titleRendered;\n    exports.replaceTitleHTML = replaceTitleHTML;\n    exports.inputText = inputText;\n    exports.testEditorInput = testEditorInput;\n    exports.testEditorInputTimeout = testEditorInputTimeout;\n    exports.waitForRender = waitForRender;\n    var EMPTY_DOC = exports.EMPTY_DOC = {\n        version: _mobiledoc.MOBILEDOC_VERSION,\n        markups: [],\n        atoms: [],\n        cards: [],\n        sections: []\n    };\n\n    // traverse up the node tree looking for an editor instance\n    function findEditor(element) {\n        if (!element) {\n            // TODO: get the selector from the editor component\n            element = (0, _emberNativeDomHelpers.findWithAssert)('.gh-koenig-container');\n        }\n\n        if (typeof element === 'string') {\n            element = (0, _emberNativeDomHelpers.findWithAssert)(element);\n        }\n\n        do {\n            if (element[_ghKoenig.TESTING_EXPANDO_PROPERTY]) {\n                return element[_ghKoenig.TESTING_EXPANDO_PROPERTY];\n            }\n            element = element.parentNode;\n        } while (!!element); // eslint-disable-line\n\n        throw new Error('Unable to find gh-koenig editor from element');\n    }\n\n    function focusEditor(element) {\n        var editor = findEditor(element);\n        Ember.run(function () {\n            return editor.element.focus();\n        });\n        return window.wait || _wait.default;\n    }\n\n    // polls the title until it's started.\n    function titleRendered() {\n        return Ember.Test.promise(function (resolve) {\n            // eslint-disable-line\n            function checkTitle() {\n                var title = Ember.$('#koenig-title-input div');\n                if (title[0]) {\n                    return resolve();\n                } else {\n                    window.requestAnimationFrame(checkTitle);\n                }\n            }\n            checkTitle();\n        });\n    }\n\n    // replaces the title text content with HTML and returns once the HTML has been placed.\n    // takes into account converting to plaintext.\n    function replaceTitleHTML(HTML) {\n        var el = (0, _emberNativeDomHelpers.findWithAssert)('#koenig-title-input div');\n        Ember.run(function () {\n            return el.innerHTML = HTML;\n        });\n        return (window.wait || _wait.default)();\n    }\n\n    // simulates text inputs into the editor, unfortunately the Ember helper functions\n    // don't work on content editable so we have to manipuate the text input event manager\n    // in mobiledoc-kit directly. This is a private API.\n    function inputText(editor, text) {\n        Ember.run(function () {\n            editor._eventManager._textInputHandler.handle(text);\n        });\n    }\n\n    // inputs text and waits for the editor to modify the dom with the desired result or timesout.\n    function testEditorInput(input, output, expect) {\n        var editor = findEditor();\n        editor.element.focus(); // for some reason the editor doesn't work until it's focused when run in ghost-admin.\n        return Ember.Test.promise(function (resolve, reject) {\n            // eslint-disable-line\n            var lastRender = '';\n            var isRejected = false;\n            var rejectTimeout = window.setTimeout(function () {\n                expect(lastRender).to.equal(output); // we know this is false but include it for the output.\n                reject(lastRender);\n                isRejected = true;\n            }, 500);\n            editor.didRender(function () {\n                lastRender = editor.element.innerHTML;\n                if (editor.element.innerHTML === output && !isRejected) {\n                    window.clearTimeout(rejectTimeout);\n                    expect(lastRender).to.equal(output); // we know this is true but include it for the output.\n                    return resolve(lastRender);\n                }\n            });\n            inputText(editor, input);\n        });\n    }\n\n    function testEditorInputTimeout(input) {\n        var editor = findEditor();\n        editor.element.focus();\n        return Ember.Test.promise(function (resolve, reject) {\n            // eslint-disable-line\n            window.setTimeout(function () {\n                resolve(editor.element.innerHTML);\n            }, 300);\n\n            inputText(editor, input);\n        });\n    }\n\n    function waitForRender(selector) {\n        return (0, _emberNativeDomHelpers.waitUntil)(function () {\n            return (0, _emberNativeDomHelpers.find)(selector);\n        });\n    }\n});","define('ghost-admin/tests/helpers/ember-basic-dropdown', ['exports', 'ember-basic-dropdown/test-support/helpers', 'ember-native-dom-helpers'], function (exports, _helpers, _emberNativeDomHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nativeClick = exports.fireKeydown = exports.tapTrigger = exports.clickTrigger = exports.nativeTap = undefined;\n  Object.defineProperty(exports, 'nativeTap', {\n    enumerable: true,\n    get: function () {\n      return _helpers.nativeTap;\n    }\n  });\n  Object.defineProperty(exports, 'clickTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.clickTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'tapTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.tapTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'fireKeydown', {\n    enumerable: true,\n    get: function () {\n      return _helpers.fireKeydown;\n    }\n  });\n  exports.default = _helpers.default;\n  var nativeClick = exports.nativeClick = _emberNativeDomHelpers.click;\n});","define('ghost-admin/tests/helpers/ember-drag-drop', ['exports', 'ghost-admin/tests/helpers/data-transfer'], function (exports, _dataTransfer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.drag = drag;\n\n\n  function drop($dragHandle, dropCssPath, dragEvent) {\n    var $dropTarget = Ember.$(dropCssPath);\n\n    if ($dropTarget.length === 0) {\n      throw 'There are no drop targets by the given selector: \\'' + dropCssPath + '\\'';\n    }\n\n    Ember.run(function () {\n      triggerEvent($dropTarget, 'dragover', _dataTransfer.default.makeMockEvent());\n    });\n\n    Ember.run(function () {\n      triggerEvent($dropTarget, 'drop', _dataTransfer.default.makeMockEvent(dragEvent.dataTransfer.get('data.payload')));\n    });\n\n    Ember.run(function () {\n      triggerEvent($dragHandle, 'dragend', _dataTransfer.default.makeMockEvent());\n    });\n  } /* global triggerEvent , andThen */\n  function drag(cssPath) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var dragEvent = _dataTransfer.default.makeMockEvent();\n    var $dragHandle = Ember.$(cssPath);\n\n    Ember.run(function () {\n      triggerEvent($dragHandle, 'mouseover');\n    });\n\n    Ember.run(function () {\n      triggerEvent($dragHandle, 'dragstart', dragEvent);\n    });\n\n    andThen(function () {\n      if (options.beforeDrop) {\n        options.beforeDrop.call();\n      }\n    });\n\n    andThen(function () {\n      if (options.drop) {\n        drop($dragHandle, options.drop, dragEvent);\n      }\n    });\n  }\n});","define('ghost-admin/tests/helpers/ember-power-calendar', ['exports', 'moment', 'ember-native-dom-helpers', 'ember-test-helpers/wait'], function (exports, _moment, _emberNativeDomHelpers, _wait) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function () {\n    Ember.Test.registerAsyncHelper('calendarCenter', function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(app, selector, newCenter) {\n        var calendarComponent, onCenterChange, publicAPI;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Ember.assert('`calendarCenter` expect a Date or MomentJS object as second argument', newCenter);\n                calendarComponent = findComponentInstance(app, selector);\n                onCenterChange = calendarComponent.get('onCenterChange');\n\n                Ember.assert('You cannot call `calendarCenter` on a component that doesn\\'t has an `onCenterChange` action', !!onCenterChange);\n                publicAPI = calendarComponent.get('publicAPI');\n                _context.next = 7;\n                return publicAPI.actions.changeCenter(newCenter, publicAPI);\n\n              case 7:\n                return _context.abrupt('return', (0, _wait.default)());\n\n              case 8:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    Ember.Test.registerAsyncHelper('calendarSelect', function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(app, selector, selected) {\n        var selectedMoment, calendarElement, daySelector, dayElement;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                Ember.assert('`calendarSelect` expect a Date or MomentJS object as second argument', selected);\n                selectedMoment = (0, _moment.default)(selected);\n                calendarElement = findCalendarElement(selector);\n                daySelector = selector + ' [data-date=\"' + selectedMoment.format('YYYY-MM-DD') + '\"]';\n                dayElement = (0, _emberNativeDomHelpers.find)(daySelector, calendarElement);\n\n                if (dayElement) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 8;\n                return calendarCenter(selector, selected);\n\n              case 8:\n                return _context2.abrupt('return', (0, _emberNativeDomHelpers.click)(daySelector));\n\n              case 9:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x4, _x5, _x6) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  }\n\n  function findCalendarElement(selector) {\n    var target = (0, _emberNativeDomHelpers.find)(selector);\n    if (target) {\n      if (target.classList.contains('ember-power-calendar')) {\n        return target;\n      } else {\n        return (0, _emberNativeDomHelpers.find)('.ember-power-calendar', target) || (0, _emberNativeDomHelpers.find)('[data-power-calendar-id]', target);\n      }\n    }\n  }\n\n  function findCalendarGuid(selector) {\n    var maybeCalendar = findCalendarElement(selector);\n    if (!maybeCalendar) {\n      return;\n    }\n    if (maybeCalendar.classList.contains('ember-power-calendar')) {\n      return maybeCalendar.id;\n    } else {\n      return maybeCalendar.attributes['data-power-calendar-id'].value;\n    }\n  }\n\n  function findComponentInstance(app, selector) {\n    var calendarGuid = findCalendarGuid(selector);\n    Ember.assert('Could not find a calendar using selector: \"' + selector + '\"', calendarGuid);\n    var calendarService = app.__container__.lookup('service:power-calendar');\n    return calendarService._calendars[calendarGuid];\n  }\n});","define('ghost-admin/tests/helpers/ember-power-datepicker', ['exports', 'ghost-admin/tests/helpers/ember-basic-dropdown', 'ghost-admin/tests/helpers/ember-power-calendar'], function (exports, _emberBasicDropdown, _emberPowerCalendar) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function () {\n    (0, _emberBasicDropdown.default)();\n    (0, _emberPowerCalendar.default)();\n\n    Ember.Test.registerAsyncHelper('datepickerSelect', function (app, selector, selected) {\n      Ember.assert('`datepickerSelect` expect a Date or MomentJS object as second argument', selected);\n      var $selector = find(selector);\n      Ember.assert('`datepickerSelect` couln\\'t find any element with selector: ' + selector, $selector.length);\n      var $trigger = void 0;\n      if ($selector.hasClass('ember-power-datepicker-trigger')) {\n        $trigger = $selector;\n      } else {\n        $trigger = find(selector + ' .ember-power-datepicker-trigger');\n        Ember.assert('`datepickerSelect` couln\\'t find any datepicker within the selector ' + selector, $trigger.length);\n        selector = selector + ' .ember-power-datepicker-trigger';\n      }\n\n      clickDropdown(selector);\n\n      andThen(function () {\n        calendarSelect('.ember-power-datepicker-content', selected);\n      });\n    });\n  };\n});","define('ghost-admin/tests/helpers/ember-power-select', ['exports', 'ember-power-select/test-support/helpers'], function (exports, _helpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.selectChoose = exports.touchTrigger = exports.nativeTouch = exports.clickTrigger = exports.typeInSearch = exports.triggerKeydown = exports.nativeMouseUp = exports.nativeMouseDown = exports.findContains = undefined;\n  exports.default = deprecatedRegisterHelpers;\n\n\n  function deprecateHelper(fn, name) {\n    return function () {\n      (true && !(false) && Ember.deprecate('DEPRECATED `import { ' + name + ' } from \\'../../tests/helpers/ember-power-select\\';` is deprecated. Please, replace it with `import { ' + name + ' } from \\'ember-power-select/test-support/helpers\\';`', false, { until: '1.11.0', id: 'ember-power-select-test-support-' + name }));\n\n      return fn.apply(undefined, arguments);\n    };\n  }\n\n  var findContains = deprecateHelper(_helpers.findContains, 'findContains');\n  var nativeMouseDown = deprecateHelper(_helpers.nativeMouseDown, 'nativeMouseDown');\n  var nativeMouseUp = deprecateHelper(_helpers.nativeMouseUp, 'nativeMouseUp');\n  var triggerKeydown = deprecateHelper(_helpers.triggerKeydown, 'triggerKeydown');\n  var typeInSearch = deprecateHelper(_helpers.typeInSearch, 'typeInSearch');\n  var clickTrigger = deprecateHelper(_helpers.clickTrigger, 'clickTrigger');\n  var nativeTouch = deprecateHelper(_helpers.nativeTouch, 'nativeTouch');\n  var touchTrigger = deprecateHelper(_helpers.touchTrigger, 'touchTrigger');\n  var selectChoose = deprecateHelper(_helpers.selectChoose, 'selectChoose');\n\n  function deprecatedRegisterHelpers() {\n    (true && !(false) && Ember.deprecate(\"DEPRECATED `import registerPowerSelectHelpers from '../../tests/helpers/ember-power-select';` is deprecated. Please, replace it with `import registerPowerSelectHelpers from 'ember-power-select/test-support/helpers';`\", false, { until: '1.11.0', id: 'ember-power-select-test-support-register-helpers' }));\n\n    return (0, _helpers.default)();\n  }\n\n  exports.findContains = findContains;\n  exports.nativeMouseDown = nativeMouseDown;\n  exports.nativeMouseUp = nativeMouseUp;\n  exports.triggerKeydown = triggerKeydown;\n  exports.typeInSearch = typeInSearch;\n  exports.clickTrigger = clickTrigger;\n  exports.nativeTouch = nativeTouch;\n  exports.touchTrigger = touchTrigger;\n  exports.selectChoose = selectChoose;\n});","define('ghost-admin/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _test) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n\n  var TEST_CONTAINER_KEY = 'authenticator:test'; /* global wait */\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _test.default);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n});","define('ghost-admin/tests/helpers/ember-test-selectors', ['exports', 'ember-test-selectors'], function (exports, _emberTestSelectors) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var deprecate = Ember.deprecate;\n\n\n  var message = 'Importing testSelector() from \"<appname>/tests/helpers/ember-test-selectors\" is deprecated. ' + 'Please import testSelector() from \"ember-test-selectors\" instead.';\n\n  deprecate(message, false, {\n    id: 'ember-test-selectors.test-selector-import',\n    until: '0.2.0',\n    url: 'https://github.com/simplabs/ember-test-selectors#usage'\n  });\n\n  exports.default = _emberTestSelectors.default;\n});","define('ghost-admin/tests/helpers/file-upload', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.createFile = createFile;\n    exports.fileUpload = fileUpload;\n    /* global Blob */\n    function createFile() {\n        var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['test'];\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var name = options.name,\n            type = options.type;\n\n\n        var file = new Blob(content, { type: type ? type : 'text/plain' });\n        file.name = name ? name : 'test.txt';\n\n        return file;\n    }\n\n    function fileUpload($element, content, options) {\n        var file = createFile(content, options);\n        // eslint-disable-next-line new-cap\n        var event = Ember.$.Event('change', {\n            testingFiles: [file]\n        });\n\n        $element.trigger(event);\n    }\n\n    exports.default = Ember.Test.registerAsyncHelper('fileUpload', function (app, selector, content, options) {\n        var file = createFile(content, options);\n\n        return triggerEvent(selector, 'change', { testingFiles: [file] });\n    });\n});","define('ghost-admin/tests/helpers/mock-event', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createDomEvent = createDomEvent;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var DataTransfer = function () {\n    function DataTransfer() {\n      _classCallCheck(this, DataTransfer);\n\n      this.data = {};\n    }\n\n    _createClass(DataTransfer, [{\n      key: 'setData',\n      value: function setData(type, value) {\n        this.data[type] = value;\n        return this;\n      }\n    }, {\n      key: 'getData',\n      value: function getData() {\n        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Text\";\n\n        return this.data[type];\n      }\n    }, {\n      key: 'setDragImage',\n      value: function setDragImage() {}\n    }]);\n\n    return DataTransfer;\n  }();\n\n  var MockEvent = function () {\n    function MockEvent() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, MockEvent);\n\n      this.dataTransfer = new DataTransfer();\n      this.dataTransfer.setData('Text', options.dataTransferData);\n      this.originalEvent = this;\n      this.setProperties(options);\n    }\n\n    _createClass(MockEvent, [{\n      key: 'useDataTransferData',\n      value: function useDataTransferData(otherEvent) {\n        this.dataTransfer.setData('Text', otherEvent.dataTransfer.getData());\n        return this;\n      }\n    }, {\n      key: 'setProperties',\n      value: function setProperties(props) {\n        for (var prop in props) {\n          this[prop] = props[prop];\n        }\n        return this;\n      }\n    }, {\n      key: 'preventDefault',\n      value: function preventDefault() {}\n    }, {\n      key: 'stopPropagation',\n      value: function stopPropagation() {}\n    }]);\n\n    return MockEvent;\n  }();\n\n  exports.default = MockEvent;\n  function createDomEvent(type) {\n    var event = document.createEvent(\"CustomEvent\");\n    event.initCustomEvent(type, true, true, null);\n    event.dataTransfer = new DataTransfer();\n    return event;\n  }\n});","define('ghost-admin/tests/helpers/resolver', ['exports', 'ghost-admin/resolver', 'ghost-admin/config/environment'], function (exports, _resolver, _environment) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var resolver = _resolver.default.create();\n\n    resolver.namespace = {\n        modulePrefix: _environment.default.modulePrefix,\n        podModulePrefix: _environment.default.podModulePrefix\n    };\n\n    exports.default = resolver;\n});","define('ghost-admin/tests/helpers/start-app', ['exports', 'ghost-admin/app', 'ghost-admin/config/environment', 'ghost-admin/tests/helpers/file-upload', 'ghost-admin/tests/helpers/ember-power-datepicker', 'ember-power-select/test-support/helpers'], function (exports, _app, _environment, _fileUpload, _emberPowerDatepicker, _helpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = startApp;\n    // eslint-disable-line\n    (0, _helpers.default)();\n    (0, _emberPowerDatepicker.default)();\n\n    function startApp(attrs) {\n        var attributes = Ember.assign({}, _environment.default.APP);\n        attributes = Ember.assign(attributes, attrs); // use defaults, but you can override;\n\n        return Ember.run(function () {\n            var application = _app.default.create(attributes);\n            application.setupForTesting();\n            application.injectTestHelpers();\n            return application;\n        });\n    }\n});","define('ghost-admin/tests/integration/adapters/tag-test', ['pretender', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Adapter: tag', function () {\n        (0, _emberMocha.setupTest)('adapter:tag', {\n            integration: true\n        });\n\n        var server = void 0,\n            store = void 0;\n\n        beforeEach(function () {\n            store = this.container.lookup('service:store');\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('loads tags from regular endpoint when all are fetched', function (done) {\n            server.get('/ghost/api/v0.1/tags/', function () {\n                return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ tags: [{\n                        id: 1,\n                        name: 'Tag 1',\n                        slug: 'tag-1'\n                    }, {\n                        id: 2,\n                        name: 'Tag 2',\n                        slug: 'tag-2'\n                    }] })];\n            });\n\n            store.findAll('tag', { reload: true }).then(function (tags) {\n                (0, _chai.expect)(tags).to.be.ok;\n                (0, _chai.expect)(tags.objectAtContent(0).get('name')).to.equal('Tag 1');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('loads tag from slug endpoint when single tag is queried and slug is passed in', function (done) {\n            server.get('/ghost/api/v0.1/tags/slug/tag-1/', function () {\n                return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ tags: [{\n                        id: 1,\n                        slug: 'tag-1',\n                        name: 'Tag 1'\n                    }] })];\n            });\n\n            store.queryRecord('tag', { slug: 'tag-1' }).then(function (tag) {\n                (0, _chai.expect)(tag).to.be.ok;\n                (0, _chai.expect)(tag.get('name')).to.equal('Tag 1');\n                done();\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/adapters/user-test', ['pretender', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Adapter: user', function () {\n        (0, _emberMocha.setupTest)('adapter:user', {\n            integration: true\n        });\n\n        var server = void 0,\n            store = void 0;\n\n        beforeEach(function () {\n            store = this.container.lookup('service:store');\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('loads users from regular endpoint when all are fetched', function (done) {\n            server.get('/ghost/api/v0.1/users/', function () {\n                return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ users: [{\n                        id: 1,\n                        name: 'User 1',\n                        slug: 'user-1'\n                    }, {\n                        id: 2,\n                        name: 'User 2',\n                        slug: 'user-2'\n                    }] })];\n            });\n\n            store.findAll('user', { reload: true }).then(function (users) {\n                (0, _chai.expect)(users).to.be.ok;\n                (0, _chai.expect)(users.objectAtContent(0).get('name')).to.equal('User 1');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('loads user from slug endpoint when single user is queried and slug is passed in', function (done) {\n            server.get('/ghost/api/v0.1/users/slug/user-1/', function () {\n                return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ users: [{\n                        id: 1,\n                        slug: 'user-1',\n                        name: 'User 1'\n                    }] })];\n            });\n\n            store.queryRecord('user', { slug: 'user-1' }).then(function (user) {\n                (0, _chai.expect)(user).to.be.ok;\n                (0, _chai.expect)(user.get('name')).to.equal('User 1');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles \"include\" parameter when querying single user via slug', function (done) {\n            server.get('/ghost/api/v0.1/users/slug/user-1/', function (request) {\n                var params = request.queryParams;\n                (0, _chai.expect)(params.include, 'include query').to.equal('roles,count.posts');\n\n                return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ users: [{\n                        id: 1,\n                        slug: 'user-1',\n                        name: 'User 1',\n                        count: {\n                            posts: 5\n                        }\n                    }] })];\n            });\n\n            store.queryRecord('user', { slug: 'user-1', include: 'count.posts' }).then(function (user) {\n                (0, _chai.expect)(user).to.be.ok;\n                (0, _chai.expect)(user.get('name')).to.equal('User 1');\n                (0, _chai.expect)(user.get('count.posts')).to.equal(5);\n                done();\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-alert-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-alert', function () {\n        (0, _emberMocha.setupComponentTest)('gh-alert', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('message', { message: 'Test message', type: 'success' });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"jlqYRMU2\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-alert\\\",null,[[\\\"message\\\"],[[20,[\\\"message\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('article.gh-alert')).to.have.length(1);\n            var $alert = this.$('.gh-alert');\n\n            (0, _chai.expect)($alert.text()).to.match(/Test message/);\n        });\n\n        (0, _mocha.it)('maps message types to CSS classes', function () {\n            this.set('message', { message: 'Test message', type: 'success' });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"jlqYRMU2\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-alert\\\",null,[[\\\"message\\\"],[[20,[\\\"message\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $alert = this.$('.gh-alert');\n\n            this.set('message.type', 'success');\n            (0, _chai.expect)($alert.hasClass('gh-alert-green'), 'success class isn\\'t green').to.be.true;\n\n            this.set('message.type', 'error');\n            (0, _chai.expect)($alert.hasClass('gh-alert-red'), 'success class isn\\'t red').to.be.true;\n\n            this.set('message.type', 'warn');\n            (0, _chai.expect)($alert.hasClass('gh-alert-blue'), 'success class isn\\'t yellow').to.be.true;\n\n            this.set('message.type', 'info');\n            (0, _chai.expect)($alert.hasClass('gh-alert-blue'), 'success class isn\\'t blue').to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-alerts-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var notificationsStub = Ember.Service.extend({\n        alerts: Ember.A()\n    });\n\n    (0, _mocha.describe)('Integration: Component: gh-alerts', function () {\n        (0, _emberMocha.setupComponentTest)('gh-alerts', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.register('service:notifications', notificationsStub);\n            this.inject.service('notifications', { as: 'notifications' });\n\n            this.set('notifications.alerts', [{ message: 'First', type: 'error' }, { message: 'Second', type: 'warn' }]);\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"kUsg5JGT\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-alerts\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.gh-alerts').length).to.equal(1);\n            (0, _chai.expect)(this.$('.gh-alerts').children().length).to.equal(2);\n\n            this.set('notifications.alerts', Ember.A());\n            (0, _chai.expect)(this.$('.gh-alerts').children().length).to.equal(0);\n        });\n\n        (0, _mocha.it)('triggers \"notify\" action when message count changes', function () {\n            var expectedCount = 0;\n\n            // test double for notify action\n            this.set('notify', function (count) {\n                return (0, _chai.expect)(count).to.equal(expectedCount);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"FufBqfwN\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-alerts\\\",null,[[\\\"notify\\\"],[[25,\\\"action\\\",[[19,0,[]],[20,[\\\"notify\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            expectedCount = 3;\n            this.get('notifications.alerts').pushObject({ message: 'Third', type: 'success' });\n\n            expectedCount = 0;\n            this.set('notifications.alerts', Ember.A());\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-basic-dropdown-test', ['ghost-admin/tests/helpers/ember-basic-dropdown', 'mocha', 'chai', 'ember-native-dom-helpers', 'ember-mocha'], function (_emberBasicDropdown, _mocha, _chai, _emberNativeDomHelpers, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-basic-dropdown', function () {\n        (0, _emberMocha.setupComponentTest)('gh-basic-dropdown', {\n            integration: true\n        });\n\n        (0, _mocha.it)('closes when dropdown service fires close event', function () {\n            var dropdownService = this.container.lookup('service:dropdown');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"Em05fZ/j\",\n                \"block\": \"{\\\"symbols\\\":[\\\"dropdown\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-basic-dropdown\\\",null,null,{\\\"statements\\\":[[0,\\\"                \\\"],[6,\\\"button\\\"],[9,\\\"class\\\",\\\"ember-basic-dropdown-trigger\\\"],[10,\\\"onclick\\\",[19,1,[\\\"actions\\\",\\\"toggle\\\"]],null],[7],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,1,[\\\"isOpen\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[6,\\\"div\\\"],[9,\\\"id\\\",\\\"dropdown-is-opened\\\"],[7],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _emberBasicDropdown.clickTrigger)();\n            (0, _chai.expect)(Ember.$((0, _emberNativeDomHelpers.find)('#dropdown-is-opened'))).to.exist;\n\n            Ember.run(function () {\n                dropdownService.closeDropdowns();\n            });\n\n            (0, _chai.expect)(Ember.$((0, _emberNativeDomHelpers.find)('#dropdown-is-opened'))).to.not.exist;\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-cm-editor-test', ['ember-test-helpers/wait', 'ember-native-dom-helpers', 'mocha', 'chai', 'ember-mocha'], function (_wait, _emberNativeDomHelpers, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    // NOTE: If the browser window is not focused/visible CodeMirror (or Chrome?) will\n    // take longer to respond to/fire events so it's possible that some of these tests\n    // will take 1-3 seconds\n\n    (0, _mocha.describe)('Integration: Component: gh-cm-editor', function () {\n        (0, _emberMocha.setupComponentTest)('gh-cm-editor', {\n            integration: true\n        });\n\n        (0, _mocha.it)('handles change event', function () {\n            var _this = this;\n\n            this.set('text', '');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"0CVIeViW\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-cm-editor\\\",[[20,[\\\"text\\\"]]],[[\\\"class\\\",\\\"update\\\"],[\\\"gh-input\\\",[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"text\\\"]]],null]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            // access CodeMirror directly as it doesn't pick up changes to the textarea\n            var cm = (0, _emberNativeDomHelpers.find)('.gh-input .CodeMirror').CodeMirror;\n            cm.setValue('Testing');\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this.get('text'), 'text value after CM editor change').to.equal('Testing');\n            });\n        });\n\n        (0, _mocha.it)('handles focus event', function (done) {\n            // CodeMirror's events are triggered outside of anything we can watch for\n            // in the tests so let's run the class check when we know the event has\n            // been fired and timeout if it's not fired as we expect\n            var onFocus = function onFocus() {\n                // wait for runloop to finish so that the new class has been rendered\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(Ember.$((0, _emberNativeDomHelpers.find)('.gh-input')).hasClass('focus'), 'has focused class on first render with autofocus').to.be.true;\n\n                    done();\n                });\n            };\n\n            this.set('onFocus', onFocus);\n            this.set('text', '');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"4VzkDdPx\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-cm-editor\\\",[[20,[\\\"text\\\"]]],[[\\\"class\\\",\\\"update\\\",\\\"focus-in\\\"],[\\\"gh-input\\\",[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"text\\\"]]],null]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"onFocus\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            // CodeMirror polls the input for changes every 100ms\n            (0, _emberNativeDomHelpers.click)('textarea');\n            (0, _emberNativeDomHelpers.triggerEvent)('textarea', 'focus');\n        });\n\n        (0, _mocha.it)('handles blur event', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            this.set('text', '');\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"0CVIeViW\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-cm-editor\\\",[[20,[\\\"text\\\"]]],[[\\\"class\\\",\\\"update\\\"],[\\\"gh-input\\\",[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"text\\\"]]],null]],null]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            (0, _chai.expect)(Ember.$((0, _emberNativeDomHelpers.find)('.gh-input')).hasClass('focus')).to.be.false;\n\n                            _context.next = 5;\n                            return (0, _emberNativeDomHelpers.click)('textarea');\n\n                        case 5:\n                            _context.next = 7;\n                            return (0, _emberNativeDomHelpers.triggerEvent)('textarea', 'focus');\n\n                        case 7:\n\n                            (0, _chai.expect)(Ember.$((0, _emberNativeDomHelpers.find)('.gh-input')).hasClass('focus')).to.be.true;\n\n                            _context.next = 10;\n                            return (0, _emberNativeDomHelpers.triggerEvent)('textarea', 'blur');\n\n                        case 10:\n\n                            (0, _chai.expect)(Ember.$((0, _emberNativeDomHelpers.find)('.gh-input')).hasClass('focus')).to.be.false;\n\n                        case 11:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('can autofocus', function (done) {\n            var _this2 = this;\n\n            // CodeMirror's events are triggered outside of anything we can watch for\n            // in the tests so let's run the class check when we know the event has\n            // been fired and timeout if it's not fired as we expect\n            var onFocus = function onFocus() {\n                // wait for runloop to finish so that the new class has been rendered\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(_this2.$('.gh-input').hasClass('focus'), 'has focused class on first render with autofocus').to.be.true;\n\n                    done();\n                });\n            };\n\n            this.set('onFocus', onFocus);\n            this.set('text', '');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"0pKWAGzm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-cm-editor\\\",[[20,[\\\"text\\\"]]],[[\\\"class\\\",\\\"update\\\",\\\"autofocus\\\",\\\"focus-in\\\"],[\\\"gh-input\\\",[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"text\\\"]]],null]],null],true,[25,\\\"action\\\",[[19,0,[]],[20,[\\\"onFocus\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-date-time-picker-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-date-time-picker', function () {\n        (0, _emberMocha.setupComponentTest)('gh-date-time-picker', {\n            integration: true\n        });\n\n        _mocha.it.skip('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-date-time-picker}}\n            //     template content\n            //   {{/gh-date-time-picker}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"9AS/NfR9\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-date-time-picker\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-download-count-test', ['pretender', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-download-count', function () {\n        (0, _emberMocha.setupComponentTest)('gh-download-count', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n            server.get('https://count.ghost.org/', function () {\n                return [200, {}, JSON.stringify({ count: 42 })];\n            });\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('hits count endpoint and renders', function () {\n            var _this = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"ggU+ToZU\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-download-count\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this.$().text().trim()).to.equal('42');\n            });\n        });\n\n        (0, _mocha.it)('renders with a block', function () {\n            var _this2 = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"Frdmf139\",\n                \"block\": \"{\\\"symbols\\\":[\\\"count\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-download-count\\\",null,null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[19,1,[]],false],[0,\\\" downloads\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this2.$().text().trim()).to.equal('42 downloads');\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-editor-post-status-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-editor-post-status', function () {\n        (0, _emberMocha.setupComponentTest)('gh-editor-post-status', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-editor-post-status}}\n            //     template content\n            //   {{/gh-editor-post-status}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"RY2oMrWA\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-editor-post-status\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-feature-flag-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var featureStub = Ember.Service.extend({\n        testFlag: true\n    });\n\n    (0, _mocha.describe)('Integration: Component: gh-feature-flag', function () {\n        (0, _emberMocha.setupComponentTest)('gh-feature-flag', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.register('service:feature', featureStub);\n            this.inject.service('feature', { as: 'feature' });\n        });\n\n        (0, _mocha.it)('renders properties correctly', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NpTbF2vV\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-feature-flag\\\",[\\\"testFlag\\\"],null],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n            (0, _chai.expect)(this.$('label').attr('for')).to.equal(this.$('input[type=\"checkbox\"]').attr('id'));\n        });\n\n        (0, _mocha.it)('renders correctly when flag is set to true', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NpTbF2vV\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-feature-flag\\\",[\\\"testFlag\\\"],null],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n            (0, _chai.expect)(this.$('label input[type=\"checkbox\"]').prop('checked')).to.be.true;\n        });\n\n        (0, _mocha.it)('renders correctly when flag is set to false', function () {\n            this.set('feature.testFlag', false);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NpTbF2vV\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-feature-flag\\\",[\\\"testFlag\\\"],null],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n\n            (0, _chai.expect)(this.$('label input[type=\"checkbox\"]').prop('checked')).to.be.false;\n        });\n\n        (0, _mocha.it)('updates to reflect changes in flag property', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NpTbF2vV\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-feature-flag\\\",[\\\"testFlag\\\"],null],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n\n            (0, _chai.expect)(this.$('label input[type=\"checkbox\"]').prop('checked')).to.be.true;\n\n            this.$('label').click();\n\n            (0, _chai.expect)(this.$('label input[type=\"checkbox\"]').prop('checked')).to.be.false;\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-file-uploader-test', ['pretender', 'sinon', 'ember-test-helpers/wait', 'ghost-admin/services/ajax', 'ghost-admin/tests/helpers/file-upload', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _sinon, _wait, _ajax, _fileUpload, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    var notificationsStub = Ember.Service.extend({\n        showAPIError: function showAPIError() {\n            // noop - to be stubbed\n        }\n    });\n\n    var stubSuccessfulUpload = function stubSuccessfulUpload(server) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        server.post('/ghost/api/v0.1/uploads/', function () {\n            return [200, { 'Content-Type': 'application/json' }, '\"/content/images/test.png\"'];\n        }, delay);\n    };\n\n    var stubFailedUpload = function stubFailedUpload(server, code, error) {\n        var delay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        server.post('/ghost/api/v0.1/uploads/', function () {\n            return [code, { 'Content-Type': 'application/json' }, JSON.stringify({\n                errors: [{\n                    errorType: error,\n                    message: 'Error: ' + error\n                }]\n            })];\n        }, delay);\n    };\n\n    (0, _mocha.describe)('Integration: Component: gh-file-uploader', function () {\n        (0, _emberMocha.setupComponentTest)('gh-file-uploader', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n            this.set('uploadUrl', '/ghost/api/v0.1/uploads/');\n\n            this.register('service:notifications', notificationsStub);\n            this.inject.service('notifications', { as: 'notifications' });\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hknzpXpg\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-file-uploader\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('label').text().trim(), 'default label').to.equal('Select or drag-and-drop a file');\n        });\n\n        (0, _mocha.it)('allows file input \"accept\" attribute to be changed', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hknzpXpg\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-file-uploader\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('input[type=\"file\"]').attr('accept'), 'default \"accept\" attribute').to.equal('text/csv');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"UKP/skxy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"accept\\\"],[\\\"application/zip\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('input[type=\"file\"]').attr('accept'), 'specified \"accept\" attribute').to.equal('application/zip');\n        });\n\n        (0, _mocha.it)('renders form with supplied label text', function () {\n            this.set('labelText', 'My label');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"Z6sY5S7c\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"labelText\\\"],[[20,[\\\"labelText\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('label').text().trim(), 'label').to.equal('My label');\n        });\n\n        (0, _mocha.it)('generates request to supplied endpoint', function (done) {\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(server.handledRequests.length).to.equal(1);\n                (0, _chai.expect)(server.handledRequests[0].url).to.equal('/ghost/api/v0.1/uploads/');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadSuccess action on successful upload', function (done) {\n            var uploadSuccess = _sinon.default.spy();\n            this.set('uploadSuccess', uploadSuccess);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hg6ZoAdq\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadSuccess\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadSuccess.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.firstCall.args[0]).to.equal('/content/images/test.png');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('doesn\\'t fire uploadSuccess action on failed upload', function (done) {\n            var uploadSuccess = _sinon.default.spy();\n            this.set('uploadSuccess', uploadSuccess);\n\n            stubFailedUpload(server, 500);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hg6ZoAdq\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadSuccess\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadSuccess.calledOnce).to.be.false;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires fileSelected action on file selection', function (done) {\n            var fileSelected = _sinon.default.spy();\n            this.set('fileSelected', fileSelected);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"fN9YfjUq\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"fileSelected\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"fileSelected\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(fileSelected.calledOnce).to.be.true;\n                (0, _chai.expect)(fileSelected.args[0]).to.not.be.blank;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadStarted action on upload start', function (done) {\n            var uploadStarted = _sinon.default.spy();\n            this.set('uploadStarted', uploadStarted);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NDFlXU0c\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadStarted\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadStarted\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadStarted.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadFinished action on successful upload', function (done) {\n            var uploadFinished = _sinon.default.spy();\n            this.set('uploadFinished', uploadFinished);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"46YomkTk\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadFinished\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFinished\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadFinished.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadFinished action on failed upload', function (done) {\n            var uploadFinished = _sinon.default.spy();\n            this.set('uploadFinished', uploadFinished);\n\n            stubFailedUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"46YomkTk\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadFinished\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFinished\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadFinished.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays invalid file type error', function (done) {\n            var _this = this;\n\n            stubFailedUpload(server, 415, 'UnsupportedMediaTypeError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this.$('.failed').text()).to.match(/The file type you uploaded is not supported/);\n                (0, _chai.expect)(_this.$('.gh-btn-green').length, 'reset button is displayed').to.equal(1);\n                (0, _chai.expect)(_this.$('.gh-btn-green').text()).to.equal('Try Again');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays file too large for server error', function (done) {\n            var _this2 = this;\n\n            stubFailedUpload(server, 413, 'RequestEntityTooLargeError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this2.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this2.$('.failed').text()).to.match(/The file you uploaded was larger/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles file too large error directly from the web server', function (done) {\n            var _this3 = this;\n\n            server.post('/ghost/api/v0.1/uploads/', function () {\n                return [413, {}, ''];\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this3.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this3.$('.failed').text()).to.match(/The file you uploaded was larger/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays other server-side error with message', function (done) {\n            var _this4 = this;\n\n            stubFailedUpload(server, 400, 'UnknownError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this4.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this4.$('.failed').text()).to.match(/Error: UnknownError/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles unknown failure', function (done) {\n            var _this5 = this;\n\n            server.post('/ghost/api/v0.1/uploads/', function () {\n                return [500, { 'Content-Type': 'application/json' }, ''];\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this5.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this5.$('.failed').text()).to.match(/Something went wrong/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('triggers notifications.showAPIError for VersionMismatchError', function (done) {\n            var showAPIError = _sinon.default.spy();\n            this.set('notifications.showAPIError', showAPIError);\n\n            stubFailedUpload(server, 400, 'VersionMismatchError');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(showAPIError.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('doesn\\'t trigger notifications.showAPIError for other errors', function (done) {\n            var showAPIError = _sinon.default.spy();\n            this.set('notifications.showAPIError', showAPIError);\n\n            stubFailedUpload(server, 400, 'UnknownError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(showAPIError.called).to.be.false;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('can be reset after a failed upload', function (done) {\n            var _this6 = this;\n\n            stubFailedUpload(server, 400, 'UnknownError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"QAcTj2N1\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\"],[[20,[\\\"uploadUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                Ember.run(function () {\n                    _this6.$('.gh-btn-green').click();\n                });\n            });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this6.$('input[type=\"file\"]').length).to.equal(1);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays upload progress', function (done) {\n            this.set('done', done);\n\n            // pretender fires a progress event every 50ms\n            stubSuccessfulUpload(server, 150);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"xMOVHlwP\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadFinished\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"done\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            // after 75ms we should have had one progress event\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('.progress .bar').length).to.equal(1);\n\n                var _$$attr$match = this.$('.progress .bar').attr('style').match(/width: (\\d+)%?/),\n                    _$$attr$match2 = _slicedToArray(_$$attr$match, 2),\n                    percentageWidth = _$$attr$match2[1];\n\n                (0, _chai.expect)(percentageWidth).to.be.above(0);\n                (0, _chai.expect)(percentageWidth).to.be.below(100);\n            }, 75);\n        });\n\n        (0, _mocha.it)('handles drag over/leave', function () {\n            var _this7 = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hknzpXpg\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-file-uploader\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                // eslint-disable-next-line new-cap\n                var dragover = Ember.$.Event('dragover', {\n                    dataTransfer: {\n                        files: []\n                    }\n                });\n                _this7.$('.gh-image-uploader').trigger(dragover);\n            });\n\n            (0, _chai.expect)(this.$('.gh-image-uploader').hasClass('-drag-over'), 'has drag-over class').to.be.true;\n\n            Ember.run(function () {\n                _this7.$('.gh-image-uploader').trigger('dragleave');\n            });\n\n            (0, _chai.expect)(this.$('.gh-image-uploader').hasClass('-drag-over'), 'has drag-over class').to.be.false;\n        });\n\n        (0, _mocha.it)('triggers file upload on file drop', function (done) {\n            var _this8 = this;\n\n            var uploadSuccess = _sinon.default.spy();\n            // eslint-disable-next-line new-cap\n            var drop = Ember.$.Event('drop', {\n                dataTransfer: {\n                    files: [(0, _fileUpload.createFile)(['test'], { name: 'test.csv' })]\n                }\n            });\n\n            this.set('uploadSuccess', uploadSuccess);\n\n            stubSuccessfulUpload(server);\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hg6ZoAdq\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadSuccess\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this8.$('.gh-image-uploader').trigger(drop);\n            });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadSuccess.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.firstCall.args[0]).to.equal('/content/images/test.png');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('validates extension by default', function (done) {\n            var _this9 = this;\n\n            var uploadSuccess = _sinon.default.spy();\n            var uploadFailed = _sinon.default.spy();\n\n            this.set('uploadSuccess', uploadSuccess);\n            this.set('uploadFailed', uploadFailed);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"vlYfcsvD\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadSuccess\\\",\\\"uploadFailed\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFailed\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.txt' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadSuccess.called).to.be.false;\n                (0, _chai.expect)(uploadFailed.calledOnce).to.be.true;\n                (0, _chai.expect)(_this9.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this9.$('.failed').text()).to.match(/The file type you uploaded is not supported/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('uploads if validate action supplied and returns true', function (done) {\n            var validate = _sinon.default.stub().returns(true);\n            var uploadSuccess = _sinon.default.spy();\n\n            this.set('validate', validate);\n            this.set('uploadSuccess', uploadSuccess);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"1mBvfVtj\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadSuccess\\\",\\\"validate\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"validate\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(validate.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('skips upload and displays error if validate action supplied and doesn\\'t return true', function (done) {\n            var _this10 = this;\n\n            var validate = _sinon.default.stub().returns(new _ajax.UnsupportedMediaTypeError());\n            var uploadSuccess = _sinon.default.spy();\n            var uploadFailed = _sinon.default.spy();\n\n            this.set('validate', validate);\n            this.set('uploadSuccess', uploadSuccess);\n            this.set('uploadFailed', uploadFailed);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"RINs38mn\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-file-uploader\\\",null,[[\\\"url\\\",\\\"uploadSuccess\\\",\\\"uploadFailed\\\",\\\"validate\\\"],[[20,[\\\"uploadUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFailed\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"validate\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.csv' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(validate.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.called).to.be.false;\n                (0, _chai.expect)(uploadFailed.calledOnce).to.be.true;\n                (0, _chai.expect)(_this10.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this10.$('.failed').text()).to.match(/The file type you uploaded is not supported/);\n                done();\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-image-uploader-test', ['pretender', 'sinon', 'ember-test-helpers/wait', 'ghost-admin/services/ajax', 'ghost-admin/tests/helpers/file-upload', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _sinon, _wait, _ajax, _fileUpload, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    var notificationsStub = Ember.Service.extend({\n        showAPIError: function showAPIError() /* error, options */{\n            // noop - to be stubbed\n        }\n    });\n\n    var sessionStub = Ember.Service.extend({\n        isAuthenticated: false,\n        authorize: function authorize(authorizer, block) {\n            if (this.get('isAuthenticated')) {\n                block('Authorization', 'Bearer token');\n            }\n        }\n    });\n\n    var stubSuccessfulUpload = function stubSuccessfulUpload(server) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        server.post('/ghost/api/v0.1/uploads/', function () {\n            return [200, { 'Content-Type': 'application/json' }, '\"/content/images/test.png\"'];\n        }, delay);\n    };\n\n    var stubFailedUpload = function stubFailedUpload(server, code, error) {\n        var delay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        server.post('/ghost/api/v0.1/uploads/', function () {\n            return [code, { 'Content-Type': 'application/json' }, JSON.stringify({\n                errors: [{\n                    errorType: error,\n                    message: 'Error: ' + error\n                }]\n            })];\n        }, delay);\n    };\n\n    (0, _mocha.describe)('Integration: Component: gh-image-uploader', function () {\n        (0, _emberMocha.setupComponentTest)('gh-image-upload', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            this.register('service:session', sessionStub);\n            this.register('service:notifications', notificationsStub);\n            this.inject.service('session', { as: 'sessionService' });\n            this.inject.service('notifications', { as: 'notifications' });\n            this.set('update', function () {});\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('image', 'http://example.com/test.png');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"arUZG0aU\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\"],[[20,[\\\"image\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n\n        (0, _mocha.it)('renders form with supplied alt text', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"7wv9m+yh\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"altText\\\"],[[20,[\\\"image\\\"]],\\\"text test\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('[data-test-file-input-description]').text().trim()).to.equal('Upload image of \"text test\"');\n        });\n\n        (0, _mocha.it)('renders form with supplied text', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NEeQ8FnV\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"text\\\"],[[20,[\\\"image\\\"]],\\\"text test\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('[data-test-file-input-description]').text().trim()).to.equal('text test');\n        });\n\n        (0, _mocha.it)('generates request to correct endpoint', function (done) {\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(server.handledRequests.length).to.equal(1);\n                (0, _chai.expect)(server.handledRequests[0].url).to.equal('/ghost/api/v0.1/uploads/');\n                (0, _chai.expect)(server.handledRequests[0].requestHeaders.Authorization).to.be.undefined;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('adds authentication headers to request', function (done) {\n            stubSuccessfulUpload(server);\n\n            this.get('sessionService').set('isAuthenticated', true);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                var _server$handledReques = _slicedToArray(server.handledRequests, 1),\n                    request = _server$handledReques[0];\n\n                (0, _chai.expect)(request.requestHeaders.Authorization).to.equal('Bearer token');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires update action on successful upload', function (done) {\n            var update = _sinon.default.spy();\n            this.set('update', update);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(update.calledOnce).to.be.true;\n                (0, _chai.expect)(update.firstCall.args[0]).to.equal('/content/images/test.png');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('doesn\\'t fire update action on failed upload', function (done) {\n            var update = _sinon.default.spy();\n            this.set('update', update);\n\n            stubFailedUpload(server, 500);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(update.calledOnce).to.be.false;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires fileSelected action on file selection', function (done) {\n            var fileSelected = _sinon.default.spy();\n            this.set('fileSelected', fileSelected);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"NvvF/8mL\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"fileSelected\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"fileSelected\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(fileSelected.calledOnce).to.be.true;\n                (0, _chai.expect)(fileSelected.args[0]).to.not.be.blank;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadStarted action on upload start', function (done) {\n            var uploadStarted = _sinon.default.spy();\n            this.set('uploadStarted', uploadStarted);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"nBhb5gnU\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"uploadStarted\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadStarted\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadStarted.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadFinished action on successful upload', function (done) {\n            var uploadFinished = _sinon.default.spy();\n            this.set('uploadFinished', uploadFinished);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"FLmH08K3\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"uploadFinished\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFinished\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadFinished.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('fires uploadFinished action on failed upload', function (done) {\n            var uploadFinished = _sinon.default.spy();\n            this.set('uploadFinished', uploadFinished);\n\n            stubFailedUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"FLmH08K3\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"uploadFinished\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFinished\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadFinished.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays invalid file type error', function (done) {\n            var _this = this;\n\n            stubFailedUpload(server, 415, 'UnsupportedMediaTypeError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this.$('.failed').text()).to.match(/The image type you uploaded is not supported/);\n                (0, _chai.expect)(_this.$('.gh-btn-green').length, 'reset button is displayed').to.equal(1);\n                (0, _chai.expect)(_this.$('.gh-btn-green').text()).to.equal('Try Again');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays file too large for server error', function (done) {\n            var _this2 = this;\n\n            stubFailedUpload(server, 413, 'RequestEntityTooLargeError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this2.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this2.$('.failed').text()).to.match(/The image you uploaded was larger/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles file too large error directly from the web server', function (done) {\n            var _this3 = this;\n\n            server.post('/ghost/api/v0.1/uploads/', function () {\n                return [413, {}, ''];\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this3.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this3.$('.failed').text()).to.match(/The image you uploaded was larger/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays other server-side error with message', function (done) {\n            var _this4 = this;\n\n            stubFailedUpload(server, 400, 'UnknownError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this4.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this4.$('.failed').text()).to.match(/Error: UnknownError/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles unknown failure', function (done) {\n            var _this5 = this;\n\n            server.post('/ghost/api/v0.1/uploads/', function () {\n                return [500, { 'Content-Type': 'application/json' }, ''];\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this5.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this5.$('.failed').text()).to.match(/Something went wrong/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('triggers notifications.showAPIError for VersionMismatchError', function (done) {\n            var showAPIError = _sinon.default.spy();\n            this.set('notifications.showAPIError', showAPIError);\n\n            stubFailedUpload(server, 400, 'VersionMismatchError');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(showAPIError.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('doesn\\'t trigger notifications.showAPIError for other errors', function (done) {\n            var showAPIError = _sinon.default.spy();\n            this.set('notifications.showAPIError', showAPIError);\n\n            stubFailedUpload(server, 400, 'UnknownError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(showAPIError.called).to.be.false;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('can be reset after a failed upload', function (done) {\n            var _this6 = this;\n\n            stubFailedUpload(server, 400, 'UnknownError');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { type: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                Ember.run(function () {\n                    _this6.$('.gh-btn-green').click();\n                });\n            });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this6.$('input[type=\"file\"]').length).to.equal(1);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('displays upload progress', function (done) {\n            this.set('done', done);\n\n            // pretender fires a progress event every 50ms\n            stubSuccessfulUpload(server, 150);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"gPSr/nHj\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"uploadFinished\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"done\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            // after 75ms we should have had one progress event\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('.progress .bar').length).to.equal(1);\n\n                var _$$attr$match = this.$('.progress .bar').attr('style').match(/width: (\\d+)%?/),\n                    _$$attr$match2 = _slicedToArray(_$$attr$match, 2),\n                    percentageWidth = _$$attr$match2[1];\n\n                (0, _chai.expect)(percentageWidth).to.be.above(0);\n                (0, _chai.expect)(percentageWidth).to.be.below(100);\n            }, 75);\n        });\n\n        (0, _mocha.it)('handles drag over/leave', function () {\n            var _this7 = this;\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wa9SMNDm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"image\\\",\\\"update\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                // eslint-disable-next-line new-cap\n                var dragover = Ember.$.Event('dragover', {\n                    dataTransfer: {\n                        files: []\n                    }\n                });\n                _this7.$('.gh-image-uploader').trigger(dragover);\n            });\n\n            (0, _chai.expect)(this.$('.gh-image-uploader').hasClass('-drag-over'), 'has drag-over class').to.be.true;\n\n            Ember.run(function () {\n                _this7.$('.gh-image-uploader').trigger('dragleave');\n            });\n\n            (0, _chai.expect)(this.$('.gh-image-uploader').hasClass('-drag-over'), 'has drag-over class').to.be.false;\n        });\n\n        (0, _mocha.it)('triggers file upload on file drop', function (done) {\n            var _this8 = this;\n\n            var uploadSuccess = _sinon.default.spy();\n            // eslint-disable-next-line new-cap\n            var drop = Ember.$.Event('drop', {\n                dataTransfer: {\n                    files: [(0, _fileUpload.createFile)(['test'], { name: 'test.png' })]\n                }\n            });\n\n            this.set('uploadSuccess', uploadSuccess);\n\n            stubSuccessfulUpload(server);\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"7rNtgAbB\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"uploadSuccess\\\"],[[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this8.$('.gh-image-uploader').trigger(drop);\n            });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadSuccess.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.firstCall.args[0]).to.equal('/content/images/test.png');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('validates extension by default', function (done) {\n            var _this9 = this;\n\n            var uploadSuccess = _sinon.default.spy();\n            var uploadFailed = _sinon.default.spy();\n\n            this.set('uploadSuccess', uploadSuccess);\n            this.set('uploadFailed', uploadFailed);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"GM2RZOWQ\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"uploadSuccess\\\",\\\"uploadFailed\\\"],[[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFailed\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.json' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(uploadSuccess.called).to.be.false;\n                (0, _chai.expect)(uploadFailed.calledOnce).to.be.true;\n                (0, _chai.expect)(_this9.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this9.$('.failed').text()).to.match(/The image type you uploaded is not supported/);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('uploads if validate action supplied and returns true', function (done) {\n            var validate = _sinon.default.stub().returns(true);\n            var uploadSuccess = _sinon.default.spy();\n\n            this.set('validate', validate);\n            this.set('uploadSuccess', uploadSuccess);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"rCNL0FwA\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"uploadSuccess\\\",\\\"validate\\\"],[[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"validate\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.txt' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(validate.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.calledOnce).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('skips upload and displays error if validate action supplied and doesn\\'t return true', function (done) {\n            var _this10 = this;\n\n            var validate = _sinon.default.stub().returns(new _ajax.UnsupportedMediaTypeError());\n            var uploadSuccess = _sinon.default.spy();\n            var uploadFailed = _sinon.default.spy();\n\n            this.set('validate', validate);\n            this.set('uploadSuccess', uploadSuccess);\n            this.set('uploadFailed', uploadFailed);\n\n            stubSuccessfulUpload(server);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"L+odjdWq\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader\\\",null,[[\\\"uploadSuccess\\\",\\\"uploadFailed\\\",\\\"validate\\\"],[[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadSuccess\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFailed\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"validate\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _fileUpload.fileUpload)(this.$('input[type=\"file\"]'), ['test'], { name: 'test.png' });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(validate.calledOnce).to.be.true;\n                (0, _chai.expect)(uploadSuccess.called).to.be.false;\n                (0, _chai.expect)(uploadFailed.calledOnce).to.be.true;\n                (0, _chai.expect)(_this10.$('.failed').length, 'error message is displayed').to.equal(1);\n                (0, _chai.expect)(_this10.$('.failed').text()).to.match(/The image type you uploaded is not supported/);\n                done();\n            });\n        });\n\n        (0, _mocha.describe)('unsplash', function () {\n            (0, _mocha.it)('has unsplash icon only when unsplash is active & allowed');\n            (0, _mocha.it)('opens unsplash modal when icon clicked');\n            (0, _mocha.it)('inserts unsplash image when selected');\n            (0, _mocha.it)('closes unsplash modal when close is triggered');\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-image-uploader-with-preview-test', ['sinon', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-image-uploader-with-preview', function () {\n        (0, _emberMocha.setupComponentTest)('gh-image-uploader-with-preview', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders image if provided', function () {\n            this.set('image', 'http://example.com/test.png');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"Yr3Xle+E\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader-with-preview\\\",null,[[\\\"image\\\"],[[20,[\\\"image\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('.gh-image-uploader.-with-image').length).to.equal(1);\n            (0, _chai.expect)(this.$('img').attr('src')).to.equal('http://example.com/test.png');\n        });\n\n        (0, _mocha.it)('renders upload form when no image provided', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"Yr3Xle+E\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader-with-preview\\\",null,[[\\\"image\\\"],[[20,[\\\"image\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('input[type=\"file\"]').length).to.equal(1);\n        });\n\n        (0, _mocha.it)('triggers remove action when delete icon is clicked', function () {\n            var _this = this;\n\n            var remove = _sinon.default.spy();\n            this.set('remove', remove);\n            this.set('image', 'http://example.com/test.png');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"eEfBv5iG\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-image-uploader-with-preview\\\",null,[[\\\"image\\\",\\\"remove\\\"],[[20,[\\\"image\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"remove\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            Ember.run(function () {\n                _this.$('.image-cancel').click();\n            });\n\n            (0, _chai.expect)(remove.calledOnce).to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-koenig-slashmenu-test', ['ghost-admin/tests/helpers/editor-helpers', 'mocha', 'chai', 'ember-mocha'], function (_editorHelpers, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('gh-koenig: Integration: Component: gh-koenig-slashmenu', function () {\n        (0, _emberMocha.setupComponentTest)('gh-koenig-slashmenu', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.set('value', _editorHelpers.EMPTY_DOC);\n        });\n\n        (0, _mocha.it)('shows menu when / is typed', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            var editor, cardMenu;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"F9Mlyygv\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            editor = (0, _editorHelpers.findEditor)();\n                            _context.next = 4;\n                            return (0, _editorHelpers.focusEditor)();\n\n                        case 4:\n                            _context.next = 6;\n                            return (0, _editorHelpers.inputText)(editor, '/');\n\n                        case 6:\n                            _context.next = 8;\n                            return (0, _editorHelpers.waitForRender)('.gh-cardmenu');\n\n                        case 8:\n                            cardMenu = Ember.$('.gh-cardmenu');\n\n                            (0, _chai.expect)(cardMenu.children().length).to.equal(7);\n\n                        case 10:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('filters tools when a user types', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var editor, cardMenu;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"F9Mlyygv\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            editor = (0, _editorHelpers.findEditor)();\n                            _context2.next = 4;\n                            return (0, _editorHelpers.focusEditor)();\n\n                        case 4:\n                            _context2.next = 6;\n                            return (0, _editorHelpers.inputText)(editor, '/');\n\n                        case 6:\n                            _context2.next = 8;\n                            return (0, _editorHelpers.waitForRender)('.gh-cardmenu');\n\n                        case 8:\n                            cardMenu = Ember.$('.gh-cardmenu');\n\n                            (0, _chai.expect)(cardMenu.children().length).to.equal(7);\n\n                            _context2.next = 12;\n                            return (0, _editorHelpers.inputText)(editor, ' bul');\n\n                        case 12:\n                            (0, _chai.expect)(cardMenu.children().length).to.equal(1);\n\n                        case 13:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('inserts card/markup when clicked');\n        (0, _mocha.it)('inserts card/markup when enter is pressed');\n\n        _mocha.it.skip('ul tool', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var editor, cardMenu;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            this.set('editorMenuIsOpen', function () {});\n                            this.set('editorMenuIsClosed', function () {});\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"0rVlIq9U\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\",\\\"menuIsOpen\\\",\\\"menuIsClosed\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]],[20,[\\\"editorMenuIsOpen\\\"]],[20,[\\\"editorMenuIsClosed\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            editor = (0, _editorHelpers.findEditor)();\n                            _context3.next = 6;\n                            return (0, _editorHelpers.focusEditor)();\n\n                        case 6:\n                            _context3.next = 8;\n                            return (0, _editorHelpers.inputText)(editor, '/');\n\n                        case 8:\n                            _context3.next = 10;\n                            return (0, _editorHelpers.waitForRender)('.gh-cardmenu');\n\n                        case 10:\n                            cardMenu = Ember.$('.gh-cardmenu');\n\n                            (0, _chai.expect)(cardMenu.children().length).to.equal(7);\n\n                            _context3.next = 14;\n                            return (0, _editorHelpers.inputText)(editor, ' bul');\n\n                        case 14:\n                            (0, _chai.expect)(cardMenu.children().length).to.equal(1);\n\n                            _context3.next = 17;\n                            return click('.gh-cardmenu-card');\n\n                        case 17:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        }))\n        // TODO: check inner HTML\n        );\n    });\n});","define('ghost-admin/tests/integration/components/gh-koenig-test', ['sinon', 'ghost-admin/tests/helpers/editor-helpers', 'mocha', 'ember-mocha'], function (_sinon, _editorHelpers, _mocha, _emberMocha) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('gh-koenig: Integration: Component: gh-koenig', function () {\n        (0, _emberMocha.setupComponentTest)('gh-koenig', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.set('value', _editorHelpers.EMPTY_DOC);\n        });\n\n        (0, _mocha.it)('fires change and word-count events', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            // set defaults\n                            this.set('onFirstChange', _sinon.default.spy());\n                            this.set('onChange', _sinon.default.spy());\n\n                            this.set('wordcount', 0);\n                            this.set('actions.wordcountDidChange', function (wordcount) {\n                                this.set('wordcount', wordcount);\n                            });\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"73HSWu6c\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\",\\\"onChange\\\",\\\"onFirstChange\\\",\\\"wordcountDidChange\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"onChange\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"onFirstChange\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],\\\"wordcountDidChange\\\"],null]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            _context.next = 7;\n                            return (0, _editorHelpers.testEditorInput)('abcd efg hijk lmnop', '<p>abcd efg hijk lmnop</p>', expect);\n\n                        case 7:\n\n                            expect(this.get('onFirstChange').calledOnce, 'onFirstChanged called once').to.be.true;\n                            expect(this.get('onChange').called, 'onChange called').to.be.true;\n                            expect(this.get('wordcount'), 'wordcount').to.equal(4);\n\n                        case 10:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.describe)('Markerable markdown support.', function () {\n            (0, _mocha.it)('plain text inputs (placebo)', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context2.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('abcdef', '<p>abcdef</p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n\n            // bold\n            (0, _mocha.it)('** bolds at start of line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context3.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('**test**', '<p><strong>test</strong></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n\n            (0, _mocha.it)('** bolds in a line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context4.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('123**test**', '<p>123<strong>test</strong></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('__ bolds at start of line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context5.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('__test__', '<p><strong>test</strong></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('__ bolds in a line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context6.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('__test__', '<p><strong>test</strong></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            // italic\n            (0, _mocha.it)('* italicises at start of line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context7.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('*test*', '<p><em>test</em></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            (0, _mocha.it)('* italicises in a line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context8.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('123*test*', '<p>123<em>test</em></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            })));\n\n            (0, _mocha.it)('_ italicises at start of line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context9.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('_test_', '<p><em>test</em></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            })));\n\n            (0, _mocha.it)('_ italicises in a line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context10.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('123_test_', '<p>123<em>test</em></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this);\n            })));\n\n            // strikethrough\n            (0, _mocha.it)('~~ strikethroughs at start of line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                        switch (_context11.prev = _context11.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context11.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('~~test~~', '<p><s>test</s></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context11.stop();\n                        }\n                    }\n                }, _callee11, this);\n            })));\n            (0, _mocha.it)('~~ strikethroughs in a line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                    while (1) {\n                        switch (_context12.prev = _context12.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context12.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('123~~test~~', '<p>123<s>test</s></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context12.stop();\n                        }\n                    }\n                }, _callee12, this);\n            })));\n\n            // links\n            (0, _mocha.it)('[]() creates a link at start of line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                    while (1) {\n                        switch (_context13.prev = _context13.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context13.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('[ghost](https://www.ghost.org/)', '<p><a href=\"https://www.ghost.org/\">ghost</a></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context13.stop();\n                        }\n                    }\n                }, _callee13, this);\n            })));\n\n            (0, _mocha.it)('[]() creates a link in a line', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                    while (1) {\n                        switch (_context14.prev = _context14.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context14.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('123[ghost](https://www.ghost.org/)', '<p>123<a href=\"https://www.ghost.org/\">ghost</a></p>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context14.stop();\n                        }\n                    }\n                }, _callee14, this);\n            })));\n        });\n\n        (0, _mocha.describe)('Block markdown support', function () {\n            // headings\n            (0, _mocha.it)('# creates an H1', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                    while (1) {\n                        switch (_context15.prev = _context15.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context15.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('# ', '<h1><br></h1>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context15.stop();\n                        }\n                    }\n                }, _callee15, this);\n            })));\n\n            (0, _mocha.it)('## creates an H2', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                    while (1) {\n                        switch (_context16.prev = _context16.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context16.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('## ', '<h2><br></h2>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context16.stop();\n                        }\n                    }\n                }, _callee16, this);\n            })));\n\n            (0, _mocha.it)('### creates an H3', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n                return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                    while (1) {\n                        switch (_context17.prev = _context17.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context17.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('### ', '<h3><br></h3>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context17.stop();\n                        }\n                    }\n                }, _callee17, this);\n            })));\n\n            // lists\n            (0, _mocha.it)('* creates an UL', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n                return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                    while (1) {\n                        switch (_context18.prev = _context18.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context18.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('* ', '<ul><li><br></li></ul>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context18.stop();\n                        }\n                    }\n                }, _callee18, this);\n            })));\n\n            (0, _mocha.it)('- creates an UL', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n                return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                    while (1) {\n                        switch (_context19.prev = _context19.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context19.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('- ', '<ul><li><br></li></ul>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context19.stop();\n                        }\n                    }\n                }, _callee19, this);\n            })));\n\n            (0, _mocha.it)('1. creates an OL', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n                return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                    while (1) {\n                        switch (_context20.prev = _context20.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context20.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('1. ', '<ol><li><br></li></ol>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context20.stop();\n                        }\n                    }\n                }, _callee20, this);\n            })));\n\n            // quote\n            (0, _mocha.it)('> creates an blockquote', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n                return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                    while (1) {\n                        switch (_context21.prev = _context21.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context21.next = 3;\n                                return (0, _editorHelpers.testEditorInput)('> ', '<blockquote><br></blockquote>', expect);\n\n                            case 3:\n                            case 'end':\n                                return _context21.stop();\n                        }\n                    }\n                }, _callee21, this);\n            })));\n        });\n\n        (0, _mocha.describe)('Card markdown support.', function () {\n            (0, _mocha.it)('![]() creates an image card', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n                var value;\n                return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                    while (1) {\n                        switch (_context22.prev = _context22.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context22.next = 3;\n                                return (0, _editorHelpers.testEditorInputTimeout)('![image of something](https://unsplash.it/200/300/?random)');\n\n                            case 3:\n                                value = _context22.sent;\n\n                                expect(value).to.have.string('kg-card-image');\n\n                            case 5:\n                            case 'end':\n                                return _context22.stop();\n                        }\n                    }\n                }, _callee22, this);\n            })));\n\n            (0, _mocha.it)('``` creates a markdown card.', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n                var value;\n                return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                    while (1) {\n                        switch (_context23.prev = _context23.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"F9Mlyygv\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-koenig\\\",null,[[\\\"apiRoot\\\",\\\"assetPath\\\",\\\"containerSelector\\\",\\\"mobiledoc\\\"],[\\\"/todo\\\",\\\"/assets\\\",\\\".gh-koenig-container\\\",[20,[\\\"value\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                _context23.next = 3;\n                                return (0, _editorHelpers.testEditorInputTimeout)('```some code```');\n\n                            case 3:\n                                value = _context23.sent;\n\n                                expect(value).to.have.string('kg-card-markdown');\n\n                            case 5:\n                            case 'end':\n                                return _context23.stop();\n                        }\n                    }\n                }, _callee23, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-markdown-editor-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-markdown-editor', function () {\n        (0, _emberMocha.setupComponentTest)('gh-markdown-editor', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-markdown-editor}}\n            //     template content\n            //   {{/gh-markdown-editor}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"6X3sTH9Z\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-markdown-editor\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n\n        (0, _mocha.describe)('unsplash', function () {\n            (0, _mocha.it)('has unsplash icon in toolbar if unsplash is active');\n            (0, _mocha.it)('opens unsplash modal when clicked');\n            (0, _mocha.it)('closes unsplash modal when close triggered');\n            (0, _mocha.it)('inserts unsplash image & credit when selected');\n            (0, _mocha.it)('inserts at cursor when editor has focus');\n            (0, _mocha.it)('inserts at end when editor is blurred');\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-navitem-test', ['ghost-admin/models/navigation-item', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_navigationItem, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-navitem', function () {\n        (0, _emberMocha.setupComponentTest)('gh-navitem', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.set('baseUrl', 'http://localhost:2368');\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url' }));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HLNTGosb\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $item = this.$('.gh-blognav-item');\n\n            (0, _chai.expect)($item.find('.gh-blognav-grab').length).to.equal(1);\n            (0, _chai.expect)($item.find('.gh-blognav-label').length).to.equal(1);\n            (0, _chai.expect)($item.find('.gh-blognav-url').length).to.equal(1);\n            (0, _chai.expect)($item.find('.gh-blognav-delete').length).to.equal(1);\n\n            // doesn't show any errors\n            (0, _chai.expect)($item.hasClass('gh-blognav-item--error')).to.be.false;\n            (0, _chai.expect)($item.find('.error').length).to.equal(0);\n            (0, _chai.expect)($item.find('.response:visible').length).to.equal(0);\n        });\n\n        (0, _mocha.it)('doesn\\'t show drag handle for new items', function () {\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url', isNew: true }));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HLNTGosb\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $item = this.$('.gh-blognav-item');\n\n            (0, _chai.expect)($item.find('.gh-blognav-grab').length).to.equal(0);\n        });\n\n        (0, _mocha.it)('shows add button for new items', function () {\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url', isNew: true }));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HLNTGosb\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $item = this.$('.gh-blognav-item');\n\n            (0, _chai.expect)($item.find('.gh-blognav-add').length).to.equal(1);\n            (0, _chai.expect)($item.find('.gh-blognav-delete').length).to.equal(0);\n        });\n\n        (0, _mocha.it)('triggers delete action', function () {\n            var _this = this;\n\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url' }));\n\n            var deleteActionCallCount = 0;\n            this.on('deleteItem', function (navItem) {\n                (0, _chai.expect)(navItem).to.equal(_this.get('navItem'));\n                deleteActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"AJK9zMSK\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\",\\\"deleteItem\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"deleteItem\\\"],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            this.$('.gh-blognav-delete').trigger('click');\n\n            (0, _chai.expect)(deleteActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('triggers add action', function () {\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url', isNew: true }));\n\n            var addActionCallCount = 0;\n            this.on('add', function () {\n                addActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"LcyTXuSV\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\",\\\"addItem\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"add\\\"],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            this.$('.gh-blognav-add').trigger('click');\n\n            (0, _chai.expect)(addActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('triggers update url action', function () {\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url' }));\n\n            var updateActionCallCount = 0;\n            this.on('update', function () {\n                updateActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"xXeYTH+4\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\",\\\"updateUrl\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"update\\\"],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            this.$('.gh-blognav-url input').trigger('blur');\n\n            (0, _chai.expect)(updateActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('triggers update label action', function () {\n            this.set('navItem', _navigationItem.default.create({ label: 'Test', url: '/url' }));\n\n            var updateActionCallCount = 0;\n            this.on('update', function () {\n                updateActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"CisppN9m\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\",\\\"updateLabel\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"update\\\"],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            this.$('.gh-blognav-label input').trigger('blur');\n\n            (0, _chai.expect)(updateActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('displays inline errors', function () {\n            this.set('navItem', _navigationItem.default.create({ label: '', url: '' }));\n            this.get('navItem').validate();\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HLNTGosb\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-navitem\\\",null,[[\\\"navItem\\\",\\\"baseUrl\\\"],[[20,[\\\"navItem\\\"]],[20,[\\\"baseUrl\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $item = this.$('.gh-blognav-item');\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)($item.hasClass('gh-blognav-item--error')).to.be.true;\n                (0, _chai.expect)($item.find('.gh-blognav-label').hasClass('error')).to.be.true;\n                (0, _chai.expect)($item.find('.gh-blognav-label .response').text().trim()).to.equal('You must specify a label');\n                (0, _chai.expect)($item.find('.gh-blognav-url').hasClass('error')).to.be.true;\n                (0, _chai.expect)($item.find('.gh-blognav-url .response').text().trim()).to.equal('You must specify a URL or relative path');\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-navitem-url-input-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    // we want baseUrl to match the running domain so relative URLs are\n    // handled as expected (browser auto-sets the domain when using a.href)\n    var currentUrl = window.location.protocol + '//' + window.location.host + '/';\n\n    (0, _mocha.describe)('Integration: Component: gh-navitem-url-input', function () {\n        (0, _emberMocha.setupComponentTest)('gh-navitem-url-input', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            // set defaults\n            this.set('baseUrl', currentUrl);\n            this.set('url', '');\n            this.set('isNew', false);\n            this.on('clearErrors', function () {\n                return null;\n            });\n        });\n\n        (0, _mocha.it)('renders correctly with blank url', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"OkXL+Mvy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            (0, _chai.expect)($input).to.have.length(1);\n            (0, _chai.expect)($input.hasClass('gh-input')).to.be.true;\n            (0, _chai.expect)($input.val()).to.equal(currentUrl);\n        });\n\n        (0, _mocha.it)('renders correctly with relative urls', function () {\n            this.set('url', '/about');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"OkXL+Mvy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            (0, _chai.expect)($input.val()).to.equal(currentUrl + 'about');\n\n            this.set('url', '/about#contact');\n            (0, _chai.expect)($input.val()).to.equal(currentUrl + 'about#contact');\n        });\n\n        (0, _mocha.it)('renders correctly with absolute urls', function () {\n            this.set('url', 'https://example.com:2368/#test');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"OkXL+Mvy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            (0, _chai.expect)($input.val()).to.equal('https://example.com:2368/#test');\n\n            this.set('url', 'mailto:test@example.com');\n            (0, _chai.expect)($input.val()).to.equal('mailto:test@example.com');\n\n            this.set('url', 'tel:01234-5678-90');\n            (0, _chai.expect)($input.val()).to.equal('tel:01234-5678-90');\n\n            this.set('url', '//protocol-less-url.com');\n            (0, _chai.expect)($input.val()).to.equal('//protocol-less-url.com');\n\n            this.set('url', '#anchor');\n            (0, _chai.expect)($input.val()).to.equal('#anchor');\n        });\n\n        (0, _mocha.it)('deletes base URL on backspace', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"OkXL+Mvy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            (0, _chai.expect)($input.val()).to.equal(currentUrl);\n            Ember.run(function () {\n                // TODO: why is ember's keyEvent helper not available here?\n                // eslint-disable-next-line new-cap\n                var e = Ember.$.Event('keydown');\n                e.keyCode = 8;\n                $input.trigger(e);\n            });\n            (0, _chai.expect)($input.val()).to.equal('');\n        });\n\n        (0, _mocha.it)('deletes base URL on delete', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"OkXL+Mvy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            (0, _chai.expect)($input.val()).to.equal(currentUrl);\n            Ember.run(function () {\n                // TODO: why is ember's keyEvent helper not available here?\n                // eslint-disable-next-line new-cap\n                var e = Ember.$.Event('keydown');\n                e.keyCode = 46;\n                $input.trigger(e);\n            });\n            (0, _chai.expect)($input.val()).to.equal('');\n        });\n\n        (0, _mocha.it)('adds base url to relative urls on blur', function () {\n            this.on('updateUrl', function () {\n                return null;\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            Ember.run(function () {\n                $input.val('/about').trigger('input');\n            });\n            Ember.run(function () {\n                $input.trigger('blur');\n            });\n\n            (0, _chai.expect)($input.val()).to.equal(currentUrl + 'about');\n        });\n\n        (0, _mocha.it)('adds \"mailto:\" to email addresses on blur', function () {\n            this.on('updateUrl', function () {\n                return null;\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            Ember.run(function () {\n                $input.val('test@example.com').trigger('input');\n            });\n            Ember.run(function () {\n                $input.trigger('blur');\n            });\n\n            (0, _chai.expect)($input.val()).to.equal('mailto:test@example.com');\n\n            // ensure we don't double-up on the mailto:\n            Ember.run(function () {\n                $input.trigger('blur');\n            });\n            (0, _chai.expect)($input.val()).to.equal('mailto:test@example.com');\n        });\n\n        (0, _mocha.it)('doesn\\'t add base url to invalid urls on blur', function () {\n            this.on('updateUrl', function () {\n                return null;\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            var changeValue = function changeValue(value) {\n                Ember.run(function () {\n                    $input.val(value).trigger('input').trigger('blur');\n                });\n            };\n\n            changeValue('with spaces');\n            (0, _chai.expect)($input.val()).to.equal('with spaces');\n\n            changeValue('/with spaces');\n            (0, _chai.expect)($input.val()).to.equal('/with spaces');\n        });\n\n        (0, _mocha.it)('doesn\\'t mangle invalid urls on blur', function () {\n            this.on('updateUrl', function () {\n                return null;\n            });\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            Ember.run(function () {\n                $input.val(currentUrl + ' /test').trigger('input').trigger('blur');\n            });\n\n            (0, _chai.expect)($input.val()).to.equal(currentUrl + ' /test');\n        });\n\n        // https://github.com/TryGhost/Ghost/issues/9373\n        (0, _mocha.it)('doesn\\'t mangle urls when baseUrl has unicode characters', function () {\n            this.on('updateUrl', function () {\n                return null;\n            });\n\n            this.set('baseUrl', 'http://exämple.com');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            Ember.run(function () {\n                $input.val(currentUrl + '/test').trigger('input').trigger('blur');\n            });\n\n            (0, _chai.expect)($input.val()).to.equal(currentUrl + '/test');\n        });\n\n        (0, _mocha.it)('triggers \"update\" action on blur', function () {\n            var changeActionCallCount = 0;\n            this.on('updateUrl', function () {\n                changeActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            $input.trigger('blur');\n\n            (0, _chai.expect)(changeActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('triggers \"update\" action on enter', function () {\n            var changeActionCallCount = 0;\n            this.on('updateUrl', function () {\n                changeActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            Ember.run(function () {\n                // TODO: why is ember's keyEvent helper not available here?\n                // eslint-disable-next-line new-cap\n                var e = Ember.$.Event('keypress');\n                e.keyCode = 13;\n                $input.trigger(e);\n            });\n\n            (0, _chai.expect)(changeActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('triggers \"update\" action on CMD-S', function () {\n            var changeActionCallCount = 0;\n            this.on('updateUrl', function () {\n                changeActionCallCount += 1;\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            Ember.run(function () {\n                // TODO: why is ember's keyEvent helper not available here?\n                // eslint-disable-next-line new-cap\n                var e = Ember.$.Event('keydown');\n                e.keyCode = 83;\n                e.metaKey = true;\n                $input.trigger(e);\n            });\n\n            (0, _chai.expect)(changeActionCallCount).to.equal(1);\n        });\n\n        (0, _mocha.it)('sends absolute urls straight through to change action', function () {\n            var expectedUrl = '';\n\n            this.on('updateUrl', function (url) {\n                (0, _chai.expect)(url).to.equal(expectedUrl);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            var testUrl = function testUrl(url) {\n                expectedUrl = url;\n                Ember.run(function () {\n                    $input.val(url).trigger('input');\n                });\n                Ember.run(function () {\n                    $input.trigger('blur');\n                });\n            };\n\n            testUrl('http://example.com');\n            testUrl('http://example.com/');\n            testUrl('https://example.com');\n            testUrl('//example.com');\n            testUrl('//localhost:1234');\n            testUrl('#anchor');\n            testUrl('mailto:test@example.com');\n            testUrl('tel:12345-567890');\n            testUrl('javascript:alert(\"testing\");');\n        });\n\n        (0, _mocha.it)('strips base url from relative urls before sending to change action', function () {\n            var expectedUrl = '';\n\n            this.on('updateUrl', function (url) {\n                (0, _chai.expect)(url).to.equal(expectedUrl);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            var testUrl = function testUrl(url) {\n                expectedUrl = '/' + url;\n                Ember.run(function () {\n                    $input.val('' + currentUrl + url).trigger('input');\n                });\n                Ember.run(function () {\n                    $input.trigger('blur');\n                });\n            };\n\n            testUrl('about/');\n            testUrl('about#contact');\n            testUrl('test/nested/');\n        });\n\n        (0, _mocha.it)('handles links to subdomains of blog domain', function () {\n            var expectedUrl = '';\n\n            this.set('baseUrl', 'http://example.com/');\n\n            this.on('updateUrl', function (url) {\n                (0, _chai.expect)(url).to.equal(expectedUrl);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            expectedUrl = 'http://test.example.com/';\n            Ember.run(function () {\n                $input.val(expectedUrl).trigger('input').trigger('blur');\n            });\n            (0, _chai.expect)($input.val()).to.equal(expectedUrl);\n        });\n\n        (0, _mocha.it)('adds trailing slash to relative URL', function () {\n            var expectedUrl = '';\n\n            this.on('updateUrl', function (url) {\n                (0, _chai.expect)(url).to.equal(expectedUrl);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            var testUrl = function testUrl(url) {\n                expectedUrl = '/' + url + '/';\n                Ember.run(function () {\n                    $input.val('' + currentUrl + url).trigger('input');\n                });\n                Ember.run(function () {\n                    $input.trigger('blur');\n                });\n            };\n\n            testUrl('about');\n            testUrl('test/nested');\n        });\n\n        (0, _mocha.it)('does not add trailing slash on relative URL with [.?#]', function () {\n            var expectedUrl = '';\n\n            this.on('updateUrl', function (url) {\n                (0, _chai.expect)(url).to.equal(expectedUrl);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            var testUrl = function testUrl(url) {\n                expectedUrl = '/' + url;\n                Ember.run(function () {\n                    $input.val('' + currentUrl + url).trigger('input');\n                });\n                Ember.run(function () {\n                    $input.trigger('blur');\n                });\n            };\n\n            testUrl('about#contact');\n            testUrl('test/nested.svg');\n            testUrl('test?gho=sties');\n            testUrl('test/nested?sli=mer');\n        });\n\n        (0, _mocha.it)('does not add trailing slash on non-relative URLs', function () {\n            var expectedUrl = '';\n\n            this.on('updateUrl', function (url) {\n                (0, _chai.expect)(url).to.equal(expectedUrl);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"sONVtdy+\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $input = this.$('input');\n\n            var testUrl = function testUrl(url) {\n                expectedUrl = '/' + url;\n                Ember.run(function () {\n                    $input.val('' + currentUrl + url).trigger('input');\n                });\n                Ember.run(function () {\n                    $input.trigger('blur');\n                });\n            };\n\n            testUrl('http://woo.ff/test');\n            testUrl('http://me.ow:2342/nested/test');\n            testUrl('https://wro.om/car#race');\n            testUrl('https://kabo.om/explosion?really=now');\n        });\n\n        (0, _mocha.describe)('with sub-folder baseUrl', function () {\n            beforeEach(function () {\n                this.set('baseUrl', currentUrl + 'blog/');\n            });\n\n            (0, _mocha.it)('handles URLs relative to base url', function () {\n                var expectedUrl = '';\n\n                this.on('updateUrl', function (url) {\n                    (0, _chai.expect)(url).to.equal(expectedUrl);\n                });\n\n                this.render(Ember.HTMLBars.template({\n                    \"id\": \"ymRFYRcH\",\n                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n                \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n            \\\"]],\\\"hasEval\\\":false}\",\n                    \"meta\": {}\n                }));\n                var $input = this.$('input');\n\n                var testUrl = function testUrl(url) {\n                    expectedUrl = url;\n                    Ember.run(function () {\n                        $input.val(currentUrl + 'blog' + url).trigger('input');\n                    });\n                    Ember.run(function () {\n                        $input.trigger('blur');\n                    });\n                };\n\n                testUrl('/about/');\n                testUrl('/about#contact');\n                testUrl('/test/nested/');\n            });\n\n            (0, _mocha.it)('handles URLs relative to base host', function () {\n                var expectedUrl = '';\n\n                this.on('updateUrl', function (url) {\n                    (0, _chai.expect)(url).to.equal(expectedUrl);\n                });\n\n                this.render(Ember.HTMLBars.template({\n                    \"id\": \"ymRFYRcH\",\n                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n                \\\"],[1,[25,\\\"gh-navitem-url-input\\\",null,[[\\\"baseUrl\\\",\\\"url\\\",\\\"isNew\\\",\\\"update\\\",\\\"clearErrors\\\"],[[20,[\\\"baseUrl\\\"]],[20,[\\\"url\\\"]],[20,[\\\"isNew\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"updateUrl\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"clearErrors\\\"],null]]]],false],[0,\\\"\\\\n            \\\"]],\\\"hasEval\\\":false}\",\n                    \"meta\": {}\n                }));\n                var $input = this.$('input');\n\n                var testUrl = function testUrl(url) {\n                    expectedUrl = url;\n                    Ember.run(function () {\n                        $input.val(url).trigger('input');\n                    });\n                    Ember.run(function () {\n                        $input.trigger('blur');\n                    });\n                };\n\n                testUrl('http://' + window.location.host);\n                testUrl('https://' + window.location.host);\n                testUrl('http://' + window.location.host + '/');\n                testUrl('https://' + window.location.host + '/');\n                testUrl('http://' + window.location.host + '/test');\n                testUrl('https://' + window.location.host + '/test');\n                testUrl('http://' + window.location.host + '/#test');\n                testUrl('https://' + window.location.host + '/#test');\n                testUrl('http://' + window.location.host + '/another/folder');\n                testUrl('https://' + window.location.host + '/another/folder');\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-notification-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-notification', function () {\n        (0, _emberMocha.setupComponentTest)('gh-notification', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('message', { message: 'Test message', type: 'success' });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hwsIz3+G\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-notification\\\",null,[[\\\"message\\\"],[[20,[\\\"message\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('article.gh-notification')).to.have.length(1);\n            var $notification = this.$('.gh-notification');\n\n            (0, _chai.expect)($notification.hasClass('gh-notification-passive')).to.be.true;\n            (0, _chai.expect)($notification.text()).to.match(/Test message/);\n        });\n\n        (0, _mocha.it)('maps message types to CSS classes', function () {\n            this.set('message', { message: 'Test message', type: 'success' });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hwsIz3+G\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-notification\\\",null,[[\\\"message\\\"],[[20,[\\\"message\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var $notification = this.$('.gh-notification');\n\n            this.set('message.type', 'success');\n            (0, _chai.expect)($notification.hasClass('gh-notification-green'), 'success class isn\\'t green').to.be.true;\n\n            this.set('message.type', 'error');\n            (0, _chai.expect)($notification.hasClass('gh-notification-red'), 'success class isn\\'t red').to.be.true;\n\n            this.set('message.type', 'warn');\n            (0, _chai.expect)($notification.hasClass('gh-notification-yellow'), 'success class isn\\'t yellow').to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-notifications-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var notificationsStub = Ember.Service.extend({\n        notifications: Ember.A()\n    });\n\n    (0, _mocha.describe)('Integration: Component: gh-notifications', function () {\n        (0, _emberMocha.setupComponentTest)('gh-notifications', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.register('service:notifications', notificationsStub);\n            this.inject.service('notifications', { as: 'notifications' });\n\n            this.set('notifications.notifications', [{ message: 'First', type: 'error' }, { message: 'Second', type: 'warn' }]);\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"j3dn+Y4e\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-notifications\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.gh-notifications').length).to.equal(1);\n\n            (0, _chai.expect)(this.$('.gh-notifications').children().length).to.equal(2);\n\n            this.set('notifications.notifications', Ember.A());\n            (0, _chai.expect)(this.$('.gh-notifications').children().length).to.equal(0);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-profile-image-test', ['pretender', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha', 'ember-concurrency'], function (_pretender, _wait, _mocha, _chai, _emberMocha, _emberConcurrency) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    var pathsStub = Ember.Service.extend({\n        init: function init() {\n            this._super.apply(this, arguments);\n\n            this.url = {\n                api: function api() {\n                    return '';\n                },\n                asset: function asset(src) {\n                    return src;\n                }\n            };\n        }\n    });\n\n    var stubKnownGravatar = function stubKnownGravatar(server) {\n        server.get('http://www.gravatar.com/avatar/:md5', function () {\n            return [200, { 'Content-Type': 'image/png' }, ''];\n        });\n\n        server.head('http://www.gravatar.com/avatar/:md5', function () {\n            return [200, { 'Content-Type': 'image/png' }, ''];\n        });\n    };\n\n    var stubUnknownGravatar = function stubUnknownGravatar(server) {\n        server.get('http://www.gravatar.com/avatar/:md5', function () {\n            return [404, {}, ''];\n        });\n\n        server.head('http://www.gravatar.com/avatar/:md5', function () {\n            return [404, {}, ''];\n        });\n    };\n\n    var configStubuseGravatar = Ember.Service.extend({\n        useGravatar: true\n    });\n\n    (0, _mocha.describe)('Integration: Component: gh-profile-image', function () {\n        (0, _emberMocha.setupComponentTest)('gh-profile-image', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            this.register('service:ghost-paths', pathsStub);\n            this.inject.service('ghost-paths', { as: 'ghost-paths' });\n            this.register('service:config', configStubuseGravatar);\n            this.inject.service('config', { as: 'config' });\n\n            server = new _pretender.default();\n            stubKnownGravatar(server);\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('email', '');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"F1BIWsxP\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-profile-image\\\",null,[[\\\"email\\\"],[[20,[\\\"email\\\"]]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n\n        (0, _mocha.it)('renders default image if no email supplied', function () {\n            this.set('email', null);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"iNunQqNy\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-profile-image\\\",null,[[\\\"email\\\",\\\"size\\\",\\\"debounce\\\"],[[20,[\\\"email\\\"]],100,50]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), 'gravatar image style').to.equal('display: none');\n        });\n\n        (0, _mocha.it)('renders the gravatar if valid email supplied and privacy.useGravatar allows it', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            var email, expectedUrl;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            email = 'test@example.com';\n                            expectedUrl = '//www.gravatar.com/avatar/' + md5(email) + '?s=100&d=404';\n\n\n                            this.set('email', email);\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"iNunQqNy\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-profile-image\\\",null,[[\\\"email\\\",\\\"size\\\",\\\"debounce\\\"],[[20,[\\\"email\\\"]],100,50]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            // wait for the ajax request to complete\n                            _context.next = 6;\n                            return (0, _wait.default)();\n\n                        case 6:\n\n                            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), 'gravatar image style').to.equal('background-image: url(' + expectedUrl + '); display: block');\n\n                        case 7:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('doesn\\'t render the gravatar if valid email supplied but privacy.useGravatar forbids it', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var email;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            email = 'test@example.com';\n\n\n                            this.set('email', email);\n                            this.set('config.useGravatar', false);\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"iNunQqNy\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-profile-image\\\",null,[[\\\"email\\\",\\\"size\\\",\\\"debounce\\\"],[[20,[\\\"email\\\"]],100,50]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            _context2.next = 6;\n                            return (0, _wait.default)();\n\n                        case 6:\n\n                            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), 'gravatar image style').to.equal('display: none');\n\n                        case 7:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('doesn\\'t add background url if gravatar image doesn\\'t exist', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            stubUnknownGravatar(server);\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"kO7JyoWz\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-profile-image\\\",null,[[\\\"email\\\",\\\"size\\\",\\\"debounce\\\"],[\\\"test@example.com\\\",100,50]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            _context3.next = 4;\n                            return (0, _wait.default)();\n\n                        case 4:\n\n                            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), 'gravatar image style').to.equal('background-image: url(); display: none');\n\n                        case 5:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.it)('throttles gravatar loading as email is changed', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n            var _this = this;\n\n            var email, expectedUrl;\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                    switch (_context4.prev = _context4.next) {\n                        case 0:\n                            email = 'test@example.com';\n                            expectedUrl = '//www.gravatar.com/avatar/' + md5(email) + '?s=100&d=404';\n\n\n                            this.set('email', 'test');\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"GqonooSE\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-profile-image\\\",null,[[\\\"email\\\",\\\"size\\\",\\\"debounce\\\"],[[20,[\\\"email\\\"]],100,300]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                            Ember.run(function () {\n                                _this.set('email', email);\n                            });\n\n                            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), '.gravatar-img background not immediately changed on email change').to.equal('display: none');\n\n                            _context4.next = 8;\n                            return (0, _emberConcurrency.timeout)(250);\n\n                        case 8:\n\n                            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), '.gravatar-img background still not changed before debounce timeout').to.equal('display: none');\n\n                            _context4.next = 11;\n                            return (0, _emberConcurrency.timeout)(100);\n\n                        case 11:\n\n                            (0, _chai.expect)(this.$('.gravatar-img').attr('style'), '.gravatar-img background changed after debounce timeout').to.equal('background-image: url(' + expectedUrl + '); display: block');\n\n                        case 12:\n                        case 'end':\n                            return _context4.stop();\n                    }\n                }\n            }, _callee4, this);\n        })));\n    });\n});","define('ghost-admin/tests/integration/components/gh-progress-bar-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-progress-bar', function () {\n        (0, _emberMocha.setupComponentTest)('gh-progress-bar', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-progress-bar}}\n            //     template content\n            //   {{/gh-progress-bar}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"dNqxb7tp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-progress-bar\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-psm-tags-input-test', ['ghost-admin/mirage/config/posts', 'ghost-admin/mirage/config/themes', 'ember-test-helpers/wait', 'ember-native-dom-helpers', 'ember-power-select/test-support/helpers', 'mocha', 'chai', 'ember-mocha', 'ghost-admin/initializers/ember-cli-mirage'], function (_posts, _themes, _wait, _emberNativeDomHelpers, _helpers, _mocha, _chai, _emberMocha, _emberCliMirage) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    // NOTE: although Mirage has posts<->tags relationship and can respond\n    // to :post-id/?include=tags all ordering information is lost so we\n    // need to build the tags array manually\n    var assignPostWithTags = function postWithTags(context) {\n        for (var _len = arguments.length, slugs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            slugs[_key - 1] = arguments[_key];\n        }\n\n        context.get('store').findRecord('post', 1).then(function (post) {\n            context.get('store').findAll('tag').then(function (tags) {\n                slugs.forEach(function (slug) {\n                    post.get('tags').pushObject(tags.findBy('slug', slug));\n                });\n\n                context.set('post', post);\n            });\n        });\n    };\n\n    // TODO: Unskip and fix\n    // skipped because it was failing most of the time on Travis\n    // see https://github.com/TryGhost/Ghost/issues/8805\n    _mocha.describe.skip('Integration: Component: gh-psm-tags-input', function () {\n        (0, _emberMocha.setupComponentTest)('gh-psm-tags-input', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = (0, _emberCliMirage.startMirage)();\n            server.create('user');\n\n            (0, _posts.default)(server);\n            (0, _themes.default)(server);\n\n            server.create('post');\n            server.create('tag', { name: 'Tag One', slug: 'one' });\n            server.create('tag', { name: 'Tag Two', slug: 'two' });\n            server.create('tag', { name: 'Tag Three', slug: 'three' });\n            server.create('tag', { name: '#Internal Tag', visibility: 'internal', slug: 'internal' });\n\n            this.inject.service('store');\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('shows selected tags on render', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            var _this = this;\n\n            var selected;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            Ember.run(function () {\n                                assignPostWithTags(_this, 'one', 'three');\n                            });\n                            _context.next = 3;\n                            return (0, _wait.default)();\n\n                        case 3:\n                            _context.next = 5;\n                            return this.render(Ember.HTMLBars.template({\n                                \"id\": \"jxUcCIoN\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                        case 5:\n                            selected = (0, _emberNativeDomHelpers.findAll)('.tag-token');\n\n                            (0, _chai.expect)(selected.length).to.equal(2);\n                            (0, _chai.expect)(selected[0].textContent).to.have.string('Tag One');\n                            (0, _chai.expect)(selected[1].textContent).to.have.string('Tag Three');\n\n                        case 9:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('exposes all tags as options', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var _this2 = this;\n\n            var options;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            Ember.run(function () {\n                                _this2.set('post', _this2.get('store').findRecord('post', 1));\n                            });\n                            _context2.next = 3;\n                            return (0, _wait.default)();\n\n                        case 3:\n                            _context2.next = 5;\n                            return this.render(Ember.HTMLBars.template({\n                                \"id\": \"jxUcCIoN\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                        case 5:\n                            _context2.next = 7;\n                            return (0, _helpers.clickTrigger)();\n\n                        case 7:\n                            options = (0, _emberNativeDomHelpers.findAll)('.ember-power-select-option');\n\n                            (0, _chai.expect)(options.length).to.equal(4);\n                            (0, _chai.expect)(options[0].textContent).to.have.string('Tag One');\n                            (0, _chai.expect)(options[1].textContent).to.have.string('Tag Two');\n                            (0, _chai.expect)(options[2].textContent).to.have.string('Tag Three');\n                            (0, _chai.expect)(options[3].textContent).to.have.string('#Internal Tag');\n\n                        case 13:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n\n        (0, _mocha.it)('matches options on lowercase tag names', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var _this3 = this;\n\n            var options;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            Ember.run(function () {\n                                _this3.set('post', _this3.get('store').findRecord('post', 1));\n                            });\n                            _context3.next = 3;\n                            return (0, _wait.default)();\n\n                        case 3:\n                            _context3.next = 5;\n                            return this.render(Ember.HTMLBars.template({\n                                \"id\": \"jxUcCIoN\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                        case 5:\n                            _context3.next = 7;\n                            return (0, _helpers.clickTrigger)();\n\n                        case 7:\n                            _context3.next = 9;\n                            return (0, _helpers.typeInSearch)('two');\n\n                        case 9:\n                            options = (0, _emberNativeDomHelpers.findAll)('.ember-power-select-option');\n\n                            (0, _chai.expect)(options.length).to.equal(2);\n                            (0, _chai.expect)(options[0].textContent).to.have.string('Add \"two\"...');\n                            (0, _chai.expect)(options[1].textContent).to.have.string('Tag Two');\n\n                        case 13:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this);\n        })));\n\n        (0, _mocha.it)('hides create option on exact matches', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n            var _this4 = this;\n\n            var options;\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                    switch (_context4.prev = _context4.next) {\n                        case 0:\n                            Ember.run(function () {\n                                _this4.set('post', _this4.get('store').findRecord('post', 1));\n                            });\n                            _context4.next = 3;\n                            return (0, _wait.default)();\n\n                        case 3:\n                            _context4.next = 5;\n                            return this.render(Ember.HTMLBars.template({\n                                \"id\": \"jxUcCIoN\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n\n                        case 5:\n                            _context4.next = 7;\n                            return (0, _helpers.clickTrigger)();\n\n                        case 7:\n                            _context4.next = 9;\n                            return (0, _helpers.typeInSearch)('Tag Two');\n\n                        case 9:\n                            options = (0, _emberNativeDomHelpers.findAll)('.ember-power-select-option');\n\n                            (0, _chai.expect)(options.length).to.equal(1);\n                            (0, _chai.expect)(options[0].textContent).to.have.string('Tag Two');\n\n                        case 12:\n                        case 'end':\n                            return _context4.stop();\n                    }\n                }\n            }, _callee4, this);\n        })));\n\n        (0, _mocha.describe)('primary tags', function () {\n            (0, _mocha.it)('adds primary tag class to first tag', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var _this5 = this;\n\n                var selected;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                Ember.run(function () {\n                                    assignPostWithTags(_this5, 'one', 'three');\n                                });\n                                _context5.next = 3;\n                                return (0, _wait.default)();\n\n                            case 3:\n                                _context5.next = 5;\n                                return this.render(Ember.HTMLBars.template({\n                                    \"id\": \"jxUcCIoN\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                            case 5:\n                                selected = (0, _emberNativeDomHelpers.findAll)('.tag-token');\n\n                                (0, _chai.expect)(selected.length).to.equal(2);\n                                (0, _chai.expect)(selected[0].classList.contains('tag-token--primary')).to.be.true;\n                                (0, _chai.expect)(selected[1].classList.contains('tag-token--primary')).to.be.false;\n\n                            case 9:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('doesn\\'t add primary tag class if first tag is internal', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                var _this6 = this;\n\n                var selected;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                Ember.run(function () {\n                                    assignPostWithTags(_this6, 'internal', 'two');\n                                });\n                                _context6.next = 3;\n                                return (0, _wait.default)();\n\n                            case 3:\n                                _context6.next = 5;\n                                return this.render(Ember.HTMLBars.template({\n                                    \"id\": \"jxUcCIoN\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                            case 5:\n                                selected = (0, _emberNativeDomHelpers.findAll)('.tag-token');\n\n                                (0, _chai.expect)(selected.length).to.equal(2);\n                                (0, _chai.expect)(selected[0].classList.contains('tag-token--primary')).to.be.false;\n                                (0, _chai.expect)(selected[1].classList.contains('tag-token--primary')).to.be.false;\n\n                            case 9:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n        });\n\n        (0, _mocha.describe)('updateTags', function () {\n            (0, _mocha.it)('modifies post.tags', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var _this7 = this;\n\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                Ember.run(function () {\n                                    assignPostWithTags(_this7, 'internal', 'two');\n                                });\n                                _context7.next = 3;\n                                return (0, _wait.default)();\n\n                            case 3:\n                                _context7.next = 5;\n                                return this.render(Ember.HTMLBars.template({\n                                    \"id\": \"jxUcCIoN\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                            case 5:\n                                _context7.next = 7;\n                                return (0, _helpers.selectChoose)('.ember-power-select-trigger', 'Tag One');\n\n                            case 7:\n\n                                (0, _chai.expect)(this.get('post.tags').mapBy('name').join(',')).to.equal('#Internal Tag,Tag Two,Tag One');\n\n                            case 8:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            (0, _mocha.it)('destroys new tag records when not selected', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var _this8 = this;\n\n                var tags, removeBtns;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                Ember.run(function () {\n                                    assignPostWithTags(_this8, 'internal', 'two');\n                                });\n                                _context8.next = 3;\n                                return (0, _wait.default)();\n\n                            case 3:\n                                _context8.next = 5;\n                                return this.render(Ember.HTMLBars.template({\n                                    \"id\": \"jxUcCIoN\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                            case 5:\n                                _context8.next = 7;\n                                return (0, _helpers.clickTrigger)();\n\n                            case 7:\n                                _context8.next = 9;\n                                return (0, _helpers.typeInSearch)('New');\n\n                            case 9:\n                                _context8.next = 11;\n                                return (0, _helpers.selectChoose)('.ember-power-select-trigger', 'Add \"New\"...');\n\n                            case 11:\n                                _context8.next = 13;\n                                return this.get('store').peekAll('tag');\n\n                            case 13:\n                                tags = _context8.sent;\n\n                                (0, _chai.expect)(tags.get('length')).to.equal(5);\n\n                                removeBtns = (0, _emberNativeDomHelpers.findAll)('.ember-power-select-multiple-remove-btn');\n                                _context8.next = 18;\n                                return (0, _emberNativeDomHelpers.click)(removeBtns[removeBtns.length - 1]);\n\n                            case 18:\n                                _context8.next = 20;\n                                return this.get('store').peekAll('tag');\n\n                            case 20:\n                                tags = _context8.sent;\n\n                                (0, _chai.expect)(tags.get('length')).to.equal(4);\n\n                            case 22:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            })));\n        });\n\n        (0, _mocha.describe)('createTag', function () {\n            (0, _mocha.it)('creates new records', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var _this9 = this;\n\n                var tags;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                Ember.run(function () {\n                                    assignPostWithTags(_this9, 'internal', 'two');\n                                });\n                                _context9.next = 3;\n                                return (0, _wait.default)();\n\n                            case 3:\n                                _context9.next = 5;\n                                return this.render(Ember.HTMLBars.template({\n                                    \"id\": \"jxUcCIoN\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-tags-input\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                            case 5:\n                                _context9.next = 7;\n                                return (0, _helpers.clickTrigger)();\n\n                            case 7:\n                                _context9.next = 9;\n                                return (0, _helpers.typeInSearch)('New One');\n\n                            case 9:\n                                _context9.next = 11;\n                                return (0, _helpers.selectChoose)('.ember-power-select-trigger', 'Add \"New One\"...');\n\n                            case 11:\n                                _context9.next = 13;\n                                return (0, _helpers.typeInSearch)('New Two');\n\n                            case 13:\n                                _context9.next = 15;\n                                return (0, _helpers.selectChoose)('.ember-power-select-trigger', 'Add \"New Two\"...');\n\n                            case 15:\n                                _context9.next = 17;\n                                return this.get('store').peekAll('tag');\n\n                            case 17:\n                                tags = _context9.sent;\n\n                                (0, _chai.expect)(tags.get('length')).to.equal(6);\n\n                                (0, _chai.expect)(tags.findBy('name', 'New One').get('isNew')).to.be.true;\n                                (0, _chai.expect)(tags.findBy('name', 'New Two').get('isNew')).to.be.true;\n\n                            case 21:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-psm-template-select-test', ['ghost-admin/mirage/config/themes', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-native-dom-helpers', 'ember-mocha', 'ghost-admin/initializers/ember-cli-mirage'], function (_themes, _wait, _mocha, _chai, _emberNativeDomHelpers, _emberMocha, _emberCliMirage) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Integration: Component: gh-psm-template-select', function () {\n        (0, _emberMocha.setupComponentTest)('gh-psm-template-select', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = (0, _emberCliMirage.startMirage)();\n\n            server.create('theme', {\n                active: true,\n                name: 'example-theme',\n                package: {\n                    name: 'Example Theme',\n                    version: '0.1'\n                },\n                templates: [{\n                    filename: 'custom-news-bulletin.hbs',\n                    name: 'News Bulletin',\n                    for: ['post', 'page'],\n                    slug: null\n                }, {\n                    filename: 'custom-big-images.hbs',\n                    name: 'Big Images',\n                    for: ['post', 'page'],\n                    slug: null\n                }, {\n                    filename: 'post-one.hbs',\n                    name: 'One',\n                    for: ['post'],\n                    slug: 'one'\n                }, {\n                    filename: 'page-about.hbs',\n                    name: 'About',\n                    for: ['page'],\n                    slug: 'about'\n                }]\n            });\n\n            (0, _themes.default)(server);\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('disables template selector if slug matches post template', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            this.set('post', {\n                                slug: 'one',\n                                page: false\n                            });\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"Ve48oex8\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-template-select\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n                            _context.next = 4;\n                            return (0, _wait.default)();\n\n                        case 4:\n\n                            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('select').disabled, 'select is disabled').to.be.true;\n                            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('p').textContent).to.have.string('post-one.hbs');\n\n                        case 6:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this);\n        })));\n\n        (0, _mocha.it)('disables template selector if slug matches page template', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            this.set('post', {\n                                slug: 'about',\n                                page: true\n                            });\n\n                            this.render(Ember.HTMLBars.template({\n                                \"id\": \"Ve48oex8\",\n                                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-psm-template-select\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                                \"meta\": {}\n                            }));\n                            _context2.next = 4;\n                            return (0, _wait.default)();\n\n                        case 4:\n\n                            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('select').disabled, 'select is disabled').to.be.true;\n                            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('p').textContent).to.have.string('page-about.hbs');\n\n                        case 6:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        })));\n    });\n});","define('ghost-admin/tests/integration/components/gh-publishmenu-draft-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-publishmenu-draft', function () {\n        (0, _emberMocha.setupComponentTest)('gh-publishmenu-draft', {\n            integration: true\n        });\n\n        _mocha.it.skip('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-publishmenu-draft}}\n            //     template content\n            //   {{/gh-publishmenu-draft}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"IPKDlbtF\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-publishmenu-draft\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-publishmenu-published-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-publishmenu-published', function () {\n        (0, _emberMocha.setupComponentTest)('gh-publishmenu-published', {\n            integration: true\n        });\n\n        _mocha.it.skip('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-publishmenu-published}}\n            //     template content\n            //   {{/gh-publishmenu-published}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"IIrad1+T\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-publishmenu-published\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-publishmenu-scheduled-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-publishmenu-scheduled', function () {\n        (0, _emberMocha.setupComponentTest)('gh-publishmenu-scheduled', {\n            integration: true\n        });\n\n        _mocha.it.skip('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-publishmenu-scheduled}}\n            //     template content\n            //   {{/gh-publishmenu-scheduled}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"88b8nszU\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-publishmenu-scheduled\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-publishmenu-test', ['mocha', 'chai', 'ember-mocha', 'ghost-admin/initializers/ember-cli-mirage'], function (_mocha, _chai, _emberMocha, _emberCliMirage) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-publishmenu', function () {\n        (0, _emberMocha.setupComponentTest)('gh-publishmenu', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = (0, _emberCliMirage.startMirage)();\n            server.loadFixtures();\n\n            server.create('user');\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.post = server.create('post');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"Wqd72enl\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-publishmenu\\\",null,[[\\\"post\\\"],[[20,[\\\"post\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-search-input-test', ['pretender', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-search-input', function () {\n        (0, _emberMocha.setupComponentTest)('gh-search-input', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // renders the component on the page\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"nhujN7SY\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-search-input\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('.ember-power-select-search input')).to.have.length(1);\n        });\n\n        (0, _mocha.it)('opens the dropdown on text entry', function (done) {\n            var _this = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"nhujN7SY\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-search-input\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            // enter text to trigger search\n            Ember.run(function () {\n                _this.$('input[type=\"search\"]').val('test').trigger('input');\n            });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this.$('.ember-basic-dropdown-content').length).to.equal(1);\n                done();\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-simplemde-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-simplemde', function () {\n        (0, _emberMocha.setupComponentTest)('gh-simplemde', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-simplemde}}\n            //     template content\n            //   {{/gh-simplemde}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wehZXQHE\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-simplemde\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-subscribers-table-test', ['ember-light-table', 'mocha', 'chai', 'ember-mocha'], function (_emberLightTable, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-subscribers-table', function () {\n        (0, _emberMocha.setupComponentTest)('gh-subscribers-table', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('table', new _emberLightTable.default([], []));\n            this.set('sortByColumn', function () {});\n            this.set('delete', function () {});\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"O6xHFZs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-subscribers-table\\\",null,[[\\\"table\\\",\\\"sortByColumn\\\",\\\"delete\\\"],[[20,[\\\"table\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"sortByColumn\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"delete\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-tag-settings-form-test', ['ember-data', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_emberData, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var Errors = _emberData.default.Errors;\n\n\n    var configStub = Ember.Service.extend({\n        blogUrl: 'http://localhost:2368'\n    });\n\n    var mediaQueriesStub = Ember.Service.extend({\n        maxWidth600: false\n    });\n\n    (0, _mocha.describe)('Integration: Component: gh-tag-settings-form', function () {\n        (0, _emberMocha.setupComponentTest)('gh-tag-settings-form', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            /* eslint-disable camelcase */\n            var tag = Ember.Object.create({\n                id: 1,\n                name: 'Test',\n                slug: 'test',\n                description: 'Description.',\n                metaTitle: 'Meta Title',\n                metaDescription: 'Meta description',\n                errors: Errors.create(),\n                hasValidated: []\n            });\n            /* eslint-enable camelcase */\n\n            this.set('tag', tag);\n            this.set('actions.setProperty', function (property, value) {\n                // this should be overridden if a call is expected\n                // eslint-disable-next-line no-console\n                console.error('setProperty called \\'' + property + ': ' + value + '\\'');\n            });\n\n            this.register('service:config', configStub);\n            this.inject.service('config', { as: 'config' });\n\n            this.register('service:media-queries', mediaQueriesStub);\n            this.inject.service('media-queries', { as: 'mediaQueries' });\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n\n        (0, _mocha.it)('has the correct title', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.tag-settings-pane h4').text(), 'existing tag title').to.equal('Tag Settings');\n\n            this.set('tag.isNew', true);\n            (0, _chai.expect)(this.$('.tag-settings-pane h4').text(), 'new tag title').to.equal('New Tag');\n        });\n\n        (0, _mocha.it)('renders main settings', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('.gh-image-uploader').length, 'displays image uploader').to.equal(1);\n            (0, _chai.expect)(this.$('input[name=\"name\"]').val(), 'name field value').to.equal('Test');\n            (0, _chai.expect)(this.$('input[name=\"slug\"]').val(), 'slug field value').to.equal('test');\n            (0, _chai.expect)(this.$('textarea[name=\"description\"]').val(), 'description field value').to.equal('Description.');\n            (0, _chai.expect)(this.$('input[name=\"metaTitle\"]').val(), 'metaTitle field value').to.equal('Meta Title');\n            (0, _chai.expect)(this.$('textarea[name=\"metaDescription\"]').val(), 'metaDescription field value').to.equal('Meta description');\n        });\n\n        (0, _mocha.it)('can switch between main/meta settings', function () {\n            var _this = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('.tag-settings-pane').hasClass('settings-menu-pane-in'), 'main settings are displayed by default').to.be.true;\n            (0, _chai.expect)(this.$('.tag-meta-settings-pane').hasClass('settings-menu-pane-out-right'), 'meta settings are hidden by default').to.be.true;\n\n            Ember.run(function () {\n                _this.$('.meta-data-button').click();\n            });\n\n            (0, _chai.expect)(this.$('.tag-settings-pane').hasClass('settings-menu-pane-out-left'), 'main settings are hidden after clicking Meta Data button').to.be.true;\n            (0, _chai.expect)(this.$('.tag-meta-settings-pane').hasClass('settings-menu-pane-in'), 'meta settings are displayed after clicking Meta Data button').to.be.true;\n\n            Ember.run(function () {\n                _this.$('.back').click();\n            });\n\n            (0, _chai.expect)(this.$('.tag-settings-pane').hasClass('settings-menu-pane-in'), 'main settings are displayed after clicking \"back\"').to.be.true;\n            (0, _chai.expect)(this.$('.tag-meta-settings-pane').hasClass('settings-menu-pane-out-right'), 'meta settings are hidden after clicking \"back\"').to.be.true;\n        });\n\n        (0, _mocha.it)('has one-way binding for properties', function () {\n            var _this2 = this;\n\n            this.set('actions.setProperty', function () {\n                // noop\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this2.$('input[name=\"name\"]').val('New name');\n                _this2.$('input[name=\"slug\"]').val('new-slug');\n                _this2.$('textarea[name=\"description\"]').val('New description');\n                _this2.$('input[name=\"metaTitle\"]').val('New metaTitle');\n                _this2.$('textarea[name=\"metaDescription\"]').val('New metaDescription');\n            });\n\n            (0, _chai.expect)(this.get('tag.name'), 'tag name').to.equal('Test');\n            (0, _chai.expect)(this.get('tag.slug'), 'tag slug').to.equal('test');\n            (0, _chai.expect)(this.get('tag.description'), 'tag description').to.equal('Description.');\n            (0, _chai.expect)(this.get('tag.metaTitle'), 'tag metaTitle').to.equal('Meta Title');\n            (0, _chai.expect)(this.get('tag.metaDescription'), 'tag metaDescription').to.equal('Meta description');\n        });\n\n        (0, _mocha.it)('triggers setProperty action on blur of all fields', function () {\n            var _this3 = this;\n\n            var expectedProperty = '';\n            var expectedValue = '';\n\n            this.set('actions.setProperty', function (property, value) {\n                (0, _chai.expect)(property, 'property').to.equal(expectedProperty);\n                (0, _chai.expect)(value, 'value').to.equal(expectedValue);\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            expectedProperty = 'name';\n            expectedValue = 'new-slug';\n            Ember.run(function () {\n                _this3.$('input[name=\"name\"]').val('New name');\n            });\n\n            expectedProperty = 'url';\n            expectedValue = 'new-slug';\n            Ember.run(function () {\n                _this3.$('input[name=\"slug\"]').val('new-slug');\n            });\n\n            expectedProperty = 'description';\n            expectedValue = 'New description';\n            Ember.run(function () {\n                _this3.$('textarea[name=\"description\"]').val('New description');\n            });\n\n            expectedProperty = 'metaTitle';\n            expectedValue = 'New metaTitle';\n            Ember.run(function () {\n                _this3.$('input[name=\"metaTitle\"]').val('New metaTitle');\n            });\n\n            expectedProperty = 'metaDescription';\n            expectedValue = 'New metaDescription';\n            Ember.run(function () {\n                _this3.$('textarea[name=\"metaDescription\"]').val('New metaDescription');\n            });\n        });\n\n        (0, _mocha.it)('displays error messages for validated fields', function () {\n            var _this4 = this;\n\n            var errors = this.get('tag.errors');\n            var hasValidated = this.get('tag.hasValidated');\n\n            errors.add('name', 'must be present');\n            hasValidated.push('name');\n\n            errors.add('slug', 'must be present');\n            hasValidated.push('slug');\n\n            errors.add('description', 'is too long');\n            hasValidated.push('description');\n\n            errors.add('metaTitle', 'is too long');\n            hasValidated.push('metaTitle');\n\n            errors.add('metaDescription', 'is too long');\n            hasValidated.push('metaDescription');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                var nameFormGroup = _this4.$('input[name=\"name\"]').closest('.form-group');\n                (0, _chai.expect)(nameFormGroup.hasClass('error'), 'name form group has error state').to.be.true;\n                (0, _chai.expect)(nameFormGroup.find('.response').length, 'name form group has error message').to.equal(1);\n\n                var slugFormGroup = _this4.$('input[name=\"slug\"]').closest('.form-group');\n                (0, _chai.expect)(slugFormGroup.hasClass('error'), 'slug form group has error state').to.be.true;\n                (0, _chai.expect)(slugFormGroup.find('.response').length, 'slug form group has error message').to.equal(1);\n\n                var descriptionFormGroup = _this4.$('textarea[name=\"description\"]').closest('.form-group');\n                (0, _chai.expect)(descriptionFormGroup.hasClass('error'), 'description form group has error state').to.be.true;\n\n                var metaTitleFormGroup = _this4.$('input[name=\"metaTitle\"]').closest('.form-group');\n                (0, _chai.expect)(metaTitleFormGroup.hasClass('error'), 'metaTitle form group has error state').to.be.true;\n                (0, _chai.expect)(metaTitleFormGroup.find('.response').length, 'metaTitle form group has error message').to.equal(1);\n\n                var metaDescriptionFormGroup = _this4.$('textarea[name=\"metaDescription\"]').closest('.form-group');\n                (0, _chai.expect)(metaDescriptionFormGroup.hasClass('error'), 'metaDescription form group has error state').to.be.true;\n                (0, _chai.expect)(metaDescriptionFormGroup.find('.response').length, 'metaDescription form group has error message').to.equal(1);\n            });\n        });\n\n        (0, _mocha.it)('displays char count for text fields', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            var descriptionFormGroup = this.$('textarea[name=\"description\"]').closest('.form-group');\n            (0, _chai.expect)(descriptionFormGroup.find('.word-count').text(), 'description char count').to.equal('12');\n\n            var metaDescriptionFormGroup = this.$('textarea[name=\"metaDescription\"]').closest('.form-group');\n            (0, _chai.expect)(metaDescriptionFormGroup.find('.word-count').text(), 'description char count').to.equal('16');\n        });\n\n        (0, _mocha.it)('renders SEO title preview', function () {\n            var _this5 = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.seo-preview-title').text(), 'displays meta title if present').to.equal('Meta Title');\n\n            Ember.run(function () {\n                _this5.set('tag.metaTitle', '');\n            });\n            (0, _chai.expect)(this.$('.seo-preview-title').text(), 'falls back to tag name without metaTitle').to.equal('Test');\n\n            Ember.run(function () {\n                _this5.set('tag.name', new Array(151).join('x'));\n            });\n            var expectedLength = 70 + '…'.length;\n            (0, _chai.expect)(this.$('.seo-preview-title').text().length, 'cuts title to max 70 chars').to.equal(expectedLength);\n        });\n\n        (0, _mocha.it)('renders SEO URL preview', function () {\n            var _this6 = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.seo-preview-link').text(), 'adds url and tag prefix').to.equal('http://localhost:2368/tag/test/');\n\n            Ember.run(function () {\n                _this6.set('tag.slug', new Array(151).join('x'));\n            });\n            var expectedLength = 70 + '…'.length;\n            (0, _chai.expect)(this.$('.seo-preview-link').text().length, 'cuts slug to max 70 chars').to.equal(expectedLength);\n        });\n\n        (0, _mocha.it)('renders SEO description preview', function () {\n            var _this7 = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.seo-preview-description').text(), 'displays meta description if present').to.equal('Meta description');\n\n            Ember.run(function () {\n                _this7.set('tag.metaDescription', '');\n            });\n            (0, _chai.expect)(this.$('.seo-preview-description').text(), 'falls back to tag description without metaDescription').to.equal('Description.');\n\n            Ember.run(function () {\n                _this7.set('tag.description', new Array(500).join('x'));\n            });\n            var expectedLength = 156 + '…'.length;\n            (0, _chai.expect)(this.$('.seo-preview-description').text().length, 'cuts description to max 156 chars').to.equal(expectedLength);\n        });\n\n        (0, _mocha.it)('resets if a new tag is received', function () {\n            var _this8 = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            Ember.run(function () {\n                _this8.$('.meta-data-button').click();\n            });\n            (0, _chai.expect)(this.$('.tag-meta-settings-pane').hasClass('settings-menu-pane-in'), 'meta data pane is shown').to.be.true;\n\n            Ember.run(function () {\n                _this8.set('tag', Ember.Object.create({ id: '2' }));\n            });\n            (0, _chai.expect)(this.$('.tag-settings-pane').hasClass('settings-menu-pane-in'), 'resets to main settings').to.be.true;\n        });\n\n        (0, _mocha.it)('triggers delete tag modal on delete click', function (done) {\n            var _this9 = this;\n\n            // TODO: will time out if this isn't hit, there's probably a better\n            // way of testing this\n            this.set('actions.openModal', function () {\n                done();\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"gUp5pk+v\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\",\\\"showDeleteTagModal\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"openModal\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this9.$('.settings-menu-delete-button').click();\n            });\n        });\n\n        (0, _mocha.it)('shows settings.tags arrow link on mobile', function () {\n            this.set('mediaQueries.maxWidth600', true);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"HeT1eBs7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[25,\\\"gh-tag-settings-form\\\",null,[[\\\"tag\\\",\\\"setProperty\\\"],[[20,[\\\"tag\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"setProperty\\\"],null]]]],false],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('.tag-settings-pane .settings-menu-header .settings-menu-header-action').length, 'settings.tags link is shown').to.equal(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-tags-management-container-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-tags-management-container', function () {\n        (0, _emberMocha.setupComponentTest)('gh-tags-management-container', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('tags', []);\n            this.set('selectedTag', null);\n            this.on('enteredMobile', function () {\n                // noop\n            });\n            this.on('leftMobile', function () {\n                // noop\n            });\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"zPTmlfwv\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[4,\\\"gh-tags-management-container\\\",null,[[\\\"tags\\\",\\\"selectedTag\\\",\\\"enteredMobile\\\",\\\"leftMobile\\\"],[[20,[\\\"tags\\\"]],[20,[\\\"selectedTag\\\"]],\\\"enteredMobile\\\",[25,\\\"action\\\",[[19,0,[]],\\\"leftMobile\\\"],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-task-button-test', ['ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha', 'ember-concurrency'], function (_wait, _mocha, _chai, _emberMocha, _emberConcurrency) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    (0, _mocha.describe)('Integration: Component: gh-task-button', function () {\n        (0, _emberMocha.setupComponentTest)('gh-task-button', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // sets button text using positional param\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"jst+4FNU\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",[\\\"Test\\\"],null],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('button')).to.exist;\n            (0, _chai.expect)(this.$('button')).to.contain('Test');\n            (0, _chai.expect)(this.$('button')).to.have.prop('disabled', false);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"2Q4Jz0t2\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"class\\\"],[\\\"testing\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('button')).to.have.class('testing');\n            // default button text is \"Save\"\n            (0, _chai.expect)(this.$('button')).to.contain('Save');\n\n            // passes disabled attr\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"df/xAwwI\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"disabled\\\",\\\"buttonText\\\"],[true,\\\"Test\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('button')).to.have.prop('disabled', true);\n            // allows button text to be set via hash param\n            (0, _chai.expect)(this.$('button')).to.contain('Test');\n\n            // passes type attr\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"LpSzdjOK\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"type\\\"],[\\\"submit\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('button')).to.have.attr('type', 'submit');\n\n            // passes tabindex attr\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"qdSeQMrx\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"tabindex\\\"],[\\\"-1\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('button')).to.have.attr('tabindex', '-1');\n        });\n\n        (0, _mocha.it)('shows spinner whilst running', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                _context.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.have.descendants('svg');\n            }, 20);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('shows running text when passed whilst running', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee2() {\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"SlNW2sV/\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\",\\\"runningText\\\"],[[20,[\\\"myTask\\\"]],\\\"Running\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.have.descendants('svg');\n                (0, _chai.expect)(this.$('button')).to.contain('Running');\n            }, 20);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('appears disabled whilst running', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('button'), 'initial class').to.not.have.class('appear-disabled');\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button'), 'running class').to.have.class('appear-disabled');\n            }, 20);\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button'), 'ended class').to.not.have.class('appear-disabled');\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('shows success on success', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee4() {\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                                return _context4.abrupt('return', true);\n\n                            case 3:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.have.class('gh-btn-green');\n                (0, _chai.expect)(this.$('button')).to.contain('Saved');\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('assigns specified success class on success', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee5() {\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                                return _context5.abrupt('return', true);\n\n                            case 3:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"aC6jrLAb\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\",\\\"successClass\\\"],[[20,[\\\"myTask\\\"]],\\\"im-a-success\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.not.have.class('gh-btn-green');\n                (0, _chai.expect)(this.$('button')).to.have.class('im-a-success');\n                (0, _chai.expect)(this.$('button')).to.contain('Saved');\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('shows failure when task errors', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee6() {\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.prev = 0;\n                                _context6.next = 3;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 3:\n                                throw new ReferenceError('test error');\n\n                            case 6:\n                                _context6.prev = 6;\n                                _context6.t0 = _context6['catch'](0);\n\n                            case 8:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this, [[0, 6]]);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.have.class('gh-btn-red');\n                (0, _chai.expect)(this.$('button')).to.contain('Retry');\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('shows failure on falsy response', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee7() {\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                _context7.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                                return _context7.abrupt('return', false);\n\n                            case 3:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.have.class('gh-btn-red');\n                (0, _chai.expect)(this.$('button')).to.contain('Retry');\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('assigns specified failure class on failure', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee8() {\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                _context8.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                                return _context8.abrupt('return', false);\n\n                            case 3:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"EkXIGvTl\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\",\\\"failureClass\\\"],[[20,[\\\"myTask\\\"]],\\\"im-a-failure\\\"]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                (0, _chai.expect)(this.$('button')).to.not.have.class('gh-btn-red');\n                (0, _chai.expect)(this.$('button')).to.have.class('im-a-failure');\n                (0, _chai.expect)(this.$('button')).to.contain('Retry');\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n\n        (0, _mocha.it)('performs task on click', function (done) {\n            var taskCount = 0;\n\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee9() {\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                _context9.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                                taskCount = taskCount + 1;\n\n                            case 3:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            this.$('button').click();\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(taskCount, 'taskCount').to.equal(1);\n                done();\n            });\n        });\n\n        _mocha.it.skip('keeps button size when showing spinner', function (done) {\n            this.set('myTask', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee10() {\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                _context10.next = 2;\n                                return (0, _emberConcurrency.timeout)(50);\n\n                            case 2:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this);\n            })));\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"T1HJjZAz\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-task-button\\\",null,[[\\\"task\\\"],[[20,[\\\"myTask\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            var width = this.$('button').width();\n            var height = this.$('button').height();\n            (0, _chai.expect)(this.$('button')).to.not.have.attr('style');\n\n            this.get('myTask').perform();\n\n            Ember.run.later(this, function () {\n                var _width$toString$split = width.toString().split('.'),\n                    _width$toString$split2 = _slicedToArray(_width$toString$split, 1),\n                    widthInt = _width$toString$split2[0];\n\n                var _height$toString$spli = height.toString().split('.'),\n                    _height$toString$spli2 = _slicedToArray(_height$toString$spli, 1),\n                    heightInt = _height$toString$spli2[0];\n\n                (0, _chai.expect)(this.$('button').attr('style')).to.have.string('width: ' + widthInt);\n                (0, _chai.expect)(this.$('button').attr('style')).to.have.string('height: ' + heightInt);\n            }, 20);\n\n            Ember.run.later(this, function () {\n                // chai-jquery test doesn't work because Firefox outputs blank string\n                // expect(this.$('button')).to.not.have.attr('style');\n                (0, _chai.expect)(this.$('button').attr('style')).to.be.blank;\n            }, 100);\n\n            (0, _wait.default)().then(done);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-theme-table-test', ['sinon', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-theme-table', function () {\n        (0, _emberMocha.setupComponentTest)('gh-theme-table', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.set('themes', [{ name: 'Daring', package: { name: 'Daring', version: '0.1.4' }, active: true }, { name: 'casper', package: { name: 'Casper', version: '1.3.1' } }, { name: 'oscar-ghost-1.1.0', package: { name: 'Lanyon', version: '1.1.0' } }, { name: 'foo' }]);\n            this.set('actionHandler', _sinon.default.spy());\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"272tXR+V\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-theme-table\\\",null,[[\\\"themes\\\",\\\"activateTheme\\\",\\\"downloadTheme\\\",\\\"deleteTheme\\\"],[[20,[\\\"themes\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$('[data-test-themes-list]').length, 'themes list is present').to.equal(1);\n            (0, _chai.expect)(this.$('[data-test-theme-id]').length, 'number of rows').to.equal(4);\n\n            var packageNames = this.$('[data-test-theme-title]').map(function (i, name) {\n                return Ember.$(name).text().trim();\n            }).toArray();\n\n            (0, _chai.expect)(packageNames, 'themes are ordered by label, casper has \"default\"').to.deep.equal(['Casper (default)', 'Daring', 'foo', 'Lanyon']);\n\n            (0, _chai.expect)(this.$('[data-test-theme-active=\"true\"]').find('[data-test-theme-title]').text().trim(), 'active theme is highlighted').to.equal('Daring');\n\n            (0, _chai.expect)(this.$('[data-test-theme-activate-button]').length === 3, 'non-active themes have an activate link').to.be.true;\n\n            (0, _chai.expect)(this.$('[data-test-theme-active=\"true\"]').find('[data-test-theme-activate-button]').length === 0, 'active theme doesn\\'t have an activate link').to.be.true;\n\n            (0, _chai.expect)(this.$('[data-test-theme-download-button]').length, 'all themes have a download link').to.equal(4);\n\n            (0, _chai.expect)(this.$('[data-test-theme-id=\"foo\"]').find('[data-test-theme-delete-button]').length === 1, 'non-active, non-casper theme has delete link').to.be.true;\n\n            (0, _chai.expect)(this.$('[data-test-theme-id=\"casper\"]').find('[data-test-theme-delete-button]').length === 0, 'casper doesn\\'t have delete link').to.be.true;\n\n            (0, _chai.expect)(this.$('[data-test-theme-active=\"true\"]').find('[data-test-theme-delete-button]').length === 0, 'active theme doesn\\'t have delete link').to.be.true;\n        });\n\n        (0, _mocha.it)('delete link triggers passed in action', function () {\n            var _this = this;\n\n            var deleteAction = _sinon.default.spy();\n            var actionHandler = _sinon.default.spy();\n\n            this.set('themes', [{ name: 'Foo', active: true }, { name: 'Bar' }]);\n            this.set('deleteAction', deleteAction);\n            this.set('actionHandler', actionHandler);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"IXFLXrcW\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-theme-table\\\",null,[[\\\"themes\\\",\\\"activateTheme\\\",\\\"downloadTheme\\\",\\\"deleteTheme\\\"],[[20,[\\\"themes\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"deleteAction\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this.$('[data-test-theme-id=\"Bar\"] [data-test-theme-delete-button]').click();\n            });\n\n            (0, _chai.expect)(deleteAction.calledOnce).to.be.true;\n            (0, _chai.expect)(deleteAction.firstCall.args[0].name).to.equal('Bar');\n        });\n\n        (0, _mocha.it)('download link triggers passed in action', function () {\n            var _this2 = this;\n\n            var downloadAction = _sinon.default.spy();\n            var actionHandler = _sinon.default.spy();\n\n            this.set('themes', [{ name: 'Foo', active: true }, { name: 'Bar' }]);\n            this.set('downloadAction', downloadAction);\n            this.set('actionHandler', actionHandler);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"wgQGC4rm\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-theme-table\\\",null,[[\\\"themes\\\",\\\"activateTheme\\\",\\\"downloadTheme\\\",\\\"deleteTheme\\\"],[[20,[\\\"themes\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"downloadAction\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this2.$('[data-test-theme-id=\"Foo\"] [data-test-theme-download-button]').click();\n            });\n\n            (0, _chai.expect)(downloadAction.calledOnce).to.be.true;\n            (0, _chai.expect)(downloadAction.firstCall.args[0].name).to.equal('Foo');\n        });\n\n        (0, _mocha.it)('activate link triggers passed in action', function () {\n            var _this3 = this;\n\n            var activateAction = _sinon.default.spy();\n            var actionHandler = _sinon.default.spy();\n\n            this.set('themes', [{ name: 'Foo', active: true }, { name: 'Bar' }]);\n            this.set('activateAction', activateAction);\n            this.set('actionHandler', actionHandler);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"pPvqClsD\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-theme-table\\\",null,[[\\\"themes\\\",\\\"activateTheme\\\",\\\"downloadTheme\\\",\\\"deleteTheme\\\"],[[20,[\\\"themes\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"activateAction\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this3.$('[data-test-theme-id=\"Bar\"] [data-test-theme-activate-button]').click();\n            });\n\n            (0, _chai.expect)(activateAction.calledOnce).to.be.true;\n            (0, _chai.expect)(activateAction.firstCall.args[0].name).to.equal('Bar');\n        });\n\n        (0, _mocha.it)('displays folder names if there are duplicate package names', function () {\n            this.set('themes', [{ name: 'daring', package: { name: 'Daring', version: '0.1.4' }, active: true }, { name: 'daring-0.1.5', package: { name: 'Daring', version: '0.1.4' } }, { name: 'casper', package: { name: 'Casper', version: '1.3.1' } }, { name: 'another', package: { name: 'Casper', version: '1.3.1' } }, { name: 'mine', package: { name: 'Casper', version: '1.3.1' } }, { name: 'foo' }]);\n            this.set('actionHandler', _sinon.default.spy());\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"272tXR+V\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-theme-table\\\",null,[[\\\"themes\\\",\\\"activateTheme\\\",\\\"downloadTheme\\\",\\\"deleteTheme\\\"],[[20,[\\\"themes\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"actionHandler\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            var packageNames = this.$('[data-test-theme-title]').map(function (i, name) {\n                return Ember.$(name).text().trim();\n            }).toArray();\n\n            (0, _chai.expect)(packageNames, 'themes are ordered by label, folder names shown for duplicates').to.deep.equal(['Casper (another)', 'Casper (default)', 'Casper (mine)', 'Daring (daring)', 'Daring (daring-0.1.5)', 'foo']);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-timezone-select-test', ['sinon', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-timezone-select', function () {\n        (0, _emberMocha.setupComponentTest)('gh-timezone-select', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            this.set('availableTimezones', [{ name: 'Pacific/Pago_Pago', label: '(GMT -11:00) Midway Island, Samoa' }, { name: 'Etc/UTC', label: '(GMT) UTC' }, { name: 'Pacific/Kwajalein', label: '(GMT +12:00) International Date Line West' }]);\n            this.set('activeTimezone', 'Etc/UTC');\n        });\n\n        (0, _mocha.it)('renders', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"zf5dWnMg\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-timezone-select\\\",null,[[\\\"availableTimezones\\\",\\\"activeTimezone\\\"],[[20,[\\\"availableTimezones\\\"]],[20,[\\\"activeTimezone\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)(this.$(), 'top-level elements').to.have.length(1);\n            (0, _chai.expect)(this.$('option'), 'number of options').to.have.length(3);\n            (0, _chai.expect)(this.$('select').val(), 'selected option value').to.equal('Etc/UTC');\n        });\n\n        (0, _mocha.it)('handles an unknown timezone', function () {\n            this.set('activeTimezone', 'Europe/London');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"zf5dWnMg\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-timezone-select\\\",null,[[\\\"availableTimezones\\\",\\\"activeTimezone\\\"],[[20,[\\\"availableTimezones\\\"]],[20,[\\\"activeTimezone\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            // we have an additional blank option at the top\n            (0, _chai.expect)(this.$('option'), 'number of options').to.have.length(4);\n            // blank option is selected\n            (0, _chai.expect)(this.$('select').val(), 'selected option value').to.equal('');\n            // we indicate the manual override\n            (0, _chai.expect)(this.$('p').text()).to.match(/Your timezone has been automatically set to Europe\\/London/);\n        });\n\n        (0, _mocha.it)('triggers update action on change', function (done) {\n            var _this = this;\n\n            var update = _sinon.default.spy();\n            this.set('update', update);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"TCmnSKuM\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-timezone-select\\\",null,[[\\\"availableTimezones\\\",\\\"activeTimezone\\\",\\\"update\\\"],[[20,[\\\"availableTimezones\\\"]],[20,[\\\"activeTimezone\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"update\\\"]]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this.$('select').val('Pacific/Pago_Pago').change();\n            });\n\n            (0, _wait.default)().then(function () {\n                (0, _chai.expect)(update.calledOnce, 'update was called once').to.be.true;\n                (0, _chai.expect)(update.firstCall.args[0].name, 'update was passed new timezone').to.equal('Pacific/Pago_Pago');\n                done();\n            });\n        });\n\n        // TODO: mock clock service, fake the time, test we have the correct\n        // local time and it changes alongside selection changes\n        (0, _mocha.it)('renders local time');\n    });\n});","define('ghost-admin/tests/integration/components/gh-trim-focus-input-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-trim-focus-input', function () {\n        (0, _emberMocha.setupComponentTest)('gh-trim-focus-input', {\n            integration: true\n        });\n\n        (0, _mocha.it)('trims value on focusOut', function () {\n            var _this = this;\n\n            this.set('text', 'some random stuff    ');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"UYA1PXe9\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-trim-focus-input\\\",[[20,[\\\"text\\\"]]],[[\\\"update\\\"],[[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"text\\\"]]],null]],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this.$('.gh-input').trigger('focusout');\n            });\n\n            (0, _chai.expect)(this.get('text')).to.equal('some random stuff');\n        });\n\n        (0, _mocha.it)('does not have the autofocus attribute if not set to focus', function () {\n            this.set('text', 'some text');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"eyjd4wYF\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-trim-focus-input\\\",[[20,[\\\"text\\\"]]],[[\\\"shouldFocus\\\"],[false]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.gh-input').attr('autofocus')).to.not.be.ok;\n        });\n\n        (0, _mocha.it)('has the autofocus attribute if set to focus', function () {\n            this.set('text', 'some text');\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"exVCIiud\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-trim-focus-input\\\",[[20,[\\\"text\\\"]]],[[\\\"shouldFocus\\\"],[true]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.gh-input').attr('autofocus')).to.be.ok;\n        });\n\n        (0, _mocha.it)('handles undefined values', function () {\n            this.set('text', undefined);\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"exVCIiud\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-trim-focus-input\\\",[[20,[\\\"text\\\"]]],[[\\\"shouldFocus\\\"],[true]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.gh-input').attr('autofocus')).to.be.ok;\n        });\n\n        (0, _mocha.it)('handles non-string values', function () {\n            this.set('text', 10);\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"exVCIiud\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-trim-focus-input\\\",[[20,[\\\"text\\\"]]],[[\\\"shouldFocus\\\"],[true]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$('.gh-input').val()).to.equal('10');\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-unsplash-photo-test', ['mocha', 'chai', 'ember-native-dom-helpers', 'ember-mocha'], function (_mocha, _chai, _emberNativeDomHelpers, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-unsplash-photo', function () {\n        (0, _emberMocha.setupComponentTest)('gh-unsplash-photo', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            // NOTE: images.unsplash.com replaced with example.com to ensure we aren't\n            // loading lots of images during tests and we get an immediate 404\n            this.set('photo', {\n                id: 'OYFHT4X5isg',\n                created_at: '2017-08-09T00:20:42-04:00',\n                updated_at: '2017-08-11T08:27:42-04:00',\n                width: 5184,\n                height: 3456,\n                color: '#A8A99B',\n                likes: 58,\n                liked_by_user: false,\n                description: null,\n                user: {\n                    id: 'cEpP9pR9Q7E',\n                    updated_at: '2017-08-11T08:27:42-04:00',\n                    username: 'danotis',\n                    name: 'Dan Otis',\n                    first_name: 'Dan',\n                    last_name: 'Otis',\n                    twitter_username: 'danotis',\n                    portfolio_url: 'http://dan.exposure.co',\n                    bio: 'Senior Visual Designer at Huge ',\n                    location: 'San Jose, CA',\n                    total_likes: 0,\n                    total_photos: 8,\n                    total_collections: 0,\n                    profile_image: {\n                        small: 'https://example.com/profile-fb-1502251227-8fe7a0522137.jpg?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=32&w=32&s=37f67120fc464d7d920ff23c84963b38',\n                        medium: 'https://example.com/profile-fb-1502251227-8fe7a0522137.jpg?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=64&w=64&s=0a4f8a583caec826ac6b1ca80161fa43',\n                        large: 'https://example.com/profile-fb-1502251227-8fe7a0522137.jpg?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=128&w=128&s=b3aa4206e5d87f3eaa7bbe9180ebcd2b'\n                    },\n                    links: {\n                        self: 'https://api.unsplash.com/users/danotis',\n                        html: 'https://unsplash.com/@danotis',\n                        photos: 'https://api.unsplash.com/users/danotis/photos',\n                        likes: 'https://api.unsplash.com/users/danotis/likes',\n                        portfolio: 'https://api.unsplash.com/users/danotis/portfolio',\n                        following: 'https://api.unsplash.com/users/danotis/following',\n                        followers: 'https://api.unsplash.com/users/danotis/followers'\n                    }\n                },\n                current_user_collections: [],\n                urls: {\n                    raw: 'https://example.com/photo-1502252430442-aac78f397426',\n                    full: 'https://example.com/photo-1502252430442-aac78f397426?ixlib=rb-0.3.5&q=85&fm=jpg&crop=entropy&cs=srgb&s=20f86c2f7bbb019122498a45d8260ee9',\n                    regular: 'https://example.com/photo-1502252430442-aac78f397426?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&s=181760db8b7a61fa60a35277d7eb434e',\n                    small: 'https://example.com/photo-1502252430442-aac78f397426?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max&s=1e2265597b59e874a1a002b4c3fd961c',\n                    thumb: 'https://example.com/photo-1502252430442-aac78f397426?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=57c86b0692bea92a282b9ab0dbfdacf4'\n                },\n                categories: [],\n                links: {\n                    self: 'https://api.unsplash.com/photos/OYFHT4X5isg',\n                    html: 'https://unsplash.com/photos/OYFHT4X5isg',\n                    download: 'https://unsplash.com/photos/OYFHT4X5isg/download',\n                    download_location: 'https://api.unsplash.com/photos/OYFHT4X5isg/download'\n                },\n                ratio: 0.6666666666666666\n            });\n        });\n\n        (0, _mocha.it)('sets background-color style', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"i/isH8FM\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-unsplash-photo\\\",null,[[\\\"photo\\\"],[[20,[\\\"photo\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-unsplash-photo-container]').attributes.style.value).to.have.string('background-color: #A8A99B');\n        });\n\n        (0, _mocha.it)('sets padding-bottom style', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"i/isH8FM\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-unsplash-photo\\\",null,[[\\\"photo\\\"],[[20,[\\\"photo\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            // don't check full padding-bottom value as it will likely vary across\n            // browsers\n            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-unsplash-photo-container]').attributes.style.value).to.have.string('padding-bottom: 66.66');\n        });\n\n        (0, _mocha.it)('uses correct image size url', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"i/isH8FM\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-unsplash-photo\\\",null,[[\\\"photo\\\"],[[20,[\\\"photo\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-unsplash-photo-image]').attributes.src.value).to.have.string('&w=1200');\n        });\n\n        (0, _mocha.it)('calculates image width/height', function () {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"i/isH8FM\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"gh-unsplash-photo\\\",null,[[\\\"photo\\\"],[[20,[\\\"photo\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-unsplash-photo-image]').attributes.width.value).to.equal('1200');\n\n            (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-unsplash-photo-image]').attributes.height.value).to.equal('800');\n        });\n\n        (0, _mocha.it)('triggers insert action');\n        (0, _mocha.it)('triggers zoom action');\n\n        (0, _mocha.describe)('zoomed', function () {\n            (0, _mocha.it)('omits padding-bottom style');\n            (0, _mocha.it)('triggers insert action');\n            (0, _mocha.it)('triggers zoom action');\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-unsplash-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: gh-unsplash', function () {\n        (0, _emberMocha.setupComponentTest)('gh-unsplash', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#gh-unsplash}}\n            //     template content\n            //   {{/gh-unsplash}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"l0OqXuaW\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"gh-unsplash\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n\n        (0, _mocha.it)('loads new photos by default');\n        (0, _mocha.it)('has responsive columns');\n        (0, _mocha.it)('can zoom');\n        (0, _mocha.it)('can close zoom by clicking on image');\n        (0, _mocha.it)('can close zoom by clicking outside image');\n        (0, _mocha.it)('triggers insert action');\n        (0, _mocha.it)('handles errors');\n\n        (0, _mocha.describe)('searching', function () {\n            (0, _mocha.it)('works');\n            (0, _mocha.it)('handles no results');\n            (0, _mocha.it)('handles error');\n        });\n\n        (0, _mocha.describe)('closing', function () {\n            (0, _mocha.it)('triggers close action');\n            (0, _mocha.it)('can be triggerd by escape key');\n            (0, _mocha.it)('cannot be triggered by escape key when zoomed');\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-uploader-test', ['pretender', 'sinon', 'ember-test-helpers/wait', 'ember-native-dom-helpers', 'ghost-admin/tests/helpers/file-upload', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _sinon, _wait, _emberNativeDomHelpers, _fileUpload, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    var stubSuccessfulUpload = function stubSuccessfulUpload(server) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        server.post('/ghost/api/v0.1/uploads/', function () {\n            return [200, { 'Content-Type': 'application/json' }, '\"/content/images/test.png\"'];\n        }, delay);\n    };\n\n    var stubFailedUpload = function stubFailedUpload(server, code, error) {\n        var delay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        server.post('/ghost/api/v0.1/uploads/', function () {\n            return [code, { 'Content-Type': 'application/json' }, JSON.stringify({\n                errors: [{\n                    errorType: error,\n                    message: 'Error: ' + error\n                }]\n            })];\n        }, delay);\n    };\n\n    (0, _mocha.describe)('Integration: Component: gh-uploader', function () {\n        (0, _emberMocha.setupComponentTest)('gh-uploader', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.describe)('uploads', function () {\n            beforeEach(function () {\n                stubSuccessfulUpload(server);\n            });\n\n            (0, _mocha.it)('triggers uploads when `files` is set', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var _server$handledReques, lastRequest;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"TBQN5U0M\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                this.set('files', [(0, _fileUpload.createFile)()]);\n                                _context.next = 4;\n                                return (0, _wait.default)();\n\n                            case 4:\n                                _server$handledReques = _slicedToArray(server.handledRequests, 1), lastRequest = _server$handledReques[0];\n\n                                (0, _chai.expect)(server.handledRequests.length).to.equal(1);\n                                (0, _chai.expect)(lastRequest.url).to.equal('/ghost/api/v0.1/uploads/');\n                                // requestBody is a FormData object\n                                // this will fail in anything other than Chrome and Firefox\n                                // https://developer.mozilla.org/en-US/docs/Web/API/FormData#Browser_compatibility\n                                (0, _chai.expect)(lastRequest.requestBody.has('uploadimage')).to.be.true;\n\n                            case 8:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n\n            (0, _mocha.it)('triggers multiple uploads', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"TBQN5U0M\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                this.set('files', [(0, _fileUpload.createFile)(), (0, _fileUpload.createFile)()]);\n                                _context2.next = 4;\n                                return (0, _wait.default)();\n\n                            case 4:\n\n                                (0, _chai.expect)(server.handledRequests.length).to.equal(2);\n\n                            case 5:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n\n            (0, _mocha.it)('triggers onStart when upload starts', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                this.set('uploadStarted', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"6g/gw/g9\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onStart\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadStarted\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(), (0, _fileUpload.createFile)()]);\n                                _context3.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _chai.expect)(this.get('uploadStarted').calledOnce).to.be.true;\n\n                            case 6:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n\n            (0, _mocha.it)('triggers onUploadSuccess when a file uploads', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var firstCall;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                this.set('fileUploaded', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"8pK98QdJ\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onUploadSuccess\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"fileUploaded\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' }), (0, _fileUpload.createFile)()]);\n                                _context4.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                // triggered for each file\n                                (0, _chai.expect)(this.get('fileUploaded').calledTwice).to.be.true;\n\n                                // filename and url is passed in arg\n                                firstCall = this.get('fileUploaded').getCall(0);\n\n                                (0, _chai.expect)(firstCall.args[0].fileName).to.equal('file1.png');\n                                (0, _chai.expect)(firstCall.args[0].url).to.equal('/content/images/test.png');\n\n                            case 9:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            })));\n\n            (0, _mocha.it)('triggers onComplete when all files uploaded', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var _get$getCall$args, result;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                this.set('uploadsFinished', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"i+cX7Fnk\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onComplete\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadsFinished\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' }), (0, _fileUpload.createFile)(['test'], { name: 'file2.png' })]);\n                                _context5.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _chai.expect)(this.get('uploadsFinished').calledOnce).to.be.true;\n\n                                // array of filenames and urls is passed in arg\n                                _get$getCall$args = _slicedToArray(this.get('uploadsFinished').getCall(0).args, 1), result = _get$getCall$args[0];\n\n                                (0, _chai.expect)(result.length).to.equal(2);\n                                (0, _chai.expect)(result[0].fileName).to.equal('file1.png');\n                                (0, _chai.expect)(result[0].url).to.equal('/content/images/test.png');\n                                (0, _chai.expect)(result[1].fileName).to.equal('file2.png');\n                                (0, _chai.expect)(result[1].url).to.equal('/content/images/test.png');\n\n                            case 12:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            })));\n\n            (0, _mocha.it)('onComplete only passes results for last upload', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                var _get$getCall$args2, results;\n\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                this.set('uploadsFinished', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"i+cX7Fnk\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onComplete\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadsFinished\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' })]);\n                                _context6.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file2.png' })]);\n\n                                _context6.next = 8;\n                                return (0, _wait.default)();\n\n                            case 8:\n                                _get$getCall$args2 = _slicedToArray(this.get('uploadsFinished').getCall(1).args, 1), results = _get$getCall$args2[0];\n\n                                (0, _chai.expect)(results.length).to.equal(1);\n                                (0, _chai.expect)(results[0].fileName).to.equal('file2.png');\n\n                            case 11:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            })));\n\n            (0, _mocha.it)('onComplete returns results in same order as selected', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var _get$getCall$args3, results;\n\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                // first request has a delay to simulate larger file\n                                server.post('/ghost/api/v0.1/uploads/', function () {\n                                    // second request has no delay to simulate small file\n                                    stubSuccessfulUpload(server, 0);\n\n                                    return [200, { 'Content-Type': 'application/json' }, '\"/content/images/test.png\"'];\n                                }, 100);\n\n                                this.set('uploadsFinished', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"i+cX7Fnk\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onComplete\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadsFinished\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' }), // large - finishes last\n                                (0, _fileUpload.createFile)(['test'], { name: 'file2.png' }) // small - finishes first\n                                ]);\n                                _context7.next = 6;\n                                return (0, _wait.default)();\n\n                            case 6:\n                                _get$getCall$args3 = _slicedToArray(this.get('uploadsFinished').getCall(0).args, 1), results = _get$getCall$args3[0];\n\n                                (0, _chai.expect)(results.length).to.equal(2);\n                                (0, _chai.expect)(results[0].fileName).to.equal('file1.png');\n\n                            case 9:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            })));\n\n            (0, _mocha.it)('doesn\\'t allow new files to be set whilst uploading', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var _this = this;\n\n                var errorSpy;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                errorSpy = _sinon.default.spy(console, 'error');\n\n                                stubSuccessfulUpload(server, 100);\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"TBQN5U0M\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)()]);\n\n                                // logs error because upload is in progress\n                                Ember.run.later(function () {\n                                    _this.set('files', [(0, _fileUpload.createFile)()]);\n                                }, 50);\n\n                                // runs ok because original upload has finished\n                                Ember.run.later(function () {\n                                    _this.set('files', [(0, _fileUpload.createFile)()]);\n                                }, 200);\n\n                                _context8.next = 8;\n                                return (0, _wait.default)();\n\n                            case 8:\n\n                                (0, _chai.expect)(server.handledRequests.length).to.equal(2);\n                                (0, _chai.expect)(errorSpy.calledOnce).to.be.true;\n                                errorSpy.restore();\n\n                            case 11:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            })));\n\n            (0, _mocha.it)('yields isUploading whilst upload is in progress', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                stubSuccessfulUpload(server, 200);\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"UMBeOvlZ\",\n                                    \"block\": \"{\\\"symbols\\\":[\\\"uploader\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[19,1,[\\\"isUploading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"is-uploading-test\\\"],[7],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                this.set('files', [(0, _fileUpload.createFile)(), (0, _fileUpload.createFile)()]);\n\n                                Ember.run.later(function () {\n                                    (0, _chai.expect)((0, _emberNativeDomHelpers.find)('.is-uploading-test')).to.exist;\n                                }, 100);\n\n                                _context9.next = 6;\n                                return (0, _wait.default)();\n\n                            case 6:\n\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('.is-uploading-test')).to.not.exist;\n\n                            case 7:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            })));\n\n            (0, _mocha.it)('yields progressBar component with total upload progress', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                var progressWidth;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                stubSuccessfulUpload(server, 200);\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"UtGvN9lT\",\n                                    \"block\": \"{\\\"symbols\\\":[\\\"uploader\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[19,1,[\\\"progressBar\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                this.set('files', [(0, _fileUpload.createFile)(), (0, _fileUpload.createFile)()]);\n\n                                Ember.run.later(function () {\n                                    (0, _chai.expect)((0, _emberNativeDomHelpers.find)('[data-test-progress-bar]')).to.exist;\n                                    var progressWidth = parseInt((0, _emberNativeDomHelpers.find)('[data-test-progress-bar]').style.width);\n                                    (0, _chai.expect)(progressWidth).to.be.above(0);\n                                    (0, _chai.expect)(progressWidth).to.be.below(100);\n                                }, 100);\n\n                                _context10.next = 6;\n                                return (0, _wait.default)();\n\n                            case 6:\n                                progressWidth = parseInt((0, _emberNativeDomHelpers.find)('[data-test-progress-bar]').style.width);\n\n                                (0, _chai.expect)(progressWidth).to.equal(100);\n\n                            case 8:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this);\n            })));\n\n            (0, _mocha.it)('yields files property', function () {\n                this.render(Ember.HTMLBars.template({\n                    \"id\": \"xczb9hNQ\",\n                    \"block\": \"{\\\"symbols\\\":[\\\"uploader\\\",\\\"file\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[[4,\\\"each\\\",[[19,1,[\\\"files\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"file\\\"],[7],[1,[19,2,[\\\"name\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n                    \"meta\": {}\n                }));\n\n                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' }), (0, _fileUpload.createFile)(['test'], { name: 'file2.png' })]);\n\n                (0, _chai.expect)((0, _emberNativeDomHelpers.findAll)('.file')[0].textContent).to.equal('file1.png');\n                (0, _chai.expect)((0, _emberNativeDomHelpers.findAll)('.file')[1].textContent).to.equal('file2.png');\n            });\n\n            (0, _mocha.it)('can be cancelled', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                        switch (_context11.prev = _context11.next) {\n                            case 0:\n                                stubSuccessfulUpload(server, 200);\n                                this.set('cancelled', _sinon.default.spy());\n                                this.set('complete', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"l4G0CTC1\",\n                                    \"block\": \"{\\\"symbols\\\":[\\\"uploader\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onCancel\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"cancelled\\\"]]],null]]],{\\\"statements\\\":[[0,\\\"                \\\"],[6,\\\"button\\\"],[9,\\\"class\\\",\\\"cancel-button\\\"],[3,\\\"action\\\",[[19,0,[]],[19,1,[\\\"cancel\\\"]]]],[7],[0,\\\"Cancel\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n\n                                this.set('files', [(0, _fileUpload.createFile)()]);\n\n                                Ember.run.later(function () {\n                                    (0, _emberNativeDomHelpers.click)('.cancel-button');\n                                }, 50);\n\n                                _context11.next = 8;\n                                return (0, _wait.default)();\n\n                            case 8:\n\n                                (0, _chai.expect)(this.get('cancelled').calledOnce, 'onCancel triggered').to.be.true;\n                                (0, _chai.expect)(this.get('complete').notCalled, 'onComplete triggered').to.be.true;\n\n                            case 10:\n                            case 'end':\n                                return _context11.stop();\n                        }\n                    }\n                }, _callee11, this);\n            })));\n\n            (0, _mocha.it)('uploads to supplied `uploadUrl`', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                var _server$handledReques2, lastRequest;\n\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                    while (1) {\n                        switch (_context12.prev = _context12.next) {\n                            case 0:\n                                server.post('/ghost/api/v0.1/images/', function () {\n                                    return [200, { 'Content-Type': 'application/json' }, '\"/content/images/test.png\"'];\n                                });\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"G6YeCa1j\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"uploadUrl\\\"],[[20,[\\\"files\\\"]],\\\"/images/\\\"]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)()]);\n                                _context12.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n                                _server$handledReques2 = _slicedToArray(server.handledRequests, 1), lastRequest = _server$handledReques2[0];\n\n                                (0, _chai.expect)(lastRequest.url).to.equal('/ghost/api/v0.1/images/');\n\n                            case 7:\n                            case 'end':\n                                return _context12.stop();\n                        }\n                    }\n                }, _callee12, this);\n            })));\n\n            (0, _mocha.it)('passes supplied paramName in request', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n                var _server$handledReques3, lastRequest;\n\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                    while (1) {\n                        switch (_context13.prev = _context13.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"kP8UlEzU\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"paramName\\\"],[[20,[\\\"files\\\"]],\\\"testupload\\\"]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)()]);\n                                _context13.next = 4;\n                                return (0, _wait.default)();\n\n                            case 4:\n                                _server$handledReques3 = _slicedToArray(server.handledRequests, 1), lastRequest = _server$handledReques3[0];\n                                // requestBody is a FormData object\n                                // this will fail in anything other than Chrome and Firefox\n                                // https://developer.mozilla.org/en-US/docs/Web/API/FormData#Browser_compatibility\n\n                                (0, _chai.expect)(lastRequest.requestBody.has('testupload')).to.be.true;\n\n                            case 6:\n                            case 'end':\n                                return _context13.stop();\n                        }\n                    }\n                }, _callee13, this);\n            })));\n        });\n\n        (0, _mocha.describe)('validation', function () {\n            (0, _mocha.it)('validates file extensions by default', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n                var _get$firstCall$args, onFailedResult;\n\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                    while (1) {\n                        switch (_context14.prev = _context14.next) {\n                            case 0:\n                                this.set('onFailed', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"BOOXgLQC\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n                \\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"extensions\\\",\\\"onFailed\\\"],[[20,[\\\"files\\\"]],\\\"jpg,jpeg\\\",[25,\\\"action\\\",[[19,0,[]],[20,[\\\"onFailed\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"\\\\n            \\\"]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'test.png' })]);\n                                _context14.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n                                _get$firstCall$args = _slicedToArray(this.get('onFailed').firstCall.args, 1), onFailedResult = _get$firstCall$args[0];\n\n                                (0, _chai.expect)(onFailedResult.length).to.equal(1);\n                                (0, _chai.expect)(onFailedResult[0].fileName, 'onFailed file name').to.equal('test.png');\n                                (0, _chai.expect)(onFailedResult[0].message, 'onFailed message').to.match(/not supported/);\n\n                            case 9:\n                            case 'end':\n                                return _context14.stop();\n                        }\n                    }\n                }, _callee14, this);\n            })));\n\n            (0, _mocha.it)('accepts custom validation method', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                var _get$firstCall$args2, onFailedResult;\n\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                    while (1) {\n                        switch (_context15.prev = _context15.next) {\n                            case 0:\n                                this.set('validate', function (file) {\n                                    return file.name + ' failed test validation';\n                                });\n                                this.set('onFailed', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"SP7EDHxa\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n                \\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"validate\\\",\\\"onFailed\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"validate\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"onFailed\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"\\\\n            \\\"]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'test.png' })]);\n                                _context15.next = 6;\n                                return (0, _wait.default)();\n\n                            case 6:\n                                _get$firstCall$args2 = _slicedToArray(this.get('onFailed').firstCall.args, 1), onFailedResult = _get$firstCall$args2[0];\n\n                                (0, _chai.expect)(onFailedResult.length).to.equal(1);\n                                (0, _chai.expect)(onFailedResult[0].fileName).to.equal('test.png');\n                                (0, _chai.expect)(onFailedResult[0].message).to.equal('test.png failed test validation');\n\n                            case 10:\n                            case 'end':\n                                return _context15.stop();\n                        }\n                    }\n                }, _callee15, this);\n            })));\n\n            (0, _mocha.it)('yields errors when validation fails', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                    while (1) {\n                        switch (_context16.prev = _context16.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"Sb382dTw\",\n                                    \"block\": \"{\\\"symbols\\\":[\\\"uploader\\\",\\\"error\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"extensions\\\"],[[20,[\\\"files\\\"]],\\\"jpg,jpeg\\\"]],{\\\"statements\\\":[[4,\\\"each\\\",[[19,1,[\\\"errors\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"error-fileName\\\"],[7],[1,[19,2,[\\\"fileName\\\"]],false],[8],[0,\\\"\\\\n                        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"error-message\\\"],[7],[1,[19,2,[\\\"message\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'test.png' })]);\n                                _context16.next = 4;\n                                return (0, _wait.default)();\n\n                            case 4:\n\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('.error-fileName').textContent).to.equal('test.png');\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('.error-message').textContent).to.match(/not supported/);\n\n                            case 6:\n                            case 'end':\n                                return _context16.stop();\n                        }\n                    }\n                }, _callee16, this);\n            })));\n        });\n\n        (0, _mocha.describe)('server errors', function () {\n            beforeEach(function () {\n                stubFailedUpload(server, 500, 'No upload for you');\n            });\n\n            (0, _mocha.it)('triggers onFailed when uploads complete', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n                var _get$firstCall$args3, failures;\n\n                return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                    while (1) {\n                        switch (_context17.prev = _context17.next) {\n                            case 0:\n                                this.set('uploadFailed', _sinon.default.spy());\n                                this.set('uploadComplete', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"3qr5epiE\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onFailed\\\",\\\"onComplete\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFailed\\\"]]],null],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadComplete\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"            \\\"]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' }), (0, _fileUpload.createFile)(['test'], { name: 'file2.png' })]);\n                                _context17.next = 6;\n                                return (0, _wait.default)();\n\n                            case 6:\n\n                                (0, _chai.expect)(this.get('uploadFailed').calledOnce).to.be.true;\n                                (0, _chai.expect)(this.get('uploadComplete').calledOnce).to.be.true;\n\n                                _get$firstCall$args3 = _slicedToArray(this.get('uploadFailed').firstCall.args, 1), failures = _get$firstCall$args3[0];\n\n                                (0, _chai.expect)(failures.length).to.equal(2);\n                                (0, _chai.expect)(failures[0].fileName).to.equal('file1.png');\n                                (0, _chai.expect)(failures[0].message).to.equal('Error: No upload for you');\n\n                            case 12:\n                            case 'end':\n                                return _context17.stop();\n                        }\n                    }\n                }, _callee17, this);\n            })));\n\n            (0, _mocha.it)('triggers onUploadFailure when each upload fails', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n                var _get$firstCall$args4, firstFailure, _get$secondCall$args, secondFailure;\n\n                return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                    while (1) {\n                        switch (_context18.prev = _context18.next) {\n                            case 0:\n                                this.set('uploadFail', _sinon.default.spy());\n\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"CG87nm5T\",\n                                    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\",\\\"onUploadFailure\\\"],[[20,[\\\"files\\\"]],[25,\\\"action\\\",[[19,0,[]],[20,[\\\"uploadFail\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"            \\\"]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'file1.png' }), (0, _fileUpload.createFile)(['test'], { name: 'file2.png' })]);\n                                _context18.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _chai.expect)(this.get('uploadFail').calledTwice).to.be.true;\n\n                                _get$firstCall$args4 = _slicedToArray(this.get('uploadFail').firstCall.args, 1), firstFailure = _get$firstCall$args4[0];\n\n                                (0, _chai.expect)(firstFailure.fileName).to.equal('file1.png');\n                                (0, _chai.expect)(firstFailure.message).to.equal('Error: No upload for you');\n\n                                _get$secondCall$args = _slicedToArray(this.get('uploadFail').secondCall.args, 1), secondFailure = _get$secondCall$args[0];\n\n                                (0, _chai.expect)(secondFailure.fileName).to.equal('file2.png');\n                                (0, _chai.expect)(secondFailure.message).to.equal('Error: No upload for you');\n\n                            case 12:\n                            case 'end':\n                                return _context18.stop();\n                        }\n                    }\n                }, _callee18, this);\n            })));\n\n            (0, _mocha.it)('yields errors when uploads fail', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n                return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                    while (1) {\n                        switch (_context19.prev = _context19.next) {\n                            case 0:\n                                this.render(Ember.HTMLBars.template({\n                                    \"id\": \"WhZYiq1c\",\n                                    \"block\": \"{\\\"symbols\\\":[\\\"uploader\\\",\\\"error\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-uploader\\\",null,[[\\\"files\\\"],[[20,[\\\"files\\\"]]]],{\\\"statements\\\":[[4,\\\"each\\\",[[19,1,[\\\"errors\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"error-fileName\\\"],[7],[1,[19,2,[\\\"fileName\\\"]],false],[8],[0,\\\"\\\\n                        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"error-message\\\"],[7],[1,[19,2,[\\\"message\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"]],\\\"hasEval\\\":false}\",\n                                    \"meta\": {}\n                                }));\n                                this.set('files', [(0, _fileUpload.createFile)(['test'], { name: 'test.png' })]);\n                                _context19.next = 4;\n                                return (0, _wait.default)();\n\n                            case 4:\n\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('.error-fileName').textContent).to.equal('test.png');\n                                (0, _chai.expect)((0, _emberNativeDomHelpers.find)('.error-message').textContent).to.equal('Error: No upload for you');\n\n                            case 6:\n                            case 'end':\n                                return _context19.stop();\n                        }\n                    }\n                }, _callee19, this);\n            })));\n        });\n    });\n});","define('ghost-admin/tests/integration/components/gh-validation-status-container-test', ['ember-data', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_emberData, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var Errors = _emberData.default.Errors;\n\n\n    (0, _mocha.describe)('Integration: Component: gh-validation-status-container', function () {\n        (0, _emberMocha.setupComponentTest)('gh-validation-status-container', {\n            integration: true\n        });\n\n        beforeEach(function () {\n            var testObject = Ember.Object.create();\n            testObject.set('name', 'Test');\n            testObject.set('hasValidated', []);\n            testObject.set('errors', Errors.create());\n\n            this.set('testObject', testObject);\n        });\n\n        (0, _mocha.it)('has no success/error class by default', function () {\n            var _this = this;\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hcbUWL58\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-validation-status-container\\\",null,[[\\\"class\\\",\\\"property\\\",\\\"errors\\\",\\\"hasValidated\\\"],[\\\"gh-test\\\",\\\"name\\\",[20,[\\\"testObject\\\",\\\"errors\\\"]],[20,[\\\"testObject\\\",\\\"hasValidated\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this.$('.gh-test')).to.have.length(1);\n                (0, _chai.expect)(_this.$('.gh-test').hasClass('success')).to.be.false;\n                (0, _chai.expect)(_this.$('.gh-test').hasClass('error')).to.be.false;\n            });\n        });\n\n        (0, _mocha.it)('has success class when valid', function () {\n            var _this2 = this;\n\n            this.get('testObject.hasValidated').push('name');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hcbUWL58\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-validation-status-container\\\",null,[[\\\"class\\\",\\\"property\\\",\\\"errors\\\",\\\"hasValidated\\\"],[\\\"gh-test\\\",\\\"name\\\",[20,[\\\"testObject\\\",\\\"errors\\\"]],[20,[\\\"testObject\\\",\\\"hasValidated\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this2.$('.gh-test')).to.have.length(1);\n                (0, _chai.expect)(_this2.$('.gh-test').hasClass('success')).to.be.true;\n                (0, _chai.expect)(_this2.$('.gh-test').hasClass('error')).to.be.false;\n            });\n        });\n\n        (0, _mocha.it)('has error class when invalid', function () {\n            var _this3 = this;\n\n            this.get('testObject.hasValidated').push('name');\n            this.get('testObject.errors').add('name', 'has error');\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hcbUWL58\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-validation-status-container\\\",null,[[\\\"class\\\",\\\"property\\\",\\\"errors\\\",\\\"hasValidated\\\"],[\\\"gh-test\\\",\\\"name\\\",[20,[\\\"testObject\\\",\\\"errors\\\"]],[20,[\\\"testObject\\\",\\\"hasValidated\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this3.$('.gh-test')).to.have.length(1);\n                (0, _chai.expect)(_this3.$('.gh-test').hasClass('success')).to.be.false;\n                (0, _chai.expect)(_this3.$('.gh-test').hasClass('error')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('still renders if hasValidated is undefined', function () {\n            var _this4 = this;\n\n            this.set('testObject.hasValidated', undefined);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"hcbUWL58\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"gh-validation-status-container\\\",null,[[\\\"class\\\",\\\"property\\\",\\\"errors\\\",\\\"hasValidated\\\"],[\\\"gh-test\\\",\\\"name\\\",[20,[\\\"testObject\\\",\\\"errors\\\"]],[20,[\\\"testObject\\\",\\\"hasValidated\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"        \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            return (0, _wait.default)().then(function () {\n                (0, _chai.expect)(_this4.$('.gh-test')).to.have.length(1);\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/components/modals/delete-subscriber-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: modal-delete-subscriber', function () {\n        (0, _emberMocha.setupComponentTest)('modal-delete-subscriber', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#modal-delete-subscriber}}\n            //     template content\n            //   {{/modal-delete-subscriber}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"m/J1KRh7\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"modal-delete-subscriber\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/modals/import-subscribers-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: modal-import-subscribers', function () {\n        (0, _emberMocha.setupComponentTest)('modal-import-subscribers', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#modal-import-subscribers}}\n            //     template content\n            //   {{/modal-import-subscribers}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"GoGzlkUF\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"modal-import-subscribers\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/modals/new-subscriber-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: modal-new-subscriber', function () {\n        (0, _emberMocha.setupComponentTest)('modal-new-subscriber', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#modal-new-subscriber}}\n            //     template content\n            //   {{/modal-new-subscriber}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"ZP3IpraP\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"modal-new-subscriber\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/modals/upload-theme-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: modal-upload-theme', function () {\n        (0, _emberMocha.setupComponentTest)('modal-upload-theme', {\n            integration: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // Set any properties with this.set('myProperty', 'value');\n            // Handle any actions with this.on('myAction', function(val) { ... });\n            // Template block usage:\n            // this.render(hbs`\n            //   {{#modal-upload-theme}}\n            //     template content\n            //   {{/modal-upload-theme}}\n            // `);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"AQq0RuhE\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"modal-upload-theme\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n            (0, _chai.expect)(this.$()).to.have.length(1);\n        });\n    });\n});","define('ghost-admin/tests/integration/components/transfer-owner-test', ['sinon', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Component: modal-transfer-owner', function () {\n        (0, _emberMocha.setupComponentTest)('transfer-owner', {\n            integration: true\n        });\n\n        (0, _mocha.it)('triggers confirm action', function () {\n            var _this = this;\n\n            var confirm = _sinon.default.stub();\n            var closeModal = _sinon.default.spy();\n\n            confirm.returns(Ember.RSVP.resolve({}));\n\n            this.on('confirm', confirm);\n            this.on('closeModal', closeModal);\n\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"2mtibbQX\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"modal-transfer-owner\\\",null,[[\\\"confirm\\\",\\\"closeModal\\\"],[[25,\\\"action\\\",[[19,0,[]],\\\"confirm\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"closeModal\\\"],null]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n\n            Ember.run(function () {\n                _this.$('.gh-btn.gh-btn-red').click();\n            });\n\n            (0, _chai.expect)(confirm.calledOnce, 'confirm called').to.be.true;\n            (0, _chai.expect)(closeModal.calledOnce, 'closeModal called').to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/integration/services/ajax-test', ['pretender', 'ghost-admin/config/environment', 'mocha', 'chai', 'ember-ajax/errors', 'ghost-admin/services/ajax', 'ember-mocha'], function (_pretender, _environment, _mocha, _chai, _errors, _ajax, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    function stubAjaxEndpoint(server) {\n        var response = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var code = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n\n        server.get('/test/', function () {\n            return [code, { 'Content-Type': 'application/json' }, JSON.stringify(response)];\n        });\n    }\n\n    (0, _mocha.describe)('Integration: Service: ajax', function () {\n        (0, _emberMocha.setupTest)('service:ajax', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('adds Ghost version header to requests', function (done) {\n            var version = _environment.default.APP.version;\n\n            var ajax = this.subject();\n\n            stubAjaxEndpoint(server, {});\n\n            ajax.request('/test/').then(function () {\n                var _server$handledReques = _slicedToArray(server.handledRequests, 1),\n                    request = _server$handledReques[0];\n\n                (0, _chai.expect)(request.requestHeaders['X-Ghost-Version']).to.equal(version);\n                done();\n            });\n        });\n\n        (0, _mocha.it)('correctly parses single message response text', function (done) {\n            var error = { message: 'Test Error' };\n            stubAjaxEndpoint(server, error, 500);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true();\n            }).catch(function (error) {\n                (0, _chai.expect)(error.payload.errors.length).to.equal(1);\n                (0, _chai.expect)(error.payload.errors[0].message).to.equal('Test Error');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('correctly parses single error response text', function (done) {\n            var error = { error: 'Test Error' };\n            stubAjaxEndpoint(server, error, 500);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true();\n            }).catch(function (error) {\n                (0, _chai.expect)(error.payload.errors.length).to.equal(1);\n                (0, _chai.expect)(error.payload.errors[0].message).to.equal('Test Error');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('correctly parses multiple error messages', function (done) {\n            var error = { errors: ['First Error', 'Second Error'] };\n            stubAjaxEndpoint(server, error, 500);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true();\n            }).catch(function (error) {\n                (0, _chai.expect)(error.payload.errors.length).to.equal(2);\n                (0, _chai.expect)(error.payload.errors[0].message).to.equal('First Error');\n                (0, _chai.expect)(error.payload.errors[1].message).to.equal('Second Error');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('returns default error object for non built-in error', function (done) {\n            stubAjaxEndpoint(server, {}, 500);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true;\n            }).catch(function (error) {\n                (0, _chai.expect)((0, _errors.isAjaxError)(error)).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles error checking for built-in errors', function (done) {\n            stubAjaxEndpoint(server, '', 401);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true;\n            }).catch(function (error) {\n                (0, _chai.expect)((0, _errors.isUnauthorizedError)(error)).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles error checking for VersionMismatchError', function (done) {\n            server.get('/test/', function () {\n                return [400, { 'Content-Type': 'application/json' }, JSON.stringify({\n                    errors: [{\n                        errorType: 'VersionMismatchError',\n                        statusCode: 400\n                    }]\n                })];\n            });\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true;\n            }).catch(function (error) {\n                (0, _chai.expect)((0, _ajax.isVersionMismatchError)(error)).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles error checking for RequestEntityTooLargeError on 413 errors', function (done) {\n            stubAjaxEndpoint(server, {}, 413);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true;\n            }).catch(function (error) {\n                (0, _chai.expect)((0, _ajax.isRequestEntityTooLargeError)(error)).to.be.true;\n                done();\n            });\n        });\n\n        (0, _mocha.it)('handles error checking for UnsupportedMediaTypeError on 415 errors', function (done) {\n            stubAjaxEndpoint(server, {}, 415);\n\n            var ajax = this.subject();\n\n            ajax.request('/test/').then(function () {\n                (0, _chai.expect)(false).to.be.true;\n            }).catch(function (error) {\n                (0, _chai.expect)((0, _ajax.isUnsupportedMediaTypeError)(error)).to.be.true;\n                done();\n            });\n        });\n\n        /* eslint-disable camelcase */\n        (0, _mocha.describe)('session handling', function () {\n            var successfulRequest = false;\n\n            var sessionStub = Ember.Service.extend({\n                isAuthenticated: true,\n                restoreCalled: false,\n                authenticated: null,\n\n                init: function init() {\n                    this.authenticated = {\n                        expires_at: new Date().getTime() - 10000,\n                        refresh_token: 'RefreshMe123'\n                    };\n                },\n                restore: function restore() {\n                    this.restoreCalled = true;\n                    this.authenticated.expires_at = new Date().getTime() + 10000;\n                    return Ember.RSVP.resolve();\n                },\n                authorize: function authorize() {}\n            });\n\n            beforeEach(function () {\n                server.get('/ghost/api/v0.1/test/', function () {\n                    return [200, { 'Content-Type': 'application/json' }, JSON.stringify({\n                        success: true\n                    })];\n                });\n\n                server.post('/ghost/api/v0.1/authentication/token', function () {\n                    return [401, { 'Content-Type': 'application/json' }, JSON.stringify({})];\n                });\n            });\n\n            (0, _mocha.it)('can restore an expired session', function (done) {\n                var ajax = this.subject();\n                ajax.set('session', sessionStub.create());\n\n                ajax.request('/ghost/api/v0.1/test/');\n\n                ajax.request('/ghost/api/v0.1/test/').then(function (result) {\n                    (0, _chai.expect)(ajax.get('session.restoreCalled'), 'restoreCalled').to.be.true;\n                    (0, _chai.expect)(result.success, 'result.success').to.be.true;\n                    done();\n                }).catch(function () {\n                    (0, _chai.expect)(true, 'request failed').to.be.false;\n                    done();\n                });\n            });\n\n            (0, _mocha.it)('errors correctly when session restoration fails', function (done) {\n                var ajax = this.subject();\n                var invalidateCalled = false;\n\n                ajax.set('session', sessionStub.create());\n                ajax.set('session.restore', function () {\n                    this.set('restoreCalled', true);\n                    return ajax.post('/ghost/api/v0.1/authentication/token');\n                });\n                ajax.set('session.invalidate', function () {\n                    invalidateCalled = true;\n                });\n\n                stubAjaxEndpoint(server, {}, 401);\n\n                ajax.request('/ghost/api/v0.1/test/').then(function () {\n                    (0, _chai.expect)(true, 'request was successful').to.be.false;\n                    done();\n                }).catch(function () {\n                    // TODO: fix the error return when a session restore fails\n                    // expect(isUnauthorizedError(error)).to.be.true;\n                    (0, _chai.expect)(ajax.get('session.restoreCalled'), 'restoreCalled').to.be.true;\n                    (0, _chai.expect)(successfulRequest, 'successfulRequest').to.be.false;\n                    (0, _chai.expect)(invalidateCalled, 'invalidateCalled').to.be.true;\n                    done();\n                });\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/services/config-test', ['pretender', 'ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _wait, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    function stubAvailableTimezonesEndpoint(server) {\n        server.get('/ghost/api/v0.1/configuration/timezones', function () {\n            return [200, { 'Content-Type': 'application/json' }, JSON.stringify({\n                configuration: [{\n                    timezones: [{\n                        label: '(GMT -11:00) Midway Island, Samoa',\n                        name: 'Pacific/Pago_Pago',\n                        offset: -660\n                    }, {\n                        label: '(GMT) Greenwich Mean Time : Dublin, Edinburgh, London',\n                        name: 'Europe/Dublin',\n                        offset: 0\n                    }]\n                }]\n            })];\n        });\n    }\n\n    (0, _mocha.describe)('Integration: Service: config', function () {\n        (0, _emberMocha.setupTest)('service:config', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('returns a list of timezones in the expected format', function (done) {\n            var service = this.subject();\n            stubAvailableTimezonesEndpoint(server);\n\n            service.get('availableTimezones').then(function (timezones) {\n                (0, _chai.expect)(timezones.length).to.equal(2);\n                (0, _chai.expect)(timezones[0].name).to.equal('Pacific/Pago_Pago');\n                (0, _chai.expect)(timezones[0].label).to.equal('(GMT -11:00) Midway Island, Samoa');\n                (0, _chai.expect)(timezones[1].name).to.equal('Europe/Dublin');\n                (0, _chai.expect)(timezones[1].label).to.equal('(GMT) Greenwich Mean Time : Dublin, Edinburgh, London');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('normalizes blogUrl to non-trailing-slash', function (done) {\n            var stubBlogUrl = function stubBlogUrl(blogUrl) {\n                server.get('/ghost/api/v0.1/configuration/', function () {\n                    return [200, { 'Content-Type': 'application/json' }, JSON.stringify({\n                        configuration: [{\n                            blogUrl: blogUrl\n                        }]\n                    })];\n                });\n            };\n            var service = this.subject();\n\n            stubBlogUrl('http://localhost:2368/');\n\n            service.fetch().then(function () {\n                (0, _chai.expect)(service.get('blogUrl'), 'trailing-slash').to.equal('http://localhost:2368');\n            });\n\n            (0, _wait.default)().then(function () {\n                stubBlogUrl('http://localhost:2368');\n\n                service.fetch().then(function () {\n                    (0, _chai.expect)(service.get('blogUrl'), 'non-trailing-slash').to.equal('http://localhost:2368');\n\n                    done();\n                });\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/services/feature-test', ['ghost-admin/services/feature', 'pretender', 'ember-test-helpers/wait', 'mocha', 'ember-mocha'], function (_feature, _pretender, _wait, _mocha, _emberMocha) {\n    'use strict';\n\n    function stubSettings(server, labs) {\n        var validSave = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        var settings = [{\n            id: '1',\n            type: 'blog',\n            key: 'labs',\n            value: JSON.stringify(labs)\n        }];\n\n        server.get('/ghost/api/v0.1/settings/', function () {\n            return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ settings: settings })];\n        });\n\n        server.put('/ghost/api/v0.1/settings/', function (request) {\n            var statusCode = validSave ? 200 : 400;\n            var response = validSave ? request.requestBody : JSON.stringify({\n                errors: [{\n                    message: 'Test Error'\n                }]\n            });\n\n            return [statusCode, { 'Content-Type': 'application/json' }, response];\n        });\n    }\n\n    function stubUser(server, accessibility) {\n        var validSave = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        var users = [{\n            id: '1',\n            // Add extra properties for the validations\n            name: 'Test User',\n            email: 'test@example.com',\n            accessibility: JSON.stringify(accessibility),\n            roles: [{\n                id: 1,\n                name: 'Owner',\n                description: 'Owner'\n            }]\n        }];\n\n        server.get('/ghost/api/v0.1/users/me/', function () {\n            return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ users: users })];\n        });\n\n        server.put('/ghost/api/v0.1/users/1/', function (request) {\n            var statusCode = validSave ? 200 : 400;\n            var response = validSave ? request.requestBody : JSON.stringify({\n                errors: [{\n                    message: 'Test Error'\n                }]\n            });\n\n            return [statusCode, { 'Content-Type': 'application/json' }, response];\n        });\n    }\n\n    function addTestFlag() {\n        _feature.default.reopen({\n            testFlag: (0, _feature.feature)('testFlag'),\n            testUserFlag: (0, _feature.feature)('testUserFlag', { user: true })\n        });\n    }\n\n    (0, _mocha.describe)('Integration: Service: feature', function () {\n        (0, _emberMocha.setupTest)('service:feature', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('loads labs and user settings correctly', function () {\n            stubSettings(server, { testFlag: true });\n            stubUser(server, { testUserFlag: true });\n\n            addTestFlag();\n\n            var service = this.subject();\n\n            return service.fetch().then(function () {\n                expect(service.get('testFlag')).to.be.true;\n                expect(service.get('testUserFlag')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('returns false for set flag with config false and labs false', function () {\n            stubSettings(server, { testFlag: false });\n            stubUser(server, {});\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', false);\n\n            return service.fetch().then(function () {\n                expect(service.get('labs.testFlag')).to.be.false;\n                expect(service.get('testFlag')).to.be.false;\n            });\n        });\n\n        (0, _mocha.it)('returns true for set flag with config true and labs false', function () {\n            stubSettings(server, { testFlag: false });\n            stubUser(server, {});\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', true);\n\n            return service.fetch().then(function () {\n                expect(service.get('labs.testFlag')).to.be.false;\n                expect(service.get('testFlag')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('returns true for set flag with config false and labs true', function () {\n            stubSettings(server, { testFlag: true });\n            stubUser(server, {});\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', false);\n\n            return service.fetch().then(function () {\n                expect(service.get('labs.testFlag')).to.be.true;\n                expect(service.get('testFlag')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('returns true for set flag with config true and labs true', function () {\n            stubSettings(server, { testFlag: true });\n            stubUser(server, {});\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', true);\n\n            return service.fetch().then(function () {\n                expect(service.get('labs.testFlag')).to.be.true;\n                expect(service.get('testFlag')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('returns false for set flag with accessibility false', function () {\n            stubSettings(server, {});\n            stubUser(server, { testUserFlag: false });\n\n            addTestFlag();\n\n            var service = this.subject();\n\n            return service.fetch().then(function () {\n                expect(service.get('accessibility.testUserFlag')).to.be.false;\n                expect(service.get('testUserFlag')).to.be.false;\n            });\n        });\n\n        (0, _mocha.it)('returns true for set flag with accessibility true', function () {\n            stubSettings(server, {});\n            stubUser(server, { testUserFlag: true });\n\n            addTestFlag();\n\n            var service = this.subject();\n\n            return service.fetch().then(function () {\n                expect(service.get('accessibility.testUserFlag')).to.be.true;\n                expect(service.get('testUserFlag')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('saves labs setting correctly', function () {\n            stubSettings(server, { testFlag: false });\n            stubUser(server, { testUserFlag: false });\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', false);\n\n            return service.fetch().then(function () {\n                expect(service.get('testFlag')).to.be.false;\n\n                Ember.run(function () {\n                    service.set('testFlag', true);\n                });\n\n                return (0, _wait.default)().then(function () {\n                    expect(server.handlers[1].numberOfCalls).to.equal(1);\n                    expect(service.get('testFlag')).to.be.true;\n                });\n            });\n        });\n\n        (0, _mocha.it)('saves accessibility setting correctly', function () {\n            stubSettings(server, {});\n            stubUser(server, { testUserFlag: false });\n\n            addTestFlag();\n\n            var service = this.subject();\n\n            return service.fetch().then(function () {\n                expect(service.get('testUserFlag')).to.be.false;\n\n                Ember.run(function () {\n                    service.set('testUserFlag', true);\n                });\n\n                return (0, _wait.default)().then(function () {\n                    expect(server.handlers[3].numberOfCalls).to.equal(1);\n                    expect(service.get('testUserFlag')).to.be.true;\n                });\n            });\n        });\n\n        (0, _mocha.it)('notifies for server errors on labs save', function () {\n            stubSettings(server, { testFlag: false }, false);\n            stubUser(server, {});\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', false);\n\n            return service.fetch().then(function () {\n                expect(service.get('testFlag')).to.be.false;\n\n                Ember.run(function () {\n                    service.set('testFlag', true);\n                });\n\n                return (0, _wait.default)().then(function () {\n                    expect(server.handlers[1].numberOfCalls, 'PUT call is made').to.equal(1);\n\n                    expect(service.get('notifications.alerts').length, 'number of alerts shown').to.equal(1);\n\n                    expect(service.get('testFlag')).to.be.false;\n                });\n            });\n        });\n\n        (0, _mocha.it)('notifies for server errors on accessibility save', function () {\n            stubSettings(server, {});\n            stubUser(server, { testUserFlag: false }, false);\n\n            addTestFlag();\n\n            var service = this.subject();\n\n            return service.fetch().then(function () {\n                expect(service.get('testUserFlag')).to.be.false;\n\n                Ember.run(function () {\n                    service.set('testUserFlag', true);\n                });\n\n                return (0, _wait.default)().then(function () {\n                    expect(server.handlers[3].numberOfCalls, 'PUT call is made').to.equal(1);\n\n                    expect(service.get('notifications.alerts').length, 'number of alerts shown').to.equal(1);\n\n                    expect(service.get('testUserFlag')).to.be.false;\n                });\n            });\n        });\n\n        (0, _mocha.it)('notifies for validation errors', function () {\n            stubSettings(server, { testFlag: false }, true, false);\n            stubUser(server, {});\n\n            addTestFlag();\n\n            var service = this.subject();\n            service.get('config').set('testFlag', false);\n\n            return service.fetch().then(function () {\n                expect(service.get('testFlag')).to.be.false;\n\n                Ember.run(function () {\n                    expect(function () {\n                        service.set('testFlag', true);\n                    }, Ember.Error, 'threw validation error');\n                });\n\n                return (0, _wait.default)().then(function () {\n                    // ensure validation is happening before the API is hit\n                    expect(server.handlers[1].numberOfCalls).to.equal(0);\n                    expect(service.get('testFlag')).to.be.false;\n                });\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/services/lazy-loader-test', ['pretender', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Integration: Service: lazy-loader', function () {\n        (0, _emberMocha.setupTest)('service:lazy-loader', { integration: true });\n        var server = void 0;\n        var ghostPaths = {\n            adminRoot: '/assets/'\n        };\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('loads a script correctly and only once', function () {\n            var subject = this.subject({\n                ghostPaths: ghostPaths,\n                scriptPromises: {},\n                testing: false\n            });\n\n            server.get('/assets/test.js', function (_ref) {\n                var requestHeaders = _ref.requestHeaders;\n\n                (0, _chai.expect)(requestHeaders.Accept).to.match(/text\\/javascript/);\n\n                return [200, { 'Content-Type': 'text/javascript' }, 'window.testLoadScript = \\'testvalue\\''];\n            });\n\n            return subject.loadScript('test-script', 'test.js').then(function () {\n                (0, _chai.expect)(subject.get('scriptPromises.test-script')).to.exist;\n                (0, _chai.expect)(window.testLoadScript).to.equal('testvalue');\n                (0, _chai.expect)(server.handlers[0].numberOfCalls).to.equal(1);\n\n                return subject.loadScript('test-script', 'test.js');\n            }).then(function () {\n                (0, _chai.expect)(server.handlers[0].numberOfCalls).to.equal(1);\n            });\n        });\n\n        (0, _mocha.it)('loads styles correctly', function () {\n            var subject = this.subject({\n                ghostPaths: ghostPaths,\n                testing: false\n            });\n\n            return subject.loadStyle('testing', 'style.css').catch(function () {\n                // we add a catch handler here because `/assets/style.css` doesn't exist\n                (0, _chai.expect)(Ember.$('#testing-styles').length).to.equal(1);\n                (0, _chai.expect)(Ember.$('#testing-styles').attr('href')).to.equal('/assets/style.css');\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/services/slug-generator-test', ['pretender', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    function stubSlugEndpoint(server, type, slug) {\n        server.get('/ghost/api/v0.1/slugs/:type/:slug/', function (request) {\n            (0, _chai.expect)(request.params.type).to.equal(type);\n            (0, _chai.expect)(request.params.slug).to.equal(slug);\n\n            return [200, { 'Content-Type': 'application/json' }, JSON.stringify({ slugs: [{ slug: Ember.String.dasherize(slug) }] })];\n        });\n    }\n\n    (0, _mocha.describe)('Integration: Service: slug-generator', function () {\n        (0, _emberMocha.setupTest)('service:slug-generator', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('returns empty if no slug is provided', function (done) {\n            var service = this.subject();\n\n            service.generateSlug('post', '').then(function (slug) {\n                (0, _chai.expect)(slug).to.equal('');\n                done();\n            });\n        });\n\n        (0, _mocha.it)('calls correct endpoint and returns correct data', function (done) {\n            var rawSlug = 'a test post';\n            stubSlugEndpoint(server, 'post', rawSlug);\n\n            var service = this.subject();\n\n            service.generateSlug('post', rawSlug).then(function (slug) {\n                (0, _chai.expect)(slug).to.equal(Ember.String.dasherize(rawSlug));\n                done();\n            });\n        });\n    });\n});","define('ghost-admin/tests/integration/services/store-test', ['pretender', 'ghost-admin/config/environment', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _environment, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    (0, _mocha.describe)('Integration: Service: store', function () {\n        (0, _emberMocha.setupTest)('service:store', {\n            integration: true\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('adds Ghost version header to requests', function (done) {\n            var version = _environment.default.APP.version;\n\n            var store = this.subject();\n\n            server.get('/ghost/api/v0.1/posts/1/', function () {\n                return [404, { 'Content-Type': 'application/json' }, JSON.stringify({})];\n            });\n\n            store.find('post', 1).catch(function () {\n                var _server$handledReques = _slicedToArray(server.handledRequests, 1),\n                    request = _server$handledReques[0];\n\n                (0, _chai.expect)(request.requestHeaders['X-Ghost-Version']).to.equal(version);\n                done();\n            });\n        });\n    });\n});","define('ghost-admin/tests/test-helper', ['ghost-admin/tests/helpers/resolver', 'ember-mocha'], function (_resolver, _emberMocha) {\n    'use strict';\n\n    (0, _emberMocha.setResolver)(_resolver.default);\n\n    mocha.setup({\n        timeout: 15000,\n        slow: 500\n    });\n});","define('ghost-admin/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  describe('ESLint | tests', function () {\n\n    it('acceptance/authentication-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/content-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/custom-post-templates-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/editor-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/error-handling-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/ghost-desktop-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/password-reset-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/amp-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/apps-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/code-injection-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/design-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/general-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/labs-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/slack-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/tags-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/settings/unsplash-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/setup-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/signin-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/signup-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/subscribers-test.js', function () {\n      // test passed\n    });\n\n    it('acceptance/team-test.js', function () {\n      // test passed\n    });\n\n    it('helpers/adapter-error.js', function () {\n      // test passed\n    });\n\n    it('helpers/destroy-app.js', function () {\n      // test passed\n    });\n\n    it('helpers/editor-helpers.js', function () {\n      // test passed\n    });\n\n    it('helpers/file-upload.js', function () {\n      // test passed\n    });\n\n    it('helpers/resolver.js', function () {\n      // test passed\n    });\n\n    it('helpers/start-app.js', function () {\n      // test passed\n    });\n\n    it('integration/adapters/tag-test.js', function () {\n      // test passed\n    });\n\n    it('integration/adapters/user-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-alert-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-alerts-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-basic-dropdown-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-cm-editor-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-date-time-picker-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-download-count-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-editor-post-status-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-feature-flag-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-file-uploader-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-image-uploader-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-image-uploader-with-preview-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-markdown-editor-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-navitem-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-navitem-url-input-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-notification-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-notifications-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-profile-image-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-progress-bar-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-psm-tags-input-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-psm-template-select-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-publishmenu-draft-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-publishmenu-published-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-publishmenu-scheduled-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-publishmenu-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-search-input-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-simplemde-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-subscribers-table-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-tag-settings-form-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-tags-management-container-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-task-button-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-theme-table-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-timezone-select-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-trim-focus-input-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-unsplash-photo-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-unsplash-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-uploader-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/gh-validation-status-container-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/modals/delete-subscriber-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/modals/import-subscribers-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/modals/new-subscriber-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/modals/upload-theme-test.js', function () {\n      // test passed\n    });\n\n    it('integration/components/transfer-owner-test.js', function () {\n      // test passed\n    });\n\n    it('integration/services/ajax-test.js', function () {\n      // test passed\n    });\n\n    it('integration/services/config-test.js', function () {\n      // test passed\n    });\n\n    it('integration/services/feature-test.js', function () {\n      // test passed\n    });\n\n    it('integration/services/lazy-loader-test.js', function () {\n      // test passed\n    });\n\n    it('integration/services/slug-generator-test.js', function () {\n      // test passed\n    });\n\n    it('integration/services/store-test.js', function () {\n      // test passed\n    });\n\n    it('test-helper.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-alert-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-app-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-navitem-url-input-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-notification-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-post-settings-menu-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-url-preview-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-user-active-test.js', function () {\n      // test passed\n    });\n\n    it('unit/components/gh-user-invited-test.js', function () {\n      // test passed\n    });\n\n    it('unit/controllers/editor-test.js', function () {\n      // test passed\n    });\n\n    it('unit/controllers/settings/design-test.js', function () {\n      // test passed\n    });\n\n    it('unit/controllers/settings/general-test.js', function () {\n      // test passed\n    });\n\n    it('unit/controllers/subscribers-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/gh-count-characters-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/gh-count-down-characters-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/gh-format-post-time-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/gh-user-can-admin-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/highlighted-text-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/is-equal-test.js', function () {\n      // test passed\n    });\n\n    it('unit/helpers/is-not-test.js', function () {\n      // test passed\n    });\n\n    it('unit/mixins/validation-engine-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/invite-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/navigation-item-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/post-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/role-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/setting-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/subscriber-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/tag-test.js', function () {\n      // test passed\n    });\n\n    it('unit/models/user-test.js', function () {\n      // test passed\n    });\n\n    it('unit/routes/subscribers-test.js', function () {\n      // test passed\n    });\n\n    it('unit/routes/subscribers/import-test.js', function () {\n      // test passed\n    });\n\n    it('unit/routes/subscribers/new-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/notification-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/post-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/role-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/setting-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/subscriber-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/tag-test.js', function () {\n      // test passed\n    });\n\n    it('unit/serializers/user-test.js', function () {\n      // test passed\n    });\n\n    it('unit/services/config-test.js', function () {\n      // test passed\n    });\n\n    it('unit/services/event-bus-test.js', function () {\n      // test passed\n    });\n\n    it('unit/services/notifications-test.js', function () {\n      // test passed\n    });\n\n    it('unit/services/ui-test.js', function () {\n      // test passed\n    });\n\n    it('unit/services/unsplash-test.js', function () {\n      // test passed\n    });\n\n    it('unit/services/upgrade-status-test.js', function () {\n      // test passed\n    });\n\n    it('unit/transforms/facebook-url-user-test.js', function () {\n      // test passed\n    });\n\n    it('unit/transforms/json-string-test.js', function () {\n      // test passed\n    });\n\n    it('unit/transforms/navigation-settings-test.js', function () {\n      // test passed\n    });\n\n    it('unit/transforms/slack-settings-test.js', function () {\n      // test passed\n    });\n\n    it('unit/transforms/twitter-url-user-test.js', function () {\n      // test passed\n    });\n\n    it('unit/transforms/unsplash-settings-test.js', function () {\n      // test passed\n    });\n\n    it('unit/utils/ghost-paths-test.js', function () {\n      // test passed\n    });\n\n    it('unit/validators/nav-item-test.js', function () {\n      // test passed\n    });\n\n    it('unit/validators/slack-integration-test.js', function () {\n      // test passed\n    });\n\n    it('unit/validators/subscriber-test.js', function () {\n      // test passed\n    });\n\n    it('unit/validators/tag-settings-test.js', function () {\n      // test passed\n    });\n  });\n});","define('ghost-admin/tests/unit/components/gh-alert-test', ['sinon', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-alert', function () {\n        (0, _emberMocha.setupComponentTest)('gh-alert', {\n            unit: true,\n            // specify the other units that are required for this test\n            needs: ['service:notifications', 'helper:inline-svg']\n        });\n\n        (0, _mocha.it)('closes notification through notifications service', function () {\n            var component = this.subject();\n            var notifications = {};\n            var notification = { message: 'Test close', type: 'success' };\n\n            notifications.closeNotification = _sinon.default.spy();\n            component.set('notifications', notifications);\n            component.set('message', notification);\n\n            this.$().find('button').click();\n\n            (0, _chai.expect)(notifications.closeNotification.calledWith(notification)).to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-app-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-app', function () {\n        (0, _emberMocha.setupComponentTest)('gh-app', {\n            unit: true\n            // specify the other units that are required for this test\n            // needs: ['component:foo', 'helper:bar']\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // creates the component instance\n            var component = this.subject();\n\n            (0, _chai.expect)(component._state).to.equal('preRender');\n\n            // renders the component on the page\n            this.render();\n            (0, _chai.expect)(component._state).to.equal('inDOM');\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-navitem-url-input-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-navitem-url-input', function () {\n        (0, _emberMocha.setupComponentTest)('gh-navitem-url-input', {\n            unit: true\n        });\n\n        (0, _mocha.it)('identifies a URL as the base URL', function () {\n            var component = this.subject({\n                url: '',\n                baseUrl: 'http://example.com/'\n            });\n\n            this.render();\n\n            Ember.run(function () {\n                component.set('value', 'http://example.com/');\n            });\n\n            (0, _chai.expect)(component.get('isBaseUrl')).to.be.ok;\n\n            Ember.run(function () {\n                component.set('value', 'http://example.com/go/');\n            });\n\n            (0, _chai.expect)(component.get('isBaseUrl')).to.not.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-notification-test', ['sinon', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-notification', function () {\n        (0, _emberMocha.setupComponentTest)('gh-notification', {\n            unit: true,\n            // specify the other units that are required for this test\n            needs: ['service:notifications', 'helper:inline-svg']\n        });\n\n        (0, _mocha.it)('closes notification through notifications service', function () {\n            var component = this.subject();\n            var notifications = {};\n            var notification = { message: 'Test close', type: 'success' };\n\n            notifications.closeNotification = _sinon.default.spy();\n            component.set('notifications', notifications);\n            component.set('message', notification);\n\n            this.$().find('button').click();\n\n            (0, _chai.expect)(notifications.closeNotification.calledWith(notification)).to.be.true;\n        });\n\n        (0, _mocha.it)('closes notification when animationend event is triggered', function (done) {\n            var component = this.subject();\n            var notifications = {};\n            var notification = { message: 'Test close', type: 'success' };\n\n            notifications.closeNotification = _sinon.default.spy();\n            component.set('notifications', notifications);\n            component.set('message', notification);\n\n            // shorten the animation delay to speed up test\n            this.$().css('animation-delay', '0.1s');\n            setTimeout(function () {\n                (0, _chai.expect)(notifications.closeNotification.calledWith(notification)).to.be.true;\n                done();\n            }, 150);\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-post-settings-menu-test', ['ghost-admin/utils/bound-one-way', 'mocha', 'ember-mocha'], function (_boundOneWay, _mocha, _emberMocha) {\n    'use strict';\n\n    function K() {\n        return this;\n    }\n\n    // TODO: convert to integration tests\n    /* eslint-disable camelcase */\n    _mocha.describe.skip('Unit: Component: post-settings-menu', function () {\n        (0, _emberMocha.setupComponentTest)('gh-post-settings-menu', {\n            needs: ['service:notifications', 'service:slug-generator', 'service:settings']\n        });\n\n        (0, _mocha.it)('slugValue is one-way bound to post.slug', function () {\n            var component = this.subject({\n                post: Ember.Object.create({\n                    slug: 'a-slug'\n                })\n            });\n\n            expect(component.get('post.slug')).to.equal('a-slug');\n            expect(component.get('slugValue')).to.equal('a-slug');\n\n            Ember.run(function () {\n                component.set('post.slug', 'changed-slug');\n\n                expect(component.get('slugValue')).to.equal('changed-slug');\n            });\n\n            Ember.run(function () {\n                component.set('slugValue', 'changed-directly');\n\n                expect(component.get('post.slug')).to.equal('changed-slug');\n                expect(component.get('slugValue')).to.equal('changed-directly');\n            });\n\n            Ember.run(function () {\n                // test that the one-way binding is still in place\n                component.set('post.slug', 'should-update');\n\n                expect(component.get('slugValue')).to.equal('should-update');\n            });\n        });\n\n        (0, _mocha.it)('metaTitleScratch is one-way bound to post.metaTitle', function () {\n            var component = this.subject({\n                post: Ember.Object.extend({\n                    metaTitle: 'a title',\n                    metaTitleScratch: (0, _boundOneWay.default)('metaTitle')\n                }).create()\n            });\n\n            expect(component.get('post.metaTitle')).to.equal('a title');\n            expect(component.get('metaTitleScratch')).to.equal('a title');\n\n            Ember.run(function () {\n                component.set('post.metaTitle', 'a different title');\n\n                expect(component.get('metaTitleScratch')).to.equal('a different title');\n            });\n\n            Ember.run(function () {\n                component.set('metaTitleScratch', 'changed directly');\n\n                expect(component.get('post.metaTitle')).to.equal('a different title');\n                expect(component.get('post.metaTitleScratch')).to.equal('changed directly');\n            });\n\n            Ember.run(function () {\n                // test that the one-way binding is still in place\n                component.set('post.metaTitle', 'should update');\n\n                expect(component.get('metaTitleScratch')).to.equal('should update');\n            });\n        });\n\n        (0, _mocha.it)('metaDescriptionScratch is one-way bound to post.metaDescription', function () {\n            var component = this.subject({\n                post: Ember.Object.extend({\n                    metaDescription: 'a description',\n                    metaDescriptionScratch: (0, _boundOneWay.default)('metaDescription')\n                }).create()\n            });\n\n            expect(component.get('post.metaDescription')).to.equal('a description');\n            expect(component.get('metaDescriptionScratch')).to.equal('a description');\n\n            Ember.run(function () {\n                component.set('post.metaDescription', 'a different description');\n\n                expect(component.get('metaDescriptionScratch')).to.equal('a different description');\n            });\n\n            Ember.run(function () {\n                component.set('metaDescriptionScratch', 'changed directly');\n\n                expect(component.get('post.metaDescription')).to.equal('a different description');\n                expect(component.get('metaDescriptionScratch')).to.equal('changed directly');\n            });\n\n            Ember.run(function () {\n                // test that the one-way binding is still in place\n                component.set('post.metaDescription', 'should update');\n\n                expect(component.get('metaDescriptionScratch')).to.equal('should update');\n            });\n        });\n\n        (0, _mocha.describe)('seoTitle', function () {\n            (0, _mocha.it)('should be the metaTitle if one exists', function () {\n                var component = this.subject({\n                    post: Ember.Object.extend({\n                        titleScratch: 'should not be used',\n                        metaTitle: 'a meta-title',\n                        metaTitleScratch: (0, _boundOneWay.default)('metaTitle')\n                    }).create()\n                });\n\n                expect(component.get('seoTitle')).to.equal('a meta-title');\n            });\n\n            (0, _mocha.it)('should default to the title if an explicit meta-title does not exist', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        titleScratch: 'should be the meta-title'\n                    })\n                });\n\n                expect(component.get('seoTitle')).to.equal('should be the meta-title');\n            });\n\n            (0, _mocha.it)('should be the metaTitle if both title and metaTitle exist', function () {\n                var component = this.subject({\n                    post: Ember.Object.extend({\n                        titleScratch: 'a title',\n                        metaTitle: 'a meta-title',\n                        metaTitleScratch: (0, _boundOneWay.default)('metaTitle')\n                    }).create()\n                });\n\n                expect(component.get('seoTitle')).to.equal('a meta-title');\n            });\n\n            (0, _mocha.it)('should revert to the title if explicit metaTitle is removed', function () {\n                var component = this.subject({\n                    post: Ember.Object.extend({\n                        titleScratch: 'a title',\n                        metaTitle: 'a meta-title',\n                        metaTitleScratch: (0, _boundOneWay.default)('metaTitle')\n                    }).create()\n                });\n\n                expect(component.get('seoTitle')).to.equal('a meta-title');\n\n                Ember.run(function () {\n                    component.set('post.metaTitle', '');\n\n                    expect(component.get('seoTitle')).to.equal('a title');\n                });\n            });\n\n            (0, _mocha.it)('should truncate to 70 characters with an appended ellipsis', function () {\n                var longTitle = new Array(100).join('a');\n                var component = this.subject({\n                    post: Ember.Object.create()\n                });\n\n                expect(longTitle.length).to.equal(99);\n\n                Ember.run(function () {\n                    var expected = longTitle.substr(0, 70) + '&hellip;';\n\n                    component.set('metaTitleScratch', longTitle);\n\n                    expect(component.get('seoTitle').toString().length).to.equal(78);\n                    expect(component.get('seoTitle').toString()).to.equal(expected);\n                });\n            });\n        });\n\n        (0, _mocha.describe)('seoDescription', function () {\n            (0, _mocha.it)('should be the metaDescription if one exists', function () {\n                var component = this.subject({\n                    post: Ember.Object.extend({\n                        metaDescription: 'a description',\n                        metaDescriptionScratch: (0, _boundOneWay.default)('metaDescription')\n                    }).create()\n                });\n\n                expect(component.get('seoDescription')).to.equal('a description');\n            });\n\n            (0, _mocha.it)('should be generated from the rendered mobiledoc if not explicitly set', function () {\n                var component = this.subject({\n                    post: Ember.Object.extend({\n                        metaDescription: null,\n                        metaDescriptionScratch: (0, _boundOneWay.default)('metaDescription'),\n                        author: Ember.RSVP.resolve(),\n\n                        init: function init() {\n                            this._super.apply(this, arguments);\n                            this.scratch = {\n                                cards: [['markdown-card', {\n                                    markdown: '# This is a <strong>test</strong> <script>foo</script>'\n                                }]]\n                            };\n                        }\n                    }).create()\n                });\n\n                expect(component.get('seoDescription')).to.equal('This is a test');\n            });\n\n            (0, _mocha.it)('should truncate to 156 characters with an appended ellipsis', function () {\n                var longDescription = new Array(200).join('a');\n                var component = this.subject({\n                    post: Ember.Object.create()\n                });\n\n                expect(longDescription.length).to.equal(199);\n\n                Ember.run(function () {\n                    var expected = longDescription.substr(0, 156) + '&hellip;';\n\n                    component.set('metaDescriptionScratch', longDescription);\n\n                    expect(component.get('seoDescription').toString().length).to.equal(164);\n                    expect(component.get('seoDescription').toString()).to.equal(expected);\n                });\n            });\n        });\n\n        (0, _mocha.describe)('seoURL', function () {\n            (0, _mocha.it)('should be the URL of the blog if no post slug exists', function () {\n                var component = this.subject({\n                    config: Ember.Object.create({ blogUrl: 'http://my-ghost-blog.com' }),\n                    post: Ember.Object.create()\n                });\n\n                expect(component.get('seoURL')).to.equal('http://my-ghost-blog.com/');\n            });\n\n            (0, _mocha.it)('should be the URL of the blog plus the post slug', function () {\n                var component = this.subject({\n                    config: Ember.Object.create({ blogUrl: 'http://my-ghost-blog.com' }),\n                    post: Ember.Object.create({ slug: 'post-slug' })\n                });\n\n                expect(component.get('seoURL')).to.equal('http://my-ghost-blog.com/post-slug/');\n            });\n\n            (0, _mocha.it)('should update when the post slug changes', function () {\n                var component = this.subject({\n                    config: Ember.Object.create({ blogUrl: 'http://my-ghost-blog.com' }),\n                    post: Ember.Object.create({ slug: 'post-slug' })\n                });\n\n                expect(component.get('seoURL')).to.equal('http://my-ghost-blog.com/post-slug/');\n\n                Ember.run(function () {\n                    component.set('post.slug', 'changed-slug');\n\n                    expect(component.get('seoURL')).to.equal('http://my-ghost-blog.com/changed-slug/');\n                });\n            });\n\n            (0, _mocha.it)('should truncate a long URL to 70 characters with an appended ellipsis', function () {\n                var blogURL = 'http://my-ghost-blog.com';\n                var longSlug = new Array(75).join('a');\n                var component = this.subject({\n                    config: Ember.Object.create({ blogUrl: blogURL }),\n                    post: Ember.Object.create({ slug: longSlug })\n                });\n                var expected = void 0;\n\n                expect(longSlug.length).to.equal(74);\n\n                expected = blogURL + '/' + longSlug + '/';\n                expected = expected.substr(0, 70) + '&hellip;';\n\n                expect(component.get('seoURL').toString().length).to.equal(78);\n                expect(component.get('seoURL').toString()).to.equal(expected);\n            });\n        });\n\n        (0, _mocha.describe)('togglePage', function () {\n            (0, _mocha.it)('should toggle the page property', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        page: false,\n                        isNew: true\n                    })\n                });\n\n                expect(component.get('post.page')).to.not.be.ok;\n\n                Ember.run(function () {\n                    component.send('togglePage');\n\n                    expect(component.get('post.page')).to.be.ok;\n                });\n            });\n\n            (0, _mocha.it)('should not save the post if it is still new', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        page: false,\n                        isNew: true,\n                        save: function save() {\n                            this.incrementProperty('saved');\n                            return Ember.RSVP.resolve();\n                        }\n                    })\n                });\n\n                Ember.run(function () {\n                    component.send('togglePage');\n\n                    expect(component.get('post.page')).to.be.ok;\n                    expect(component.get('post.saved')).to.not.be.ok;\n                });\n            });\n\n            (0, _mocha.it)('should save the post if it is not new', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        page: false,\n                        isNew: false,\n                        save: function save() {\n                            this.incrementProperty('saved');\n                            return Ember.RSVP.resolve();\n                        }\n                    })\n                });\n\n                Ember.run(function () {\n                    component.send('togglePage');\n\n                    expect(component.get('post.page')).to.be.ok;\n                    expect(component.get('post.saved')).to.equal(1);\n                });\n            });\n        });\n\n        (0, _mocha.describe)('toggleFeatured', function () {\n            (0, _mocha.it)('should toggle the featured property', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        featured: false,\n                        isNew: true\n                    })\n                });\n\n                Ember.run(function () {\n                    component.send('toggleFeatured');\n\n                    expect(component.get('post.featured')).to.be.ok;\n                });\n            });\n\n            (0, _mocha.it)('should not save the post if it is still new', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        featured: false,\n                        isNew: true,\n                        save: function save() {\n                            this.incrementProperty('saved');\n                            return Ember.RSVP.resolve();\n                        }\n                    })\n                });\n\n                Ember.run(function () {\n                    component.send('toggleFeatured');\n\n                    expect(component.get('post.featured')).to.be.ok;\n                    expect(component.get('post.saved')).to.not.be.ok;\n                });\n            });\n\n            (0, _mocha.it)('should save the post if it is not new', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        featured: false,\n                        isNew: false,\n                        save: function save() {\n                            this.incrementProperty('saved');\n                            return Ember.RSVP.resolve();\n                        }\n                    })\n                });\n\n                Ember.run(function () {\n                    component.send('toggleFeatured');\n\n                    expect(component.get('post.featured')).to.be.ok;\n                    expect(component.get('post.saved')).to.equal(1);\n                });\n            });\n        });\n\n        (0, _mocha.describe)('updateSlug', function () {\n            (0, _mocha.it)('should reset slugValue to the previous slug when the new slug is blank or unchanged', function () {\n                var component = this.subject({\n                    post: Ember.Object.create({\n                        slug: 'slug'\n                    })\n                });\n\n                Ember.run(function () {\n                    // unchanged\n                    component.set('slugValue', 'slug');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    expect(component.get('post.slug')).to.equal('slug');\n                    expect(component.get('slugValue')).to.equal('slug');\n                });\n\n                Ember.run(function () {\n                    // unchanged after trim\n                    component.set('slugValue', 'slug  ');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    expect(component.get('post.slug')).to.equal('slug');\n                    expect(component.get('slugValue')).to.equal('slug');\n                });\n\n                Ember.run(function () {\n                    // blank\n                    component.set('slugValue', '');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    expect(component.get('post.slug')).to.equal('slug');\n                    expect(component.get('slugValue')).to.equal('slug');\n                });\n            });\n\n            (0, _mocha.it)('should not set a new slug if the server-generated slug matches existing slug', function (done) {\n                var component = this.subject({\n                    slugGenerator: Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            var promise = Ember.RSVP.resolve(str.split('#')[0]);\n                            this.set('lastPromise', promise);\n                            return promise;\n                        }\n                    }),\n                    post: Ember.Object.create({\n                        slug: 'whatever'\n                    })\n                });\n\n                Ember.run(function () {\n                    component.set('slugValue', 'whatever#slug');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    Ember.RSVP.resolve(component.get('lastPromise')).then(function () {\n                        expect(component.get('post.slug')).to.equal('whatever');\n\n                        done();\n                    }).catch(done);\n                });\n            });\n\n            (0, _mocha.it)('should not set a new slug if the only change is to the appended increment value', function (done) {\n                var component = this.subject({\n                    slugGenerator: Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            var sanitizedStr = str.replace(/[^a-zA-Z]/g, '');\n                            var promise = Ember.RSVP.resolve(sanitizedStr + '-2');\n                            this.set('lastPromise', promise);\n                            return promise;\n                        }\n                    }),\n                    post: Ember.Object.create({\n                        slug: 'whatever'\n                    })\n                });\n\n                Ember.run(function () {\n                    component.set('slugValue', 'whatever!');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    Ember.RSVP.resolve(component.get('lastPromise')).then(function () {\n                        expect(component.get('post.slug')).to.equal('whatever');\n\n                        done();\n                    }).catch(done);\n                });\n            });\n\n            (0, _mocha.it)('should set the slug if the new slug is different', function (done) {\n                var component = this.subject({\n                    slugGenerator: Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            var promise = Ember.RSVP.resolve(str);\n                            this.set('lastPromise', promise);\n                            return promise;\n                        }\n                    }),\n                    post: Ember.Object.create({\n                        slug: 'whatever',\n                        save: K\n                    })\n                });\n\n                Ember.run(function () {\n                    component.set('slugValue', 'changed');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    Ember.RSVP.resolve(component.get('lastPromise')).then(function () {\n                        expect(component.get('post.slug')).to.equal('changed');\n\n                        done();\n                    }).catch(done);\n                });\n            });\n\n            (0, _mocha.it)('should save the post when the slug changes and the post is not new', function (done) {\n                var component = this.subject({\n                    slugGenerator: Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            var promise = Ember.RSVP.resolve(str);\n                            this.set('lastPromise', promise);\n                            return promise;\n                        }\n                    }),\n                    post: Ember.Object.create({\n                        slug: 'whatever',\n                        saved: 0,\n                        isNew: false,\n                        save: function save() {\n                            this.incrementProperty('saved');\n                        }\n                    })\n                });\n\n                Ember.run(function () {\n                    component.set('slugValue', 'changed');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    Ember.RSVP.resolve(component.get('lastPromise')).then(function () {\n                        expect(component.get('post.slug')).to.equal('changed');\n                        expect(component.get('post.saved')).to.equal(1);\n\n                        done();\n                    }).catch(done);\n                });\n            });\n\n            (0, _mocha.it)('should not save the post when the slug changes and the post is new', function (done) {\n                var component = this.subject({\n                    slugGenerator: Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            var promise = Ember.RSVP.resolve(str);\n                            this.set('lastPromise', promise);\n                            return promise;\n                        }\n                    }),\n                    post: Ember.Object.create({\n                        slug: 'whatever',\n                        saved: 0,\n                        isNew: true,\n                        save: function save() {\n                            this.incrementProperty('saved');\n                        }\n                    })\n                });\n\n                Ember.run(function () {\n                    component.set('slugValue', 'changed');\n                    component.send('updateSlug', component.get('slugValue'));\n\n                    Ember.RSVP.resolve(component.get('lastPromise')).then(function () {\n                        expect(component.get('post.slug')).to.equal('changed');\n                        expect(component.get('post.saved')).to.equal(0);\n\n                        done();\n                    }).catch(done);\n                });\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-url-preview-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-url-preview', function () {\n        (0, _emberMocha.setupComponentTest)('gh-url-preview', {\n            unit: true,\n            needs: ['service:config']\n        });\n\n        (0, _mocha.it)('generates the correct preview URL with a prefix', function () {\n            var component = this.subject({\n                prefix: 'tag',\n                slug: 'test-slug',\n                tagName: 'p',\n                classNames: 'test-class',\n\n                config: { blogUrl: 'http://my-ghost-blog.com' }\n            });\n\n            this.render();\n\n            expect(component.get('url')).to.equal('my-ghost-blog.com/tag/test-slug/');\n        });\n\n        (0, _mocha.it)('generates the correct preview URL without a prefix', function () {\n            var component = this.subject({\n                slug: 'test-slug',\n                tagName: 'p',\n                classNames: 'test-class',\n\n                config: { blogUrl: 'http://my-ghost-blog.com' }\n            });\n\n            this.render();\n\n            expect(component.get('url')).to.equal('my-ghost-blog.com/test-slug/');\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-user-active-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-user-active', function () {\n        (0, _emberMocha.setupComponentTest)('gh-user-active', {\n            unit: true,\n            // specify the other units that are required for this test\n            needs: ['service:ghostPaths']\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // creates the component instance\n            var component = this.subject();\n\n            (0, _chai.expect)(component._state).to.equal('preRender');\n\n            // renders the component on the page\n            this.render();\n            (0, _chai.expect)(component._state).to.equal('inDOM');\n        });\n    });\n});","define('ghost-admin/tests/unit/components/gh-user-invited-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Component: gh-user-invited', function () {\n        (0, _emberMocha.setupComponentTest)('gh-user-invited', {\n            unit: true,\n            // specify the other units that are required for this test\n            needs: ['service:notifications']\n        });\n\n        (0, _mocha.it)('renders', function () {\n            // creates the component instance\n            var component = this.subject();\n\n            (0, _chai.expect)(component._state).to.equal('preRender');\n\n            // renders the component on the page\n            this.render();\n            (0, _chai.expect)(component._state).to.equal('inDOM');\n        });\n    });\n});","define('ghost-admin/tests/unit/components/koenig-toolbar-button-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('gh-koenig: Unit: Component: koenig-toolbar-button', function () {\n        (0, _emberMocha.setupComponentTest)('koenig-toolbar-button', {\n            unit: true\n        });\n\n        (0, _mocha.it)('renders', function () {\n            var component = this.subject();\n            (0, _chai.expect)(component._state).to.equal('preRender');\n\n            // renders the component on the page\n            this.render();\n            (0, _chai.expect)(component._state).to.equal('inDOM');\n        });\n    });\n});","define('ghost-admin/tests/unit/components/koenig-toolbar-newitem-test', ['mocha', 'ghost-admin/tests/utils', 'chai', 'ember-mocha'], function (_mocha, _utils, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('gh-koenig: Unit: Component: koenig-toolbar-newitem', function () {\n        (0, _emberMocha.setupComponentTest)('koenig-toolbar-newitem', {\n            unit: true,\n            needs: ['component:koenig-toolbar-button']\n        });\n\n        (0, _mocha.it)('renders', function () {\n            var component = this.subject();\n            component.editor = _utils.editorShim;\n            (0, _chai.expect)(component._state).to.equal('preRender');\n\n            // renders the component on the page\n            this.render();\n            (0, _chai.expect)(component._state).to.equal('inDOM');\n        });\n    });\n});","define('ghost-admin/tests/unit/components/koenig-toolbar-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('gh-koenig: Unit: Component: koenig-toolbar', function () {\n        (0, _emberMocha.setupComponentTest)('koenig-toolbar', {\n            unit: true\n        });\n\n        (0, _mocha.it)('is not visible by default', function () {\n            var component = this.subject();\n            (0, _chai.expect)(component.isVisible).to.be.false;\n        });\n\n        (0, _mocha.it)('contains tools', function () {\n            var component = this.subject();\n            // the standard toolbar tools (strong, em, strikethrough, link)\n            (0, _chai.expect)(component.get('toolbar').length).to.be.greaterThan(0);\n            // extended toolbar block bases tools (h1, h2, quote);\n            (0, _chai.expect)(component.get('toolbarBlocks').length).to.be.greaterThan(0);\n        });\n\n        // it('The toolbar appears when a range is selected.', function () {\n        //     let component = this.subject();\n        // });\n\n        // it('A tool is selected when the cursor moves over text of that style.', function () {\n        //     let component = this.subject();\n        // });\n\n        // it('A tool manipulates the content.', function () {\n        //     let component = this.subject();\n        // });\n\n        // it('links stuff', function() {\n\n        // });\n    });\n});","define('ghost-admin/tests/unit/controllers/editor-test', ['ember-test-helpers/wait', 'mocha', 'chai', 'ember-mocha', 'ember-concurrency'], function (_wait, _mocha, _chai, _emberMocha, _emberConcurrency) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Controller: editor', function () {\n        (0, _emberMocha.setupTest)('controller:editor', {\n            needs: ['controller:application', 'service:feature', 'service:notifications',\n            // 'service:router',\n            'service:slugGenerator', 'service:ui']\n        });\n\n        (0, _mocha.describe)('generateSlug', function () {\n            (0, _mocha.it)('should generate a slug and set it on the post', function (done) {\n                var _this = this;\n\n                Ember.run(function () {\n                    var controller = _this.subject();\n\n                    controller.set('slugGenerator', Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            return Ember.RSVP.resolve(str + '-slug');\n                        }\n                    }));\n                    controller.set('post', Ember.Object.create({ slug: '' }));\n\n                    controller.set('post.titleScratch', 'title');\n\n                    (0, _chai.expect)(controller.get('post.slug')).to.equal('');\n\n                    Ember.run(function () {\n                        controller.get('generateSlug').perform();\n                    });\n\n                    (0, _wait.default)().then(function () {\n                        (0, _chai.expect)(controller.get('post.slug')).to.equal('title-slug');\n                        done();\n                    });\n                });\n            });\n\n            (0, _mocha.it)('should not set the destination if the title is \"(Untitled)\" and the post already has a slug', function (done) {\n                var controller = this.subject();\n\n                Ember.run(function () {\n                    controller.set('slugGenerator', Ember.Object.create({\n                        generateSlug: function generateSlug(slugType, str) {\n                            return Ember.RSVP.resolve(str + '-slug');\n                        }\n                    }));\n                    controller.set('post', Ember.Object.create({ slug: 'whatever' }));\n                });\n\n                (0, _chai.expect)(controller.get('post.slug')).to.equal('whatever');\n\n                controller.set('post.titleScratch', '(Untitled)');\n\n                Ember.run(function () {\n                    controller.get('generateSlug').perform();\n                });\n\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(controller.get('post.slug')).to.equal('whatever');\n                    done();\n                });\n            });\n        });\n\n        (0, _mocha.describe)('saveTitle', function () {\n            (0, _mocha.it)('should invoke generateSlug if the post is new and a title has not been set', function (done) {\n                var controller = this.subject();\n\n                Ember.run(function () {\n                    controller.set('generateSlug', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee() {\n                        return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                                switch (_context.prev = _context.next) {\n                                    case 0:\n                                        this.set('post.slug', 'test-slug');\n                                        _context.next = 3;\n                                        return Ember.RSVP.resolve();\n\n                                    case 3:\n                                    case 'end':\n                                        return _context.stop();\n                                }\n                            }\n                        }, _callee, this);\n                    })));\n                    controller.set('post', Ember.Object.create({ isNew: true }));\n                });\n\n                (0, _chai.expect)(controller.get('post.isNew')).to.be.true;\n                (0, _chai.expect)(controller.get('post.titleScratch')).to.not.be.ok;\n\n                controller.set('post.titleScratch', 'test');\n\n                Ember.run(function () {\n                    controller.get('saveTitle').perform();\n                });\n\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(controller.get('post.titleScratch')).to.equal('test');\n                    (0, _chai.expect)(controller.get('post.slug')).to.equal('test-slug');\n                    done();\n                });\n            });\n\n            (0, _mocha.it)('should invoke generateSlug if the post is not new and it\\'s title is \"(Untitled)\"', function (done) {\n                var controller = this.subject();\n\n                Ember.run(function () {\n                    controller.set('generateSlug', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee2() {\n                        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                    case 0:\n                                        this.set('post.slug', 'test-slug');\n                                        _context2.next = 3;\n                                        return Ember.RSVP.resolve();\n\n                                    case 3:\n                                    case 'end':\n                                        return _context2.stop();\n                                }\n                            }\n                        }, _callee2, this);\n                    })));\n                    controller.set('post', Ember.Object.create({ isNew: false, title: '(Untitled)' }));\n                });\n\n                (0, _chai.expect)(controller.get('post.isNew')).to.be.false;\n                (0, _chai.expect)(controller.get('post.titleScratch')).to.not.be.ok;\n\n                controller.set('post.titleScratch', 'New Title');\n\n                Ember.run(function () {\n                    controller.get('saveTitle').perform();\n                });\n\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(controller.get('post.titleScratch')).to.equal('New Title');\n                    (0, _chai.expect)(controller.get('post.slug')).to.equal('test-slug');\n                    done();\n                });\n            });\n\n            (0, _mocha.it)('should not invoke generateSlug if the post is new but has a title', function (done) {\n                var controller = this.subject();\n\n                Ember.run(function () {\n                    controller.set('generateSlug', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee3() {\n                        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                                switch (_context3.prev = _context3.next) {\n                                    case 0:\n                                        (0, _chai.expect)(false, 'generateSlug should not be called').to.equal(true);\n                                        _context3.next = 3;\n                                        return Ember.RSVP.resolve();\n\n                                    case 3:\n                                    case 'end':\n                                        return _context3.stop();\n                                }\n                            }\n                        }, _callee3, this);\n                    })));\n                    controller.set('post', Ember.Object.create({\n                        isNew: true,\n                        title: 'a title'\n                    }));\n                });\n\n                (0, _chai.expect)(controller.get('post.isNew')).to.be.true;\n                (0, _chai.expect)(controller.get('post.title')).to.equal('a title');\n                (0, _chai.expect)(controller.get('post.titleScratch')).to.not.be.ok;\n\n                controller.set('post.titleScratch', 'test');\n\n                Ember.run(function () {\n                    controller.get('saveTitle').perform();\n                });\n\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(controller.get('post.titleScratch')).to.equal('test');\n                    (0, _chai.expect)(controller.get('post.slug')).to.not.be.ok;\n                    done();\n                });\n            });\n\n            (0, _mocha.it)('should not invoke generateSlug if the post is not new and the title is not \"(Untitled)\"', function (done) {\n                var controller = this.subject();\n\n                Ember.run(function () {\n                    controller.set('generateSlug', (0, _emberConcurrency.task)(regeneratorRuntime.mark(function _callee4() {\n                        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                            while (1) {\n                                switch (_context4.prev = _context4.next) {\n                                    case 0:\n                                        (0, _chai.expect)(false, 'generateSlug should not be called').to.equal(true);\n                                        _context4.next = 3;\n                                        return Ember.RSVP.resolve();\n\n                                    case 3:\n                                    case 'end':\n                                        return _context4.stop();\n                                }\n                            }\n                        }, _callee4, this);\n                    })));\n                    controller.set('post', Ember.Object.create({ isNew: false }));\n                });\n\n                (0, _chai.expect)(controller.get('post.isNew')).to.be.false;\n                (0, _chai.expect)(controller.get('post.title')).to.not.be.ok;\n\n                controller.set('post.titleScratch', 'title');\n\n                Ember.run(function () {\n                    controller.get('saveTitle').perform();\n                });\n\n                (0, _wait.default)().then(function () {\n                    (0, _chai.expect)(controller.get('post.titleScratch')).to.equal('title');\n                    (0, _chai.expect)(controller.get('post.slug')).to.not.be.ok;\n                    done();\n                });\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/controllers/settings/design-test', ['ghost-admin/models/navigation-item', 'chai', 'mocha', 'ember-mocha'], function (_navigationItem, _chai, _mocha, _emberMocha) {\n    'use strict';\n\n    // const navSettingJSON = `[\n    //     {\"label\":\"Home\",\"url\":\"/\"},\n    //     {\"label\":\"JS Test\",\"url\":\"javascript:alert('hello');\"},\n    //     {\"label\":\"About\",\"url\":\"/about\"},\n    //     {\"label\":\"Sub Folder\",\"url\":\"/blah/blah\"},\n    //     {\"label\":\"Telephone\",\"url\":\"tel:01234-567890\"},\n    //     {\"label\":\"Mailto\",\"url\":\"mailto:test@example.com\"},\n    //     {\"label\":\"External\",\"url\":\"https://example.com/testing?query=test#anchor\"},\n    //     {\"label\":\"No Protocol\",\"url\":\"//example.com\"}\n    // ]`;\n\n    (0, _mocha.describe)('Unit: Controller: settings/design', function () {\n        (0, _emberMocha.setupTest)('controller:settings/design', {\n            // Specify the other units that are required for this test.\n            needs: ['model:navigation-item', 'service:ajax', 'service:config', 'service:ghostPaths', 'service:notifications', 'service:session', 'service:upgrade-status', 'service:settings']\n        });\n\n        (0, _mocha.it)('blogUrl: captures config and ensures trailing slash', function () {\n            var ctrl = this.subject();\n            ctrl.set('config.blogUrl', 'http://localhost:2368/blog');\n            (0, _chai.expect)(ctrl.get('blogUrl')).to.equal('http://localhost:2368/blog/');\n        });\n\n        (0, _mocha.it)('init: creates a new navigation item', function () {\n            var ctrl = this.subject();\n\n            Ember.run(function () {\n                (0, _chai.expect)(ctrl.get('newNavItem')).to.exist;\n                (0, _chai.expect)(ctrl.get('newNavItem.isNew')).to.be.true;\n            });\n        });\n\n        (0, _mocha.it)('blogUrl: captures config and ensures trailing slash', function () {\n            var ctrl = this.subject();\n            ctrl.set('config.blogUrl', 'http://localhost:2368/blog');\n            (0, _chai.expect)(ctrl.get('blogUrl')).to.equal('http://localhost:2368/blog/');\n        });\n\n        (0, _mocha.it)('save: validates nav items', function (done) {\n            var ctrl = this.subject();\n\n            Ember.run(function () {\n                ctrl.set('settings', Ember.Object.create({ navigation: [_navigationItem.default.create({ label: 'First', url: '/' }), _navigationItem.default.create({ label: '', url: '/second' }), _navigationItem.default.create({ label: 'Third', url: '' })] }));\n                // blank item won't get added because the last item is incomplete\n                (0, _chai.expect)(ctrl.get('settings.navigation.length')).to.equal(3);\n\n                ctrl.get('save').perform().then(function passedValidation() {\n                    (0, _chai.assert)(false, 'navigationItems weren\\'t validated on save');\n                    done();\n                }).catch(function failedValidation() {\n                    var navItems = ctrl.get('settings.navigation');\n                    (0, _chai.expect)(navItems[0].get('errors').toArray()).to.be.empty;\n                    (0, _chai.expect)(navItems[1].get('errors.firstObject.attribute')).to.equal('label');\n                    (0, _chai.expect)(navItems[2].get('errors.firstObject.attribute')).to.equal('url');\n                    done();\n                });\n            });\n        });\n\n        (0, _mocha.it)('save: ignores blank last item when saving', function (done) {\n            var ctrl = this.subject();\n\n            Ember.run(function () {\n                ctrl.set('settings', Ember.Object.create({ navigation: [_navigationItem.default.create({ label: 'First', url: '/' }), _navigationItem.default.create({ label: '', url: '' })] }));\n\n                (0, _chai.expect)(ctrl.get('settings.navigation.length')).to.equal(2);\n\n                ctrl.get('save').perform().then(function passedValidation() {\n                    (0, _chai.assert)(false, 'navigationItems weren\\'t validated on save');\n                    done();\n                }).catch(function failedValidation() {\n                    var navItems = ctrl.get('settings.navigation');\n                    (0, _chai.expect)(navItems[0].get('errors').toArray()).to.be.empty;\n                    done();\n                });\n            });\n        });\n\n        (0, _mocha.it)('action - addNavItem: adds item to navigationItems', function () {\n            var ctrl = this.subject();\n\n            Ember.run(function () {\n                ctrl.set('settings', Ember.Object.create({ navigation: [_navigationItem.default.create({ label: 'First', url: '/first', last: true })] }));\n            });\n\n            (0, _chai.expect)(ctrl.get('settings.navigation.length')).to.equal(1);\n\n            ctrl.set('newNavItem.label', 'New');\n            ctrl.set('newNavItem.url', '/new');\n\n            Ember.run(function () {\n                ctrl.send('addNavItem');\n            });\n\n            (0, _chai.expect)(ctrl.get('settings.navigation.length')).to.equal(2);\n            (0, _chai.expect)(ctrl.get('settings.navigation.lastObject.label')).to.equal('New');\n            (0, _chai.expect)(ctrl.get('settings.navigation.lastObject.url')).to.equal('/new');\n            (0, _chai.expect)(ctrl.get('settings.navigation.lastObject.isNew')).to.be.false;\n            (0, _chai.expect)(ctrl.get('newNavItem.label')).to.be.blank;\n            (0, _chai.expect)(ctrl.get('newNavItem.url')).to.be.blank;\n            (0, _chai.expect)(ctrl.get('newNavItem.isNew')).to.be.true;\n        });\n\n        (0, _mocha.it)('action - addNavItem: doesn\\'t insert new item if last object is incomplete', function () {\n            var ctrl = this.subject();\n\n            Ember.run(function () {\n                ctrl.set('settings', Ember.Object.create({ navigation: [_navigationItem.default.create({ label: '', url: '', last: true })] }));\n                (0, _chai.expect)(ctrl.get('settings.navigation.length')).to.equal(1);\n                ctrl.send('addNavItem');\n                (0, _chai.expect)(ctrl.get('settings.navigation.length')).to.equal(1);\n            });\n        });\n\n        (0, _mocha.it)('action - deleteNavItem: removes item from navigationItems', function () {\n            var ctrl = this.subject();\n            var navItems = [_navigationItem.default.create({ label: 'First', url: '/first' }), _navigationItem.default.create({ label: 'Second', url: '/second', last: true })];\n\n            Ember.run(function () {\n                ctrl.set('settings', Ember.Object.create({ navigation: navItems }));\n                (0, _chai.expect)(ctrl.get('settings.navigation').mapBy('label')).to.deep.equal(['First', 'Second']);\n                ctrl.send('deleteNavItem', ctrl.get('settings.navigation.firstObject'));\n                (0, _chai.expect)(ctrl.get('settings.navigation').mapBy('label')).to.deep.equal(['Second']);\n            });\n        });\n\n        (0, _mocha.it)('action - updateUrl: updates URL on navigationItem', function () {\n            var ctrl = this.subject();\n            var navItems = [_navigationItem.default.create({ label: 'First', url: '/first' }), _navigationItem.default.create({ label: 'Second', url: '/second', last: true })];\n\n            Ember.run(function () {\n                ctrl.set('settings', Ember.Object.create({ navigation: navItems }));\n                (0, _chai.expect)(ctrl.get('settings.navigation').mapBy('url')).to.deep.equal(['/first', '/second']);\n                ctrl.send('updateUrl', '/new', ctrl.get('settings.navigation.firstObject'));\n                (0, _chai.expect)(ctrl.get('settings.navigation').mapBy('url')).to.deep.equal(['/new', '/second']);\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/controllers/settings/general-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Controller: settings/general', function () {\n        (0, _emberMocha.setupTest)('controller:settings/general', {\n            needs: ['service:config', 'service:ghostPaths', 'service:notifications', 'service:session', 'service:settings']\n        });\n\n        (0, _mocha.it)('isDatedPermalinks should be correct', function () {\n            var controller = this.subject({\n                settings: Ember.Object.create({\n                    permalinks: '/:year/:month/:day/:slug/'\n                })\n            });\n\n            expect(controller.get('isDatedPermalinks')).to.be.ok;\n\n            Ember.run(function () {\n                controller.set('settings.permalinks', '/:slug/');\n\n                expect(controller.get('isDatedPermalinks')).to.not.be.ok;\n            });\n        });\n\n        (0, _mocha.it)('setting isDatedPermalinks should switch between dated and slug', function () {\n            var controller = this.subject({\n                settings: Ember.Object.create({\n                    permalinks: '/:year/:month/:day/:slug/'\n                })\n            });\n\n            Ember.run(function () {\n                controller.set('isDatedPermalinks', false);\n\n                expect(controller.get('isDatedPermalinks')).to.not.be.ok;\n                expect(controller.get('settings.permalinks')).to.equal('/:slug/');\n            });\n\n            Ember.run(function () {\n                controller.set('isDatedPermalinks', true);\n\n                expect(controller.get('isDatedPermalinks')).to.be.ok;\n                expect(controller.get('settings.permalinks')).to.equal('/:year/:month/:day/:slug/');\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/controllers/subscribers-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Controller: subscribers', function () {\n        (0, _emberMocha.setupTest)('controller:subscribers', {\n            needs: ['service:notifications', 'service:session']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('exists', function () {\n            var controller = this.subject();\n            (0, _chai.expect)(controller).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/gh-count-characters-test', ['ghost-admin/helpers/gh-count-characters', 'mocha', 'chai'], function (_ghCountCharacters, _mocha, _chai) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Helper: gh-count-characters', function () {\n        var defaultStyle = 'color: rgb(115, 138, 148);';\n        var errorStyle = 'color: rgb(240, 82, 48);';\n\n        (0, _mocha.it)('counts remaining chars', function () {\n            var result = (0, _ghCountCharacters.countCharacters)(['test']);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + defaultStyle + '\">196</span>');\n        });\n\n        (0, _mocha.it)('warns when nearing limit', function () {\n            var result = (0, _ghCountCharacters.countCharacters)([Array(195 + 1).join('x')]);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + errorStyle + '\">5</span>');\n        });\n\n        (0, _mocha.it)('indicates too many chars', function () {\n            var result = (0, _ghCountCharacters.countCharacters)([Array(205 + 1).join('x')]);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + errorStyle + '\">-5</span>');\n        });\n\n        (0, _mocha.it)('counts multibyte correctly', function () {\n            var result = (0, _ghCountCharacters.countCharacters)(['💩']);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + defaultStyle + '\">199</span>');\n\n            // emoji + modifier is still two chars\n            result = (0, _ghCountCharacters.countCharacters)(['💃🏻']);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + defaultStyle + '\">198</span>');\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/gh-count-down-characters-test', ['ghost-admin/helpers/gh-count-down-characters', 'mocha', 'chai'], function (_ghCountDownCharacters, _mocha, _chai) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Helper: gh-count-down-characters', function () {\n        var validStyle = 'color: rgb(159, 187, 88);';\n        var errorStyle = 'color: rgb(226, 84, 64);';\n\n        (0, _mocha.it)('counts chars', function () {\n            var result = (0, _ghCountDownCharacters.countDownCharacters)(['test', 200]);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + validStyle + '\">4</span>');\n        });\n\n        (0, _mocha.it)('warns with too many chars', function () {\n            var result = (0, _ghCountDownCharacters.countDownCharacters)([Array(205 + 1).join('x'), 200]);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + errorStyle + '\">205</span>');\n        });\n\n        (0, _mocha.it)('counts multibyte correctly', function () {\n            var result = (0, _ghCountDownCharacters.countDownCharacters)(['💩', 200]);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + validStyle + '\">1</span>');\n\n            // emoji + modifier is still two chars\n            result = (0, _ghCountDownCharacters.countDownCharacters)(['💃🏻', 200]);\n            (0, _chai.expect)(result.string).to.equal('<span class=\"word-count\" style=\"' + validStyle + '\">2</span>');\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/gh-format-post-time-test', ['moment', 'sinon', 'mocha', 'chai', 'ember-mocha'], function (_moment, _sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    // because why not?\n    var timezoneForTest = 'Iceland';\n\n    (0, _mocha.describe)('Unit: Helper: gh-format-post-time', function () {\n        (0, _emberMocha.setupTest)('helper:gh-format-post-time', {\n            unit: true,\n            needs: ['service:settings']\n        });\n\n        var sandbox = _sinon.default.sandbox.create();\n\n        afterEach(function () {\n            sandbox.restore();\n        });\n\n        function runFormatCheck(helper, date1, utc, options) {\n            helper.set('settings', { activeTimezone: timezoneForTest });\n            var mockDate = (0, _moment.default)(date1);\n            // Compute this before we override utc\n            var expectedTime = _moment.default.tz(mockDate, timezoneForTest).format('HH:mm');\n            var utcStub = sandbox.stub(_moment.default, 'utc');\n            utcStub.returns((0, _moment.default)(utc));\n            utcStub.onFirstCall().returns(mockDate);\n\n            var result = helper.compute([mockDate], options);\n            return { expectedTime: expectedTime, result: result };\n        }\n\n        (0, _mocha.it)('returns basic time difference if post is draft', function () {\n            var helper = this.subject();\n            var mockDate = _moment.default.utc().subtract(1, 'hour');\n\n            var result = helper.compute([mockDate], { draft: true });\n            (0, _chai.expect)(result).to.equal('an hour ago');\n        });\n\n        (0, _mocha.it)('returns difference if post was published less than 15 minutes ago', function () {\n            var helper = this.subject();\n            var mockDate = _moment.default.utc().subtract(13, 'minutes');\n\n            var result = helper.compute([mockDate], { published: true });\n            (0, _chai.expect)(result).to.equal('13 minutes ago');\n        });\n\n        (0, _mocha.it)('returns difference if post is scheduled for less than 15 minutes from now', function () {\n            var helper = this.subject();\n            var mockDate = _moment.default.utc().add(13, 'minutes');\n\n            var result = helper.compute([mockDate], { scheduled: true });\n            (0, _chai.expect)(result).to.equal('in 13 minutes');\n        });\n\n        (0, _mocha.it)('returns correct format if post was published on the same day', function () {\n            var _runFormatCheck = runFormatCheck(this.subject(), '2017-09-06T16:00:00Z', '2017-09-06T18:00:00Z', { published: true }),\n                expectedTime = _runFormatCheck.expectedTime,\n                result = _runFormatCheck.result;\n\n            (0, _chai.expect)(result).to.equal(expectedTime + ' Today');\n        });\n\n        (0, _mocha.it)('returns correct format if post is scheduled for the same day', function () {\n            var _runFormatCheck2 = runFormatCheck(this.subject(), '2017-09-06T18:00:00Z', '2017-09-06T16:00:00Z', { scheduled: true }),\n                expectedTime = _runFormatCheck2.expectedTime,\n                result = _runFormatCheck2.result;\n\n            (0, _chai.expect)(result).to.equal('at ' + expectedTime + ' Today');\n        });\n\n        (0, _mocha.it)('returns correct format if post was published yesterday', function () {\n            var _runFormatCheck3 = runFormatCheck(this.subject(), '2017-09-05T16:00:00Z', '2017-09-06T18:00:00Z', { published: true }),\n                expectedTime = _runFormatCheck3.expectedTime,\n                result = _runFormatCheck3.result;\n\n            (0, _chai.expect)(result).to.equal(expectedTime + ' Yesterday');\n        });\n\n        (0, _mocha.it)('returns correct format if post is scheduled for tomorrow', function () {\n            var _runFormatCheck4 = runFormatCheck(this.subject(), '2017-09-07T18:00:00Z', '2017-09-06T16:00:00Z', { scheduled: true }),\n                expectedTime = _runFormatCheck4.expectedTime,\n                result = _runFormatCheck4.result;\n\n            (0, _chai.expect)(result).to.equal('at ' + expectedTime + ' Tomorrow');\n        });\n\n        (0, _mocha.it)('returns correct format if post was published prior to yesterday', function () {\n            var _runFormatCheck5 = runFormatCheck(this.subject(), '2017-09-02T16:00:00Z', '2017-09-06T18:00:00Z', { published: true }),\n                result = _runFormatCheck5.result;\n\n            (0, _chai.expect)(result).to.equal('02 Sep 2017');\n        });\n\n        (0, _mocha.it)('returns correct format if post is scheduled for later than tomorrow', function () {\n            var _runFormatCheck6 = runFormatCheck(this.subject(), '2017-09-10T18:00:00Z', '2017-09-06T16:00:00Z', { scheduled: true }),\n                expectedTime = _runFormatCheck6.expectedTime,\n                result = _runFormatCheck6.result;\n\n            (0, _chai.expect)(result).to.equal('at ' + expectedTime + ' on 10 Sep 2017');\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/gh-user-can-admin-test', ['ghost-admin/helpers/gh-user-can-admin', 'mocha'], function (_ghUserCanAdmin, _mocha) {\n    'use strict';\n\n    describe('Unit: Helper: gh-user-can-admin', function () {\n        // Mock up roles and test for truthy\n        describe('Owner role', function () {\n            var user = {\n                get: function get(role) {\n                    if (role === 'isOwner') {\n                        return true;\n                    } else if (role === 'isAdmin') {\n                        return false;\n                    }\n                }\n            };\n\n            (0, _mocha.it)(' - can be Admin', function () {\n                var result = (0, _ghUserCanAdmin.ghUserCanAdmin)([user]);\n                expect(result).to.equal(true);\n            });\n        });\n\n        describe('Administrator role', function () {\n            var user = {\n                get: function get(role) {\n                    if (role === 'isOwner') {\n                        return false;\n                    } else if (role === 'isAdmin') {\n                        return true;\n                    }\n                }\n            };\n\n            (0, _mocha.it)(' - can be Admin', function () {\n                var result = (0, _ghUserCanAdmin.ghUserCanAdmin)([user]);\n                expect(result).to.equal(true);\n            });\n        });\n\n        describe('Editor and Author roles', function () {\n            var user = {\n                get: function get(role) {\n                    if (role === 'isOwner') {\n                        return false;\n                    } else if (role === 'isAdmin') {\n                        return false;\n                    }\n                }\n            };\n\n            (0, _mocha.it)(' - cannot be Admin', function () {\n                var result = (0, _ghUserCanAdmin.ghUserCanAdmin)([user]);\n                expect(result).to.equal(false);\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/highlighted-text-test', ['mocha', 'chai', 'ghost-admin/helpers/highlighted-text'], function (_mocha, _chai, _highlightedText) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Helper: highlighted-text', function () {\n        (0, _mocha.it)('works', function () {\n            var result = (0, _highlightedText.highlightedText)(['Test', 'e']);\n            (0, _chai.expect)(result).to.be.an('object');\n            (0, _chai.expect)(result.string).to.equal('T<span class=\"highlight\">e</span>st');\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/is-equal-test', ['mocha', 'chai', 'ghost-admin/helpers/is-equal'], function (_mocha, _chai, _isEqual) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Helper: is-equal', function () {\n        // Replace this with your real tests.\n        (0, _mocha.it)('works', function () {\n            var result = (0, _isEqual.isEqual)([42, 42]);\n\n            (0, _chai.expect)(result).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/helpers/is-not-test', ['mocha', 'chai', 'ghost-admin/helpers/is-not'], function (_mocha, _chai, _isNot) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Helper: is-not', function () {\n        // Replace this with your real tests.\n        (0, _mocha.it)('works', function () {\n            var result = (0, _isNot.isNot)(false);\n\n            (0, _chai.expect)(result).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/mixins/validation-engine-test', ['mocha'], function (_mocha) {\n    'use strict';\n\n    // import EmberObject from 'ember-object';\n    // import ValidationEngineMixin from 'ghost-admin/mixins/validation-engine';\n\n    (0, _mocha.describe)('ValidationEngineMixin', function () {\n        // Replace this with your real tests.\n        // it('works', function () {\n        //     var ValidationEngineObject = EmberObject.extend(ValidationEngineMixin);\n        //     var subject = ValidationEngineObject.create();\n        //     expect(subject).to.be.ok;\n        // });\n\n        (0, _mocha.describe)('#validate', function () {\n            (0, _mocha.it)('loads the correct validator');\n            (0, _mocha.it)('rejects if the validator doesn\\'t exist');\n            (0, _mocha.it)('resolves with valid object');\n            (0, _mocha.it)('rejects with invalid object');\n            (0, _mocha.it)('clears all existing errors');\n\n            (0, _mocha.describe)('with a specified property', function () {\n                (0, _mocha.it)('resolves with valid property');\n                (0, _mocha.it)('rejects with invalid property');\n                (0, _mocha.it)('adds property to hasValidated array');\n                (0, _mocha.it)('clears existing error on specified property');\n            });\n\n            (0, _mocha.it)('handles a passed in model');\n            (0, _mocha.it)('uses this.model if available');\n        });\n\n        (0, _mocha.describe)('#save', function () {\n            (0, _mocha.it)('calls validate');\n            (0, _mocha.it)('rejects with validation errors');\n            (0, _mocha.it)('calls object\\'s #save if validation passes');\n            (0, _mocha.it)('skips validation if it\\'s a deletion');\n        });\n    }); // import {expect} from 'chai';\n});","define('ghost-admin/tests/unit/models/invite-test', ['pretender', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    (0, _mocha.describe)('Unit: Model: invite', function () {\n        (0, _emberMocha.setupModelTest)('invite', {\n            needs: ['model:role', 'serializer:application', 'serializer:invite', 'transform:moment-utc', 'service:ghost-paths', 'service:ajax', 'service:session', 'service:feature', 'service:tour']\n        });\n\n        (0, _mocha.describe)('with network', function () {\n            var server = void 0;\n\n            beforeEach(function () {\n                server = new _pretender.default();\n            });\n\n            afterEach(function () {\n                server.shutdown();\n            });\n\n            (0, _mocha.it)('resend hits correct endpoint', function () {\n                var _this = this;\n\n                var model = this.subject();\n                var role = void 0;\n\n                server.post('/ghost/api/v0.1/invites/', function () {\n                    return [200, {}, '{}'];\n                });\n\n                Ember.run(function () {\n                    role = _this.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Editor' } } });\n                    model.set('email', 'resend-test@example.com');\n                    model.set('role', role);\n                    model.resend();\n                });\n\n                (0, _chai.expect)(server.handledRequests.length, 'number of requests').to.equal(1);\n\n                var _server$handledReques = _slicedToArray(server.handledRequests, 1),\n                    lastRequest = _server$handledReques[0];\n\n                var requestBody = JSON.parse(lastRequest.requestBody);\n\n                var _requestBody$invites = _slicedToArray(requestBody.invites, 1),\n                    invite = _requestBody$invites[0];\n\n                (0, _chai.expect)(requestBody.invites.length, 'number of invites in request body').to.equal(1);\n\n                (0, _chai.expect)(invite.email).to.equal('resend-test@example.com');\n                // eslint-disable-next-line camelcase\n                (0, _chai.expect)(invite.role_id, 'role ID').to.equal('1');\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/models/navigation-item-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: navigation-item', function () {\n        (0, _emberMocha.setupTest)('model:navigation-item', {\n            // Specify the other units that are required for this test.\n            needs: []\n        });\n\n        (0, _mocha.it)('isComplete is true when label and url are filled', function () {\n            var model = this.subject();\n\n            model.set('label', 'test');\n            model.set('url', 'test');\n\n            (0, _chai.expect)(model.get('isComplete')).to.be.true;\n        });\n\n        (0, _mocha.it)('isComplete is false when label is blank', function () {\n            var model = this.subject();\n\n            model.set('label', '');\n            model.set('url', 'test');\n\n            (0, _chai.expect)(model.get('isComplete')).to.be.false;\n        });\n\n        (0, _mocha.it)('isComplete is false when url is blank', function () {\n            var model = this.subject();\n\n            model.set('label', 'test');\n            model.set('url', '');\n\n            (0, _chai.expect)(model.get('isComplete')).to.be.false;\n        });\n\n        (0, _mocha.it)('isBlank is true when label and url are blank', function () {\n            var model = this.subject();\n\n            model.set('label', '');\n            model.set('url', '');\n\n            (0, _chai.expect)(model.get('isBlank')).to.be.true;\n        });\n\n        (0, _mocha.it)('isBlank is false when label is present', function () {\n            var model = this.subject();\n\n            model.set('label', 'test');\n            model.set('url', '');\n\n            (0, _chai.expect)(model.get('isBlank')).to.be.false;\n        });\n\n        (0, _mocha.it)('isBlank is false when url is present', function () {\n            var model = this.subject();\n\n            model.set('label', '');\n            model.set('url', 'test');\n\n            (0, _chai.expect)(model.get('isBlank')).to.be.false;\n        });\n    });\n});","define('ghost-admin/tests/unit/models/post-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: post', function () {\n        (0, _emberMocha.setupModelTest)('post', {\n            needs: ['model:user', 'model:tag', 'model:role', 'service:ajax', 'service:clock', 'service:config', 'service:feature', 'service:ghostPaths', 'service:lazyLoader', 'service:notifications', 'service:session', 'service:settings']\n        });\n\n        (0, _mocha.it)('has a validation type of \"post\"', function () {\n            var model = this.subject();\n\n            expect(model.validationType).to.equal('post');\n        });\n\n        (0, _mocha.it)('isPublished, isDraft and isScheduled are correct', function () {\n            var model = this.subject({\n                status: 'published'\n            });\n\n            expect(model.get('isPublished')).to.be.ok;\n            expect(model.get('isDraft')).to.not.be.ok;\n            expect(model.get('isScheduled')).to.not.be.ok;\n\n            Ember.run(function () {\n                model.set('status', 'draft');\n\n                expect(model.get('isPublished')).to.not.be.ok;\n                expect(model.get('isDraft')).to.be.ok;\n                expect(model.get('isScheduled')).to.not.be.ok;\n            });\n\n            Ember.run(function () {\n                model.set('status', 'scheduled');\n\n                expect(model.get('isScheduled')).to.be.ok;\n                expect(model.get('isPublished')).to.not.be.ok;\n                expect(model.get('isDraft')).to.not.be.ok;\n            });\n        });\n\n        (0, _mocha.it)('isAuthoredByUser is correct', function () {\n            var model = this.subject({\n                authorId: 'abcd1234'\n            });\n            var user = Ember.Object.create({ id: 'abcd1234' });\n\n            expect(model.isAuthoredByUser(user)).to.be.ok;\n\n            Ember.run(function () {\n                model.set('authorId', 'wxyz9876');\n\n                expect(model.isAuthoredByUser(user)).to.not.be.ok;\n            });\n        });\n\n        (0, _mocha.it)('updateTags removes and deletes old tags', function () {\n            var model = this.subject();\n\n            Ember.run(this, function () {\n                var modelTags = model.get('tags');\n                var tag1 = this.store().createRecord('tag', { id: '1' });\n                var tag2 = this.store().createRecord('tag', { id: '2' });\n                var tag3 = this.store().createRecord('tag');\n\n                // During testing a record created without an explicit id will get\n                // an id of 'fixture-n' instead of null\n                tag3.set('id', null);\n\n                modelTags.pushObject(tag1);\n                modelTags.pushObject(tag2);\n                modelTags.pushObject(tag3);\n\n                expect(model.get('tags.length')).to.equal(3);\n\n                model.updateTags();\n\n                expect(model.get('tags.length')).to.equal(2);\n                expect(model.get('tags.firstObject.id')).to.equal('1');\n                expect(model.get('tags').objectAt(1).get('id')).to.equal('2');\n                expect(tag1.get('isDeleted')).to.not.be.ok;\n                expect(tag2.get('isDeleted')).to.not.be.ok;\n                expect(tag3.get('isDeleted')).to.be.ok;\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/models/role-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: role', function () {\n        (0, _emberMocha.setupModelTest)('role', {\n            needs: ['service:ajax']\n        });\n\n        (0, _mocha.it)('provides a lowercase version of the name', function () {\n            var model = this.subject({\n                name: 'Author'\n            });\n\n            expect(model.get('name')).to.equal('Author');\n            expect(model.get('lowerCaseName')).to.equal('author');\n\n            Ember.run(function () {\n                model.set('name', 'Editor');\n\n                expect(model.get('name')).to.equal('Editor');\n                expect(model.get('lowerCaseName')).to.equal('editor');\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/models/setting-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: setting', function () {\n        (0, _emberMocha.setupModelTest)('setting');\n        (0, _mocha.it)('has a validation type of \"setting\"', function () {\n            var model = this.subject();\n\n            expect(model.get('validationType')).to.equal('setting');\n        });\n    });\n});","define('ghost-admin/tests/unit/models/subscriber-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: subscriber', function () {\n        (0, _emberMocha.setupModelTest)('subscriber', {\n            // Specify the other units that are required for this test.\n            needs: ['model:post', 'service:session']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('exists', function () {\n            var model = this.subject();\n            // var store = this.store();\n            (0, _chai.expect)(model).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/models/tag-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: tag', function () {\n        (0, _emberMocha.setupModelTest)('tag', {\n            needs: ['service:feature']\n        });\n\n        (0, _mocha.it)('has a validation type of \"tag\"', function () {\n            var model = this.subject();\n\n            expect(model.get('validationType')).to.equal('tag');\n        });\n    });\n});","define('ghost-admin/tests/unit/models/user-test', ['mocha', 'ember-mocha'], function (_mocha, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Model: user', function () {\n        (0, _emberMocha.setupModelTest)('user', {\n            needs: ['model:role', 'serializer:application', 'serializer:user', 'service:ajax', 'service:config', 'service:ghostPaths', 'service:notifications', 'service:session']\n        });\n\n        (0, _mocha.it)('has a validation type of \"user\"', function () {\n            var model = this.subject();\n\n            expect(model.get('validationType')).to.equal('user');\n        });\n\n        (0, _mocha.it)('isActive/isSuspended properties are correct', function () {\n            var model = this.subject({\n                status: 'active'\n            });\n\n            expect(model.get('isActive')).to.be.ok;\n            expect(model.get('isSuspended')).to.not.be.ok;\n\n            ['warn-1', 'warn-2', 'warn-3', 'warn-4', 'locked'].forEach(function (status) {\n                Ember.run(function () {\n                    model.set('status', status);\n                });\n                expect(model.get('isActive')).to.be.ok;\n                expect(model.get('isSuspended')).to.not.be.ok;\n            });\n\n            Ember.run(function () {\n                model.set('status', 'inactive');\n            });\n            expect(model.get('isSuspended')).to.be.ok;\n            expect(model.get('isActive')).to.not.be.ok;\n        });\n\n        (0, _mocha.it)('role property is correct', function () {\n            var _this = this;\n\n            var model = this.subject();\n\n            Ember.run(function () {\n                var role = _this.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Author' } } });\n                model.get('roles').pushObject(role);\n            });\n            expect(model.get('role.name')).to.equal('Author');\n\n            Ember.run(function () {\n                var role = _this.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Editor' } } });\n                model.set('role', role);\n            });\n            expect(model.get('role.name')).to.equal('Editor');\n        });\n\n        (0, _mocha.it)('isAuthor property is correct', function () {\n            var _this2 = this;\n\n            var model = this.subject();\n\n            Ember.run(function () {\n                var role = _this2.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Author' } } });\n                model.set('role', role);\n            });\n            expect(model.get('isAuthor')).to.be.ok;\n            expect(model.get('isEditor')).to.not.be.ok;\n            expect(model.get('isAdmin')).to.not.be.ok;\n            expect(model.get('isOwner')).to.not.be.ok;\n        });\n\n        (0, _mocha.it)('isEditor property is correct', function () {\n            var _this3 = this;\n\n            var model = this.subject();\n\n            Ember.run(function () {\n                var role = _this3.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Editor' } } });\n                model.set('role', role);\n            });\n            expect(model.get('isEditor')).to.be.ok;\n            expect(model.get('isAuthor')).to.not.be.ok;\n            expect(model.get('isAdmin')).to.not.be.ok;\n            expect(model.get('isOwner')).to.not.be.ok;\n        });\n\n        (0, _mocha.it)('isAdmin property is correct', function () {\n            var _this4 = this;\n\n            var model = this.subject();\n\n            Ember.run(function () {\n                var role = _this4.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Administrator' } } });\n                model.set('role', role);\n            });\n            expect(model.get('isAdmin')).to.be.ok;\n            expect(model.get('isAuthor')).to.not.be.ok;\n            expect(model.get('isEditor')).to.not.be.ok;\n            expect(model.get('isOwner')).to.not.be.ok;\n        });\n\n        (0, _mocha.it)('isOwner property is correct', function () {\n            var _this5 = this;\n\n            var model = this.subject();\n\n            Ember.run(function () {\n                var role = _this5.store().push({ data: { id: 1, type: 'role', attributes: { name: 'Owner' } } });\n                model.set('role', role);\n            });\n            expect(model.get('isOwner')).to.be.ok;\n            expect(model.get('isAuthor')).to.not.be.ok;\n            expect(model.get('isAdmin')).to.not.be.ok;\n            expect(model.get('isEditor')).to.not.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/routes/subscribers-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Route: subscribers', function () {\n        (0, _emberMocha.setupTest)('route:subscribers', {\n            needs: ['service:feature', 'service:notifications', 'service:session']\n        });\n\n        (0, _mocha.it)('exists', function () {\n            var route = this.subject();\n            (0, _chai.expect)(route).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/routes/subscribers/import-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Route: subscribers/import', function () {\n        (0, _emberMocha.setupTest)('route:subscribers/import', {\n            // Specify the other units that are required for this test.\n            needs: ['service:notifications']\n        });\n\n        (0, _mocha.it)('exists', function () {\n            var route = this.subject();\n            (0, _chai.expect)(route).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/routes/subscribers/new-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Route: subscribers/new', function () {\n        (0, _emberMocha.setupTest)('route:subscribers/new', {\n            needs: ['service:notifications']\n        });\n\n        (0, _mocha.it)('exists', function () {\n            var route = this.subject();\n            (0, _chai.expect)(route).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/notification-test', ['pretender', 'mocha', 'chai', 'ember-mocha'], function (_pretender, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Serializer: notification', function () {\n        (0, _emberMocha.setupModelTest)('notification', {\n            // Specify the other units that are required for this test.\n            needs: ['serializer:notification']\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('converts location->key when deserializing', function () {\n            server.get('/notifications', function () {\n                var response = {\n                    notifications: [{\n                        id: 1,\n                        dismissible: false,\n                        status: 'alert',\n                        type: 'info',\n                        location: 'test.foo',\n                        message: 'This is a test'\n                    }]\n                };\n\n                return [200, { 'Content-Type': 'application/json' }, JSON.stringify(response)];\n            });\n\n            return this.store().findAll('notification').then(function (notifications) {\n                (0, _chai.expect)(notifications.get('length')).to.equal(1);\n                (0, _chai.expect)(notifications.get('firstObject.key')).to.equal('test.foo');\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/post-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Serializer: post', function () {\n        (0, _emberMocha.setupModelTest)('post', {\n            // Specify the other units that are required for this test.\n            needs: ['transform:moment-utc', 'transform:json-string', 'model:user', 'model:tag', 'service:ajax', 'service:clock', 'service:config', 'service:feature', 'service:ghostPaths', 'service:lazyLoader', 'service:notifications', 'service:session', 'service:settings']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('serializes records', function () {\n            var record = this.subject();\n\n            var serializedRecord = record.serialize();\n\n            (0, _chai.expect)(serializedRecord).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/role-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit:Serializer: role', function () {\n        (0, _emberMocha.setupModelTest)('role', {\n            // Specify the other units that are required for this test.\n            needs: ['transform:moment-utc']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('serializes records', function () {\n            var record = this.subject();\n\n            var serializedRecord = record.serialize();\n\n            (0, _chai.expect)(serializedRecord).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/setting-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit:Serializer: setting', function () {\n        (0, _emberMocha.setupModelTest)('setting', {\n            // Specify the other units that are required for this test.\n            needs: ['transform:moment-utc', 'transform:facebook-url-user', 'transform:twitter-url-user', 'transform:navigation-settings', 'transform:slack-settings', 'transform:unsplash-settings']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('serializes records', function () {\n            var record = this.subject();\n\n            var serializedRecord = record.serialize();\n\n            (0, _chai.expect)(serializedRecord).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/subscriber-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit:Serializer: subscriber', function () {\n        (0, _emberMocha.setupModelTest)('subscriber', {\n            // Specify the other units that are required for this test.\n            needs: ['model:post', 'transform:moment-utc']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('serializes records', function () {\n            var record = this.subject();\n\n            var serializedRecord = record.serialize();\n\n            (0, _chai.expect)(serializedRecord).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/tag-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Serializer: tag', function () {\n        (0, _emberMocha.setupModelTest)('tag', {\n            // Specify the other units that are required for this test.\n            needs: ['service:feature', 'transform:moment-utc', 'transform:raw']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('serializes records', function () {\n            var record = this.subject();\n\n            var serializedRecord = record.serialize();\n\n            (0, _chai.expect)(serializedRecord).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/serializers/user-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Serializer: user', function () {\n        (0, _emberMocha.setupModelTest)('user', {\n            // Specify the other units that are required for this test.\n            needs: ['model:role', 'service:ajax', 'service:config', 'service:ghostPaths', 'service:notifications', 'service:session', 'transform:facebook-url-user', 'transform:json-string', 'transform:moment-utc', 'transform:raw', 'transform:twitter-url-user']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('serializes records', function () {\n            var record = this.subject();\n\n            var serializedRecord = record.serialize();\n\n            (0, _chai.expect)(serializedRecord).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/services/config-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Service: config', function () {\n        (0, _emberMocha.setupTest)('service:config', {\n            needs: ['service:ajax', 'service:ghostPaths']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('exists', function () {\n            var service = this.subject();\n            (0, _chai.expect)(service).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/services/event-bus-test', ['sinon', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Service: event-bus', function () {\n        (0, _emberMocha.setupTest)('service:event-bus', {});\n        (0, _mocha.it)('works', function () {\n            var service = this.subject();\n            var eventHandler = _sinon.default.spy();\n\n            service.subscribe('test-event', eventHandler);\n\n            service.publish('test-event', 'test');\n\n            service.unsubscribe('test-event', eventHandler);\n\n            service.publish('test-event', 'test two');\n\n            (0, _chai.expect)(eventHandler.calledOnce, 'event handler only triggered once').to.be.true;\n\n            (0, _chai.expect)(eventHandler.calledWith('test'), 'event handler was passed correct arguments').to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/unit/services/notifications-test', ['sinon', 'ember-ajax/errors', 'ghost-admin/services/ajax', 'mocha', 'chai', 'ember-mocha'], function (_sinon, _errors, _ajax, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                    _arr.push(_s.value);\n\n                    if (i && _arr.length === i) break;\n                }\n            } catch (err) {\n                _d = true;\n                _e = err;\n            } finally {\n                try {\n                    if (!_n && _i[\"return\"]) _i[\"return\"]();\n                } finally {\n                    if (_d) throw _e;\n                }\n            }\n\n            return _arr;\n        }\n\n        return function (arr, i) {\n            if (Array.isArray(arr)) {\n                return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n                return sliceIterator(arr, i);\n            } else {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n        };\n    }();\n\n    (0, _mocha.describe)('Unit: Service: notifications', function () {\n        (0, _emberMocha.setupTest)('service:notifications', {\n            needs: ['service:upgradeStatus']\n        });\n\n        beforeEach(function () {\n            this.subject().set('content', Ember.A());\n            this.subject().set('delayedNotifications', Ember.A());\n        });\n\n        (0, _mocha.it)('filters alerts/notifications', function () {\n            var notifications = this.subject();\n\n            // wrapped in run-loop to enure alerts/notifications CPs are updated\n            Ember.run(function () {\n                notifications.showAlert('Alert');\n                notifications.showNotification('Notification');\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length')).to.equal(1);\n            (0, _chai.expect)(notifications.get('alerts.firstObject.message')).to.equal('Alert');\n\n            (0, _chai.expect)(notifications.get('notifications.length')).to.equal(1);\n            (0, _chai.expect)(notifications.get('notifications.firstObject.message')).to.equal('Notification');\n        });\n\n        (0, _mocha.it)('#handleNotification deals with DS.Notification notifications', function () {\n            var notifications = this.subject();\n            var notification = Ember.Object.create({ message: '<h1>Test</h1>', status: 'alert' });\n\n            notification.toJSON = function () {};\n\n            notifications.handleNotification(notification);\n\n            notification = notifications.get('alerts')[0];\n\n            // alerts received from the server should be marked html safe\n            (0, _chai.expect)(notification.get('message')).to.have.property('toHTML');\n        });\n\n        (0, _mocha.it)('#handleNotification defaults to notification if no status supplied', function () {\n            var notifications = this.subject();\n\n            notifications.handleNotification({ message: 'Test' }, false);\n\n            (0, _chai.expect)(notifications.get('content')).to.deep.include({ message: 'Test', status: 'notification' });\n        });\n\n        (0, _mocha.it)('#showAlert adds POJO alerts', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showAlert('Test Alert', { type: 'error' });\n            });\n\n            (0, _chai.expect)(notifications.get('alerts')).to.deep.include({ message: 'Test Alert', status: 'alert', type: 'error', key: undefined });\n        });\n\n        (0, _mocha.it)('#showAlert adds delayed notifications', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showNotification('Test Alert', { type: 'error', delayed: true });\n            });\n\n            (0, _chai.expect)(notifications.get('delayedNotifications')).to.deep.include({ message: 'Test Alert', status: 'notification', type: 'error', key: undefined });\n        });\n\n        // in order to cater for complex keys that are suitable for i18n\n        // we split on the second period and treat the resulting base as\n        // the key for duplicate checking\n        (0, _mocha.it)('#showAlert clears duplicates', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showAlert('Kept');\n                notifications.showAlert('Duplicate', { key: 'duplicate.key.fail' });\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length')).to.equal(2);\n\n            Ember.run(function () {\n                notifications.showAlert('Duplicate with new message', { key: 'duplicate.key.success' });\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length')).to.equal(2);\n            (0, _chai.expect)(notifications.get('alerts.lastObject.message')).to.equal('Duplicate with new message');\n        });\n\n        (0, _mocha.it)('#showNotification adds POJO notifications', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showNotification('Test Notification', { type: 'success' });\n            });\n\n            (0, _chai.expect)(notifications.get('notifications')).to.deep.include({ message: 'Test Notification', status: 'notification', type: 'success', key: undefined });\n        });\n\n        (0, _mocha.it)('#showNotification adds delayed notifications', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showNotification('Test Notification', { delayed: true });\n            });\n\n            (0, _chai.expect)(notifications.get('delayedNotifications')).to.deep.include({ message: 'Test Notification', status: 'notification', type: undefined, key: undefined });\n        });\n\n        (0, _mocha.it)('#showNotification clears existing notifications', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showNotification('First');\n                notifications.showNotification('Second');\n            });\n\n            (0, _chai.expect)(notifications.get('notifications.length')).to.equal(1);\n            (0, _chai.expect)(notifications.get('notifications')).to.deep.equal([{ message: 'Second', status: 'notification', type: undefined, key: undefined }]);\n        });\n\n        (0, _mocha.it)('#showNotification keeps existing notifications if doNotCloseNotifications option passed', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showNotification('First');\n                notifications.showNotification('Second', { doNotCloseNotifications: true });\n            });\n\n            (0, _chai.expect)(notifications.get('notifications.length')).to.equal(2);\n        });\n\n        (0, _mocha.it)('#showAPIError handles single json response error', function () {\n            var notifications = this.subject();\n            var error = new _errors.AjaxError({ errors: [{ message: 'Single error' }] });\n\n            Ember.run(function () {\n                notifications.showAPIError(error);\n            });\n\n            var alert = notifications.get('alerts.firstObject');\n            (0, _chai.expect)(Ember.get(alert, 'message')).to.equal('Single error');\n            (0, _chai.expect)(Ember.get(alert, 'status')).to.equal('alert');\n            (0, _chai.expect)(Ember.get(alert, 'type')).to.equal('error');\n            (0, _chai.expect)(Ember.get(alert, 'key')).to.equal('api-error');\n        });\n\n        (0, _mocha.it)('#showAPIError handles multiple json response errors', function () {\n            var notifications = this.subject();\n            var error = new _errors.AjaxError({ errors: [{ title: 'First error', message: 'First error message' }, { title: 'Second error', message: 'Second error message' }] });\n\n            Ember.run(function () {\n                notifications.showAPIError(error);\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length')).to.equal(2);\n\n            var _notifications$get = notifications.get('alerts'),\n                _notifications$get2 = _slicedToArray(_notifications$get, 2),\n                alert1 = _notifications$get2[0],\n                alert2 = _notifications$get2[1];\n\n            (0, _chai.expect)(alert1).to.deep.equal({ message: 'First error message', status: 'alert', type: 'error', key: 'api-error.first-error' });\n            (0, _chai.expect)(alert2).to.deep.equal({ message: 'Second error message', status: 'alert', type: 'error', key: 'api-error.second-error' });\n        });\n\n        (0, _mocha.it)('#showAPIError displays default error text if response has no error/message', function () {\n            var notifications = this.subject();\n            var resp = false;\n\n            Ember.run(function () {\n                notifications.showAPIError(resp);\n            });\n\n            (0, _chai.expect)(notifications.get('content').toArray()).to.deep.equal([{ message: 'There was a problem on the server, please try again.', status: 'alert', type: 'error', key: 'api-error' }]);\n\n            notifications.set('content', Ember.A());\n\n            Ember.run(function () {\n                notifications.showAPIError(resp, { defaultErrorText: 'Overridden default' });\n            });\n            (0, _chai.expect)(notifications.get('content').toArray()).to.deep.equal([{ message: 'Overridden default', status: 'alert', type: 'error', key: 'api-error' }]);\n        });\n\n        (0, _mocha.it)('#showAPIError sets correct key when passed a base key', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showAPIError('Test', { key: 'test.alert' });\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.firstObject.key')).to.equal('api-error.test.alert');\n        });\n\n        (0, _mocha.it)('#showAPIError sets correct key when not passed a key', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showAPIError('Test');\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.firstObject.key')).to.equal('api-error');\n        });\n\n        (0, _mocha.it)('#showAPIError parses default ember-ajax errors correctly', function () {\n            var notifications = this.subject();\n            var error = new _errors.InvalidError();\n\n            Ember.run(function () {\n                notifications.showAPIError(error);\n            });\n\n            var notification = notifications.get('alerts.firstObject');\n            (0, _chai.expect)(Ember.get(notification, 'message')).to.equal('Request was rejected because it was invalid');\n            (0, _chai.expect)(Ember.get(notification, 'status')).to.equal('alert');\n            (0, _chai.expect)(Ember.get(notification, 'type')).to.equal('error');\n            (0, _chai.expect)(Ember.get(notification, 'key')).to.equal('api-error');\n        });\n\n        (0, _mocha.it)('#showAPIError parses custom ember-ajax errors correctly', function () {\n            var notifications = this.subject();\n            var error = new _ajax.ServerUnreachableError();\n\n            Ember.run(function () {\n                notifications.showAPIError(error);\n            });\n\n            var notification = notifications.get('alerts.firstObject');\n            (0, _chai.expect)(Ember.get(notification, 'message')).to.equal('Server was unreachable');\n            (0, _chai.expect)(Ember.get(notification, 'status')).to.equal('alert');\n            (0, _chai.expect)(Ember.get(notification, 'type')).to.equal('error');\n            (0, _chai.expect)(Ember.get(notification, 'key')).to.equal('api-error');\n        });\n\n        (0, _mocha.it)('#displayDelayed moves delayed notifications into content', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showNotification('First', { delayed: true });\n                notifications.showNotification('Second', { delayed: true });\n                notifications.showNotification('Third', { delayed: false });\n                notifications.displayDelayed();\n            });\n\n            (0, _chai.expect)(notifications.get('notifications')).to.deep.equal([{ message: 'Third', status: 'notification', type: undefined, key: undefined }, { message: 'First', status: 'notification', type: undefined, key: undefined }, { message: 'Second', status: 'notification', type: undefined, key: undefined }]);\n        });\n\n        (0, _mocha.it)('#closeNotification removes POJO notifications', function () {\n            var notification = { message: 'Close test', status: 'notification' };\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.handleNotification(notification);\n            });\n\n            (0, _chai.expect)(notifications.get('notifications')).to.include(notification);\n\n            Ember.run(function () {\n                notifications.closeNotification(notification);\n            });\n\n            (0, _chai.expect)(notifications.get('notifications')).to.not.include(notification);\n        });\n\n        (0, _mocha.it)('#closeNotification removes and deletes DS.Notification records', function () {\n            var notification = Ember.Object.create({ message: 'Close test', status: 'alert' });\n            var notifications = this.subject();\n\n            notification.toJSON = function () {};\n            notification.deleteRecord = function () {};\n            _sinon.default.spy(notification, 'deleteRecord');\n            notification.save = function () {\n                return {\n                    finally: function _finally(callback) {\n                        return callback(notification);\n                    }\n                };\n            };\n            _sinon.default.spy(notification, 'save');\n\n            Ember.run(function () {\n                notifications.handleNotification(notification);\n            });\n\n            (0, _chai.expect)(notifications.get('alerts')).to.include(notification);\n\n            Ember.run(function () {\n                notifications.closeNotification(notification);\n            });\n\n            (0, _chai.expect)(notification.deleteRecord.calledOnce).to.be.true;\n            (0, _chai.expect)(notification.save.calledOnce).to.be.true;\n\n            (0, _chai.expect)(notifications.get('alerts')).to.not.include(notification);\n        });\n\n        (0, _mocha.it)('#closeNotifications only removes notifications', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showAlert('First alert');\n                notifications.showNotification('First notification');\n                notifications.showNotification('Second notification', { doNotCloseNotifications: true });\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length'), 'alerts count').to.equal(1);\n            (0, _chai.expect)(notifications.get('notifications.length'), 'notifications count').to.equal(2);\n\n            Ember.run(function () {\n                notifications.closeNotifications();\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length'), 'alerts count').to.equal(1);\n            (0, _chai.expect)(notifications.get('notifications.length'), 'notifications count').to.equal(0);\n        });\n\n        (0, _mocha.it)('#closeNotifications only closes notifications with specified key', function () {\n            var notifications = this.subject();\n\n            Ember.run(function () {\n                notifications.showAlert('First alert');\n                // using handleNotification as showNotification will auto-prune\n                // duplicates and keys will be removed if doNotCloseNotifications\n                // is true\n                notifications.handleNotification({ message: 'First notification', key: 'test.close', status: 'notification' });\n                notifications.handleNotification({ message: 'Second notification', key: 'test.keep', status: 'notification' });\n                notifications.handleNotification({ message: 'Third notification', key: 'test.close', status: 'notification' });\n            });\n\n            Ember.run(function () {\n                notifications.closeNotifications('test.close');\n            });\n\n            (0, _chai.expect)(notifications.get('notifications.length'), 'notifications count').to.equal(1);\n            (0, _chai.expect)(notifications.get('notifications.firstObject.message'), 'notification message').to.equal('Second notification');\n            (0, _chai.expect)(notifications.get('alerts.length'), 'alerts count').to.equal(1);\n        });\n\n        (0, _mocha.it)('#clearAll removes everything without deletion', function () {\n            var notifications = this.subject();\n            var notificationModel = Ember.Object.create({ message: 'model' });\n\n            notificationModel.toJSON = function () {};\n            notificationModel.deleteRecord = function () {};\n            _sinon.default.spy(notificationModel, 'deleteRecord');\n            notificationModel.save = function () {\n                return {\n                    finally: function _finally(callback) {\n                        return callback(notificationModel);\n                    }\n                };\n            };\n            _sinon.default.spy(notificationModel, 'save');\n\n            notifications.handleNotification(notificationModel);\n            notifications.handleNotification({ message: 'pojo' });\n\n            notifications.clearAll();\n\n            (0, _chai.expect)(notifications.get('content')).to.be.empty;\n            (0, _chai.expect)(notificationModel.deleteRecord.called).to.be.false;\n            (0, _chai.expect)(notificationModel.save.called).to.be.false;\n        });\n\n        (0, _mocha.it)('#closeAlerts only removes alerts', function () {\n            var notifications = this.subject();\n\n            notifications.showNotification('First notification');\n            notifications.showAlert('First alert');\n            notifications.showAlert('Second alert');\n\n            Ember.run(function () {\n                notifications.closeAlerts();\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length')).to.equal(0);\n            (0, _chai.expect)(notifications.get('notifications.length')).to.equal(1);\n        });\n\n        (0, _mocha.it)('#closeAlerts closes only alerts with specified key', function () {\n            var notifications = this.subject();\n\n            notifications.showNotification('First notification');\n            notifications.showAlert('First alert', { key: 'test.close' });\n            notifications.showAlert('Second alert', { key: 'test.keep' });\n            notifications.showAlert('Third alert', { key: 'test.close' });\n\n            Ember.run(function () {\n                notifications.closeAlerts('test.close');\n            });\n\n            (0, _chai.expect)(notifications.get('alerts.length')).to.equal(1);\n            (0, _chai.expect)(notifications.get('alerts.firstObject.message')).to.equal('Second alert');\n            (0, _chai.expect)(notifications.get('notifications.length')).to.equal(1);\n        });\n    });\n});","define('ghost-admin/tests/unit/services/ui-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Service: ui', function () {\n        (0, _emberMocha.setupTest)('service:ui', {\n            needs: ['service:dropdown', 'service:mediaQueries']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('exists', function () {\n            var service = this.subject();\n            (0, _chai.expect)(service).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/services/unsplash-test', ['pretender', 'ember-test-helpers/wait', 'mocha', 'ghost-admin/tests/helpers/adapter-error', 'chai', 'ember-mocha'], function (_pretender, _wait, _mocha, _adapterError, _chai, _emberMocha) {\n    'use strict';\n\n    function _asyncToGenerator(fn) {\n        return function () {\n            var gen = fn.apply(this, arguments);\n            return new Promise(function (resolve, reject) {\n                function step(key, arg) {\n                    try {\n                        var info = gen[key](arg);\n                        var value = info.value;\n                    } catch (error) {\n                        reject(error);\n                        return;\n                    }\n\n                    if (info.done) {\n                        resolve(value);\n                    } else {\n                        return Promise.resolve(value).then(function (value) {\n                            step(\"next\", value);\n                        }, function (err) {\n                            step(\"throw\", err);\n                        });\n                    }\n                }\n\n                return step(\"next\");\n            });\n        };\n    }\n\n    (0, _mocha.describe)('Unit: Service: unsplash', function () {\n        (0, _emberMocha.setupTest)('service:unsplash', {\n            needs: ['service:ajax', 'service:config', 'service:ghostPaths', 'service:settings']\n        });\n\n        var server = void 0;\n\n        beforeEach(function () {\n            server = new _pretender.default();\n        });\n\n        afterEach(function () {\n            server.shutdown();\n        });\n\n        (0, _mocha.it)('can load new');\n        (0, _mocha.it)('can load next page');\n\n        (0, _mocha.describe)('search', function () {\n            (0, _mocha.it)('sends search request');\n            (0, _mocha.it)('debounces query updates');\n            (0, _mocha.it)('can load next page of search results');\n            (0, _mocha.it)('clears photos when starting new search');\n            (0, _mocha.it)('loads new when query is cleared');\n        });\n\n        (0, _mocha.describe)('columns', function () {\n            (0, _mocha.it)('sorts photos into columns based on column height');\n            (0, _mocha.it)('can change column count');\n        });\n\n        (0, _mocha.describe)('error handling', function () {\n            (0, _mocha.it)('handles rate limit exceeded', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var service;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                server.get('https://api.unsplash.com/photos', function () {\n                                    return [403, { 'x-ratelimit-remaining': '0' }, 'Rate Limit Exceeded'];\n                                });\n\n                                service = this.subject();\n\n\n                                Ember.run(function () {\n                                    service.loadNextPage();\n                                });\n                                _context.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _adapterError.errorOverride)();\n                                (0, _chai.expect)(service.get('error')).to.have.string('Unsplash API rate limit reached');\n                                (0, _adapterError.errorReset)();\n\n                            case 8:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            })));\n\n            (0, _mocha.it)('handles json errors', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var service;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                server.get('https://api.unsplash.com/photos', function () {\n                                    return [500, { 'Content-Type': 'application/json' }, JSON.stringify({\n                                        errors: ['Unsplash API Error']\n                                    })];\n                                });\n\n                                service = this.subject();\n\n\n                                Ember.run(function () {\n                                    service.loadNextPage();\n                                });\n                                _context2.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _adapterError.errorOverride)();\n                                (0, _chai.expect)(service.get('error')).to.equal('Unsplash API Error');\n                                (0, _adapterError.errorReset)();\n\n                            case 8:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            })));\n\n            (0, _mocha.it)('handles text errors', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var service;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                server.get('https://api.unsplash.com/photos', function () {\n                                    return [500, { 'Content-Type': 'text/xml' }, 'Unsplash text error'];\n                                });\n\n                                service = this.subject();\n\n\n                                Ember.run(function () {\n                                    service.loadNextPage();\n                                });\n                                _context3.next = 5;\n                                return (0, _wait.default)();\n\n                            case 5:\n\n                                (0, _adapterError.errorOverride)();\n                                (0, _chai.expect)(service.get('error')).to.equal('Unsplash text error');\n                                (0, _adapterError.errorReset)();\n\n                            case 8:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            })));\n        });\n\n        (0, _mocha.describe)('isLoading', function () {\n            (0, _mocha.it)('is false by default');\n            (0, _mocha.it)('is true when loading new');\n            (0, _mocha.it)('is true when loading next page');\n            (0, _mocha.it)('is true when searching');\n            (0, _mocha.it)('returns to false when finished');\n        });\n    });\n});","define('ghost-admin/tests/unit/services/upgrade-status-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Service: upgrade-status', function () {\n        (0, _emberMocha.setupTest)('service:upgrade-status', {\n            // Specify the other units that are required for this test.\n            // needs: ['service:foo']\n            needs: ['service:notifications']\n        });\n\n        // Replace this with your real tests.\n        (0, _mocha.it)('exists', function () {\n            var service = this.subject();\n            (0, _chai.expect)(service).to.be.ok;\n        });\n    });\n});","define('ghost-admin/tests/unit/transforms/facebook-url-user-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Transform: facebook-url-user', function () {\n        (0, _emberMocha.setupTest)('transform:facebook-url-user', {});\n        (0, _mocha.it)('deserializes facebook url', function () {\n            var transform = this.subject();\n            var serialized = 'testuser';\n            var result = transform.deserialize(serialized);\n\n            (0, _chai.expect)(result).to.equal('https://www.facebook.com/testuser');\n        });\n\n        (0, _mocha.it)('serializes url to facebook username', function () {\n            var transform = this.subject();\n            var deserialized = 'https://www.facebook.com/testuser';\n            var result = transform.serialize(deserialized);\n\n            (0, _chai.expect)(result).to.equal('testuser');\n        });\n    });\n});","define('ghost-admin/tests/unit/transforms/json-string-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Transform: json-string', function () {\n        (0, _emberMocha.setupTest)('transform:json-string', {});\n\n        (0, _mocha.it)('serialises an Object to a JSON String', function () {\n            var transform = this.subject();\n            var obj = { one: 'one', two: 'two' };\n            (0, _chai.expect)(transform.serialize(obj)).to.equal(JSON.stringify(obj));\n        });\n\n        (0, _mocha.it)('deserialises a JSON String to an Object', function () {\n            var transform = this.subject();\n            var obj = { one: 'one', two: 'two' };\n            (0, _chai.expect)(transform.deserialize(JSON.stringify(obj))).to.deep.equal(obj);\n        });\n\n        (0, _mocha.it)('handles deserializing a blank string', function () {\n            var transform = this.subject();\n            (0, _chai.expect)(transform.deserialize('')).to.equal(null);\n        });\n    });\n});","define('ghost-admin/tests/unit/transforms/navigation-settings-test', ['ghost-admin/models/navigation-item', 'mocha', 'chai', 'ember-mocha'], function (_navigationItem, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Transform: navigation-settings', function () {\n        (0, _emberMocha.setupTest)('transform:navigation-settings', {});\n        (0, _mocha.it)('deserializes navigation json', function () {\n            var transform = this.subject();\n            var serialized = '[{\"label\":\"One\",\"url\":\"/one\"},{\"label\":\"Two\",\"url\":\"/two\"}]';\n            var result = transform.deserialize(serialized);\n\n            (0, _chai.expect)(result.length).to.equal(2);\n            (0, _chai.expect)(result[0]).to.be.instanceof(_navigationItem.default);\n            (0, _chai.expect)(result[0].get('label')).to.equal('One');\n            (0, _chai.expect)(result[0].get('url')).to.equal('/one');\n            (0, _chai.expect)(result[1]).to.be.instanceof(_navigationItem.default);\n            (0, _chai.expect)(result[1].get('label')).to.equal('Two');\n            (0, _chai.expect)(result[1].get('url')).to.equal('/two');\n        });\n\n        (0, _mocha.it)('serializes array of NavigationItems', function () {\n            var transform = this.subject();\n            var deserialized = Ember.A([_navigationItem.default.create({ label: 'One', url: '/one' }), _navigationItem.default.create({ label: 'Two', url: '/two' })]);\n            var result = transform.serialize(deserialized);\n\n            (0, _chai.expect)(result).to.equal('[{\"label\":\"One\",\"url\":\"/one\"},{\"label\":\"Two\",\"url\":\"/two\"}]');\n        });\n    });\n});","define('ghost-admin/tests/unit/transforms/slack-settings-test', ['ghost-admin/models/slack-integration', 'mocha', 'chai', 'ember-mocha'], function (_slackIntegration, _mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Transform: slack-settings', function () {\n        (0, _emberMocha.setupTest)('transform:slack-settings', {});\n        (0, _mocha.it)('deserializes settings json', function () {\n            var transform = this.subject();\n            var serialized = '[{\"url\":\"http://myblog.com/blogpost1\"}]';\n            var result = transform.deserialize(serialized);\n\n            (0, _chai.expect)(result.length).to.equal(1);\n            (0, _chai.expect)(result[0]).to.be.instanceof(_slackIntegration.default);\n            (0, _chai.expect)(result[0].get('url')).to.equal('http://myblog.com/blogpost1');\n        });\n\n        (0, _mocha.it)('serializes array of Slack settings', function () {\n            var transform = this.subject();\n            var deserialized = Ember.A([_slackIntegration.default.create({ url: 'http://myblog.com/blogpost1' })]);\n            var result = transform.serialize(deserialized);\n\n            (0, _chai.expect)(result).to.equal('[{\"url\":\"http://myblog.com/blogpost1\"}]');\n        });\n    });\n});","define('ghost-admin/tests/unit/transforms/twitter-url-user-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Transform: twitter-url-user', function () {\n        (0, _emberMocha.setupTest)('transform:twitter-url-user', {});\n        (0, _mocha.it)('deserializes twitter url', function () {\n            var transform = this.subject();\n            var serialized = '@testuser';\n            var result = transform.deserialize(serialized);\n\n            (0, _chai.expect)(result).to.equal('https://twitter.com/testuser');\n        });\n\n        (0, _mocha.it)('serializes url to twitter username', function () {\n            var transform = this.subject();\n            var deserialized = 'https://twitter.com/testuser';\n            var result = transform.serialize(deserialized);\n\n            (0, _chai.expect)(result).to.equal('@testuser');\n        });\n    });\n});","define('ghost-admin/tests/unit/transforms/unsplash-settings-test', ['mocha', 'chai', 'ember-mocha'], function (_mocha, _chai, _emberMocha) {\n    'use strict';\n\n    (0, _mocha.describe)('Unit: Transform: unsplash-settings', function () {\n        (0, _emberMocha.setupTest)('transform:unsplash-settings', {\n            // Specify the other units that are required for this test.\n            // needs: ['transform:foo']\n        });\n\n        (0, _mocha.it)('deserializes to default value when null', function () {\n            var serialized = null;\n            var result = this.subject().deserialize(serialized);\n            (0, _chai.expect)(result.isActive).to.be.true;\n        });\n\n        (0, _mocha.it)('deserializes to default value when blank string', function () {\n            var serialized = '';\n            var result = this.subject().deserialize(serialized);\n            (0, _chai.expect)(result.isActive).to.be.true;\n        });\n\n        (0, _mocha.it)('deserializes to default value when invalid JSON', function () {\n            var serialized = 'not JSON';\n            var result = this.subject().deserialize(serialized);\n            (0, _chai.expect)(result.isActive).to.be.true;\n        });\n\n        (0, _mocha.it)('deserializes valid JSON object', function () {\n            var serialized = '{\"isActive\":false}';\n            var result = this.subject().deserialize(serialized);\n            (0, _chai.expect)(result.isActive).to.be.false;\n        });\n\n        (0, _mocha.it)('serializes to JSON string', function () {\n            var deserialized = { isActive: false };\n            var result = this.subject().serialize(deserialized);\n            (0, _chai.expect)(result).to.equal('{\"isActive\":false}');\n        });\n\n        (0, _mocha.it)('serializes to default value when blank', function () {\n            var deserialized = '';\n            var result = this.subject().serialize(deserialized);\n            (0, _chai.expect)(result).to.equal('{\"isActive\":true}');\n        });\n    });\n});","define('ghost-admin/tests/unit/utils/ghost-paths-test', ['ghost-admin/utils/ghost-paths'], function (_ghostPaths) {\n    'use strict';\n\n    describe('Unit: Util: ghost-paths', function () {\n        describe('join', function () {\n            var join = (0, _ghostPaths.default)().url.join;\n\n\n            it('should join two or more paths, normalizing slashes', function () {\n                var path = void 0;\n\n                path = join('/one/', '/two/');\n                expect(path).to.equal('/one/two/');\n\n                path = join('/one', '/two/');\n                expect(path).to.equal('/one/two/');\n\n                path = join('/one/', 'two/');\n                expect(path).to.equal('/one/two/');\n\n                path = join('/one/', 'two/', '/three/');\n                expect(path).to.equal('/one/two/three/');\n\n                path = join('/one/', 'two', 'three/');\n                expect(path).to.equal('/one/two/three/');\n            });\n\n            it('should not change the slash at the beginning', function () {\n                var path = void 0;\n\n                path = join('one/');\n                expect(path).to.equal('one/');\n                path = join('one/', 'two');\n                expect(path).to.equal('one/two/');\n                path = join('/one/', 'two');\n                expect(path).to.equal('/one/two/');\n                path = join('one/', 'two', 'three');\n                expect(path).to.equal('one/two/three/');\n                path = join('/one/', 'two', 'three');\n                expect(path).to.equal('/one/two/three/');\n            });\n\n            it('should always return a slash at the end', function () {\n                var path = void 0;\n\n                path = join();\n                expect(path).to.equal('/');\n                path = join('');\n                expect(path).to.equal('/');\n                path = join('one');\n                expect(path).to.equal('one/');\n                path = join('one/');\n                expect(path).to.equal('one/');\n                path = join('one', 'two');\n                expect(path).to.equal('one/two/');\n                path = join('one', 'two/');\n                expect(path).to.equal('one/two/');\n            });\n        });\n    });\n});","define('ghost-admin/tests/unit/validators/nav-item-test', ['ghost-admin/models/navigation-item', 'ghost-admin/validators/nav-item', 'mocha', 'chai'], function (_navigationItem, _navItem, _mocha, _chai) {\n    'use strict';\n\n    var testInvalidUrl = function testInvalidUrl(url) {\n        var navItem = _navigationItem.default.create({ url: url });\n\n        _navItem.default.check(navItem, 'url');\n\n        (0, _chai.expect)(_navItem.default.get('passed'), '\"' + url + '\" passed').to.be.false;\n        (0, _chai.expect)(navItem.get('errors').errorsFor('url').toArray()).to.deep.equal([{\n            attribute: 'url',\n            message: 'You must specify a valid URL or relative path'\n        }]);\n        (0, _chai.expect)(navItem.get('hasValidated')).to.include('url');\n    };\n\n    var testValidUrl = function testValidUrl(url) {\n        var navItem = _navigationItem.default.create({ url: url });\n\n        _navItem.default.check(navItem, 'url');\n\n        (0, _chai.expect)(_navItem.default.get('passed'), '\"' + url + '\" failed').to.be.true;\n        (0, _chai.expect)(navItem.get('hasValidated')).to.include('url');\n    };\n\n    (0, _mocha.describe)('Unit: Validator: nav-item', function () {\n        (0, _mocha.it)('requires label presence', function () {\n            var navItem = _navigationItem.default.create();\n\n            _navItem.default.check(navItem, 'label');\n\n            (0, _chai.expect)(_navItem.default.get('passed')).to.be.false;\n            (0, _chai.expect)(navItem.get('errors').errorsFor('label').toArray()).to.deep.equal([{\n                attribute: 'label',\n                message: 'You must specify a label'\n            }]);\n            (0, _chai.expect)(navItem.get('hasValidated')).to.include('label');\n        });\n\n        (0, _mocha.it)('requires url presence', function () {\n            var navItem = _navigationItem.default.create();\n\n            _navItem.default.check(navItem, 'url');\n\n            (0, _chai.expect)(_navItem.default.get('passed')).to.be.false;\n            (0, _chai.expect)(navItem.get('errors').errorsFor('url').toArray()).to.deep.equal([{\n                attribute: 'url',\n                message: 'You must specify a URL or relative path'\n            }]);\n            (0, _chai.expect)(navItem.get('hasValidated')).to.include('url');\n        });\n\n        (0, _mocha.it)('fails on invalid url values', function () {\n            var invalidUrls = ['test@example.com', '/has spaces', 'no-leading-slash', 'http://example.com/with spaces'];\n\n            invalidUrls.forEach(function (url) {\n                testInvalidUrl(url);\n            });\n        });\n\n        (0, _mocha.it)('passes on valid url values', function () {\n            var validUrls = ['http://localhost:2368', 'http://localhost:2368/some-path', 'https://localhost:2368/some-path', '//localhost:2368/some-path', 'http://localhost:2368/#test', 'http://localhost:2368/?query=test&another=example', 'http://localhost:2368/?query=test&another=example#test', 'tel:01234-567890', 'mailto:test@example.com', 'http://some:user@example.com:1234', '/relative/path'];\n\n            validUrls.forEach(function (url) {\n                testValidUrl(url);\n            });\n        });\n\n        (0, _mocha.it)('validates url and label by default', function () {\n            var navItem = _navigationItem.default.create();\n\n            _navItem.default.check(navItem);\n\n            (0, _chai.expect)(navItem.get('errors').errorsFor('label')).to.not.be.empty;\n            (0, _chai.expect)(navItem.get('errors').errorsFor('url')).to.not.be.empty;\n            (0, _chai.expect)(_navItem.default.get('passed')).to.be.false;\n        });\n    });\n});","define('ghost-admin/tests/unit/validators/slack-integration-test', ['ghost-admin/models/slack-integration', 'ghost-admin/validators/slack-integration', 'mocha', 'chai'], function (_slackIntegration, _slackIntegration2, _mocha, _chai) {\n    'use strict';\n\n    var testInvalidUrl = function testInvalidUrl(url) {\n        var slackObject = _slackIntegration.default.create({ url: url });\n\n        _slackIntegration2.default.check(slackObject, 'url');\n\n        (0, _chai.expect)(_slackIntegration2.default.get('passed'), '\"' + url + '\" passed').to.be.false;\n        (0, _chai.expect)(slackObject.get('errors').errorsFor('url').toArray()).to.deep.equal([{\n            attribute: 'url',\n            message: 'The URL must be in a format like https://hooks.slack.com/services/<your personal key>'\n        }]);\n        (0, _chai.expect)(slackObject.get('hasValidated')).to.include('url');\n    };\n\n    var testValidUrl = function testValidUrl(url) {\n        var slackObject = _slackIntegration.default.create({ url: url });\n\n        _slackIntegration2.default.check(slackObject, 'url');\n\n        (0, _chai.expect)(_slackIntegration2.default.get('passed'), '\"' + url + '\" failed').to.be.true;\n        (0, _chai.expect)(slackObject.get('hasValidated')).to.include('url');\n    };\n\n    (0, _mocha.describe)('Unit: Validator: slack-integration', function () {\n        (0, _mocha.it)('fails on invalid url values', function () {\n            var invalidUrls = ['test@example.com', '/has spaces', 'no-leading-slash', 'http://example.com/with spaces'];\n\n            invalidUrls.forEach(function (url) {\n                testInvalidUrl(url);\n            });\n        });\n\n        (0, _mocha.it)('passes on valid url values', function () {\n            var validUrls = ['https://hooks.slack.com/services/;alskdjf', 'https://hooks.slack.com/services/123445678', 'https://hooks.slack.com/services/some_webhook', 'https://discordapp.com/api/webhooks/380692408364433418/mGLHSRyEoUaTvY91Te16WOT8Obn-BrJoiTNoxeUqhb6klKERb9xaZkUBYC5AeduwYCCy/slack'];\n\n            validUrls.forEach(function (url) {\n                testValidUrl(url);\n            });\n        });\n\n        (0, _mocha.it)('validates url by default', function () {\n            var slackObject = _slackIntegration.default.create();\n\n            _slackIntegration2.default.check(slackObject);\n\n            (0, _chai.expect)(slackObject.get('errors').errorsFor('url')).to.be.empty;\n            (0, _chai.expect)(_slackIntegration2.default.get('passed')).to.be.true;\n        });\n    });\n});","define('ghost-admin/tests/unit/validators/subscriber-test', ['ghost-admin/mixins/validation-engine', 'mocha', 'chai'], function (_validationEngine, _mocha, _chai) {\n    'use strict';\n\n    var Subscriber = Ember.Object.extend(_validationEngine.default, {\n        validationType: 'subscriber',\n\n        email: null\n    });\n\n    (0, _mocha.describe)('Unit: Validator: subscriber', function () {\n        (0, _mocha.it)('validates email by default', function () {\n            var subscriber = Subscriber.create({});\n            var properties = subscriber.get('validators.subscriber.properties');\n\n            (0, _chai.expect)(properties, 'properties').to.include('email');\n        });\n\n        (0, _mocha.it)('passes with a valid email', function () {\n            var subscriber = Subscriber.create({ email: 'test@example.com' });\n            var passed = false;\n\n            Ember.run(function () {\n                subscriber.validate({ property: 'email' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            (0, _chai.expect)(passed, 'passed').to.be.true;\n            (0, _chai.expect)(subscriber.get('hasValidated'), 'hasValidated').to.include('email');\n        });\n\n        (0, _mocha.it)('validates email presence', function () {\n            var subscriber = Subscriber.create({});\n            var passed = false;\n\n            Ember.run(function () {\n                subscriber.validate({ property: 'email' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            var emailErrors = subscriber.get('errors').errorsFor('email').get(0);\n            (0, _chai.expect)(emailErrors.attribute, 'errors.email.attribute').to.equal('email');\n            (0, _chai.expect)(emailErrors.message, 'errors.email.message').to.equal('Please enter an email.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(subscriber.get('hasValidated'), 'hasValidated').to.include('email');\n        });\n\n        (0, _mocha.it)('validates email', function () {\n            var subscriber = Subscriber.create({ email: 'foo' });\n            var passed = false;\n\n            Ember.run(function () {\n                subscriber.validate({ property: 'email' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            var emailErrors = subscriber.get('errors').errorsFor('email').get(0);\n            (0, _chai.expect)(emailErrors.attribute, 'errors.email.attribute').to.equal('email');\n            (0, _chai.expect)(emailErrors.message, 'errors.email.message').to.equal('Invalid email.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(subscriber.get('hasValidated'), 'hasValidated').to.include('email');\n        });\n    });\n});","define('ghost-admin/tests/unit/validators/tag-settings-test', ['ghost-admin/mixins/validation-engine', 'mocha', 'chai'], function (_validationEngine, _mocha, _chai) {\n    'use strict';\n\n    // import validator from 'ghost-admin/validators/tag-settings';\n    var Tag = Ember.Object.extend(_validationEngine.default, {\n        validationType: 'tag',\n\n        name: null,\n        description: null,\n        metaTitle: null,\n        metaDescription: null\n    });\n\n    // TODO: These tests have way too much duplication, consider creating test\n    // helpers for validations\n\n    // TODO: Move testing of validation-engine behaviour into validation-engine-test\n    // and replace these tests with specific validator tests\n\n    (0, _mocha.describe)('Unit: Validator: tag-settings', function () {\n        (0, _mocha.it)('validates all fields by default', function () {\n            var tag = Tag.create({});\n            var properties = tag.get('validators.tag.properties');\n\n            // TODO: This is checking implementation details rather than expected\n            // behaviour. Replace once we have consistent behaviour (see below)\n            (0, _chai.expect)(properties, 'properties').to.include('name');\n            (0, _chai.expect)(properties, 'properties').to.include('slug');\n            (0, _chai.expect)(properties, 'properties').to.include('description');\n            (0, _chai.expect)(properties, 'properties').to.include('metaTitle');\n            (0, _chai.expect)(properties, 'properties').to.include('metaDescription');\n\n            // TODO: .validate (and  by extension .save) doesn't currently affect\n            // .hasValidated - it would be good to make this consistent.\n            // The following tests currently fail:\n            //\n            // run(() => {\n            //     tag.validate();\n            // });\n            //\n            // expect(tag.get('hasValidated'), 'hasValidated').to.include('name');\n            // expect(tag.get('hasValidated'), 'hasValidated').to.include('description');\n            // expect(tag.get('hasValidated'), 'hasValidated').to.include('metaTitle');\n            // expect(tag.get('hasValidated'), 'hasValidated').to.include('metaDescription');\n        });\n\n        (0, _mocha.it)('passes with valid name', function () {\n            // longest valid name\n            var tag = Tag.create({ name: new Array(192).join('x') });\n            var passed = false;\n\n            (0, _chai.expect)(tag.get('name').length, 'name length').to.equal(191);\n\n            Ember.run(function () {\n                tag.validate({ property: 'name' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            (0, _chai.expect)(passed, 'passed').to.be.true;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('name');\n        });\n\n        (0, _mocha.it)('validates name presence', function () {\n            var tag = Tag.create();\n            var passed = false;\n            var nameErrors = void 0;\n\n            // TODO: validator is currently a singleton meaning state leaks\n            // between all objects that use it. Each object should either\n            // get it's own validator instance or validator objects should not\n            // contain state. The following currently fails:\n            //\n            // let validator = tag.get('validators.tag')\n            // expect(validator.get('passed'), 'passed').to.be.false;\n\n            Ember.run(function () {\n                tag.validate({ property: 'name' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            nameErrors = tag.get('errors').errorsFor('name').get(0);\n            (0, _chai.expect)(nameErrors.attribute, 'errors.name.attribute').to.equal('name');\n            (0, _chai.expect)(nameErrors.message, 'errors.name.message').to.equal('You must specify a name for the tag.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('name');\n        });\n\n        (0, _mocha.it)('validates names starting with a comma', function () {\n            var tag = Tag.create({ name: ',test' });\n            var passed = false;\n            var nameErrors = void 0;\n\n            Ember.run(function () {\n                tag.validate({ property: 'name' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            nameErrors = tag.get('errors').errorsFor('name').get(0);\n            (0, _chai.expect)(nameErrors.attribute, 'errors.name.attribute').to.equal('name');\n            (0, _chai.expect)(nameErrors.message, 'errors.name.message').to.equal('Tag names can\\'t start with commas.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('name');\n        });\n\n        (0, _mocha.it)('validates name length', function () {\n            // shortest invalid name\n            var tag = Tag.create({ name: new Array(193).join('x') });\n            var passed = false;\n            var nameErrors = void 0;\n\n            (0, _chai.expect)(tag.get('name').length, 'name length').to.equal(192);\n\n            Ember.run(function () {\n                tag.validate({ property: 'name' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            nameErrors = tag.get('errors').errorsFor('name')[0];\n            (0, _chai.expect)(nameErrors.attribute, 'errors.name.attribute').to.equal('name');\n            (0, _chai.expect)(nameErrors.message, 'errors.name.message').to.equal('Tag names cannot be longer than 191 characters.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('name');\n        });\n\n        (0, _mocha.it)('passes with valid slug', function () {\n            // longest valid slug\n            var tag = Tag.create({ slug: new Array(192).join('x') });\n            var passed = false;\n\n            (0, _chai.expect)(tag.get('slug').length, 'slug length').to.equal(191);\n\n            Ember.run(function () {\n                tag.validate({ property: 'slug' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            (0, _chai.expect)(passed, 'passed').to.be.true;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('slug');\n        });\n\n        (0, _mocha.it)('validates slug length', function () {\n            // shortest invalid slug\n            var tag = Tag.create({ slug: new Array(193).join('x') });\n            var passed = false;\n            var slugErrors = void 0;\n\n            (0, _chai.expect)(tag.get('slug').length, 'slug length').to.equal(192);\n\n            Ember.run(function () {\n                tag.validate({ property: 'slug' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            slugErrors = tag.get('errors').errorsFor('slug')[0];\n            (0, _chai.expect)(slugErrors.attribute, 'errors.slug.attribute').to.equal('slug');\n            (0, _chai.expect)(slugErrors.message, 'errors.slug.message').to.equal('URL cannot be longer than 191 characters.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('slug');\n        });\n\n        (0, _mocha.it)('passes with a valid description', function () {\n            // longest valid description\n            var tag = Tag.create({ description: new Array(501).join('x') });\n            var passed = false;\n\n            (0, _chai.expect)(tag.get('description').length, 'description length').to.equal(500);\n\n            Ember.run(function () {\n                tag.validate({ property: 'description' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            (0, _chai.expect)(passed, 'passed').to.be.true;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('description');\n        });\n\n        (0, _mocha.it)('validates description length', function () {\n            // shortest invalid description\n            var tag = Tag.create({ description: new Array(502).join('x') });\n            var passed = false;\n            var errors = void 0;\n\n            (0, _chai.expect)(tag.get('description').length, 'description length').to.equal(501);\n\n            Ember.run(function () {\n                tag.validate({ property: 'description' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            errors = tag.get('errors').errorsFor('description')[0];\n            (0, _chai.expect)(errors.attribute, 'errors.description.attribute').to.equal('description');\n            (0, _chai.expect)(errors.message, 'errors.description.message').to.equal('Description cannot be longer than 500 characters.');\n\n            // TODO: tag.errors appears to be a singleton and previous errors are\n            // not cleared despite creating a new tag object\n            //\n            // console.log(JSON.stringify(tag.get('errors')));\n            // expect(tag.get('errors.length')).to.equal(1);\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('description');\n        });\n\n        // TODO: we have both metaTitle and metaTitle property names on the\n        // model/validator respectively - this should be standardised\n        (0, _mocha.it)('passes with a valid metaTitle', function () {\n            // longest valid metaTitle\n            var tag = Tag.create({ metaTitle: new Array(301).join('x') });\n            var passed = false;\n\n            (0, _chai.expect)(tag.get('metaTitle').length, 'metaTitle length').to.equal(300);\n\n            Ember.run(function () {\n                tag.validate({ property: 'metaTitle' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            (0, _chai.expect)(passed, 'passed').to.be.true;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('metaTitle');\n        });\n\n        (0, _mocha.it)('validates metaTitle length', function () {\n            // shortest invalid metaTitle\n            var tag = Tag.create({ metaTitle: new Array(302).join('x') });\n            var passed = false;\n            var errors = void 0;\n\n            (0, _chai.expect)(tag.get('metaTitle').length, 'metaTitle length').to.equal(301);\n\n            Ember.run(function () {\n                tag.validate({ property: 'metaTitle' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            errors = tag.get('errors').errorsFor('metaTitle')[0];\n            (0, _chai.expect)(errors.attribute, 'errors.metaTitle.attribute').to.equal('metaTitle');\n            (0, _chai.expect)(errors.message, 'errors.metaTitle.message').to.equal('Meta Title cannot be longer than 300 characters.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('metaTitle');\n        });\n\n        // TODO: we have both metaDescription and metaDescription property names on\n        // the model/validator respectively - this should be standardised\n        (0, _mocha.it)('passes with a valid metaDescription', function () {\n            // longest valid description\n            var tag = Tag.create({ metaDescription: new Array(501).join('x') });\n            var passed = false;\n\n            (0, _chai.expect)(tag.get('metaDescription').length, 'metaDescription length').to.equal(500);\n\n            Ember.run(function () {\n                tag.validate({ property: 'metaDescription' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            (0, _chai.expect)(passed, 'passed').to.be.true;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('metaDescription');\n        });\n\n        (0, _mocha.it)('validates metaDescription length', function () {\n            // shortest invalid metaDescription\n            var tag = Tag.create({ metaDescription: new Array(502).join('x') });\n            var passed = false;\n            var errors = void 0;\n\n            (0, _chai.expect)(tag.get('metaDescription').length, 'metaDescription length').to.equal(501);\n\n            Ember.run(function () {\n                tag.validate({ property: 'metaDescription' }).then(function () {\n                    passed = true;\n                });\n            });\n\n            errors = tag.get('errors').errorsFor('metaDescription')[0];\n            (0, _chai.expect)(errors.attribute, 'errors.metaDescription.attribute').to.equal('metaDescription');\n            (0, _chai.expect)(errors.message, 'errors.metaDescription.message').to.equal('Meta Description cannot be longer than 500 characters.');\n\n            (0, _chai.expect)(passed, 'passed').to.be.false;\n            (0, _chai.expect)(tag.get('hasValidated'), 'hasValidated').to.include('metaDescription');\n        });\n    });\n});","define('ghost-admin/tests/utils', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var editorShim = exports.editorShim = {\n        range: {\n            head: {\n                section: {\n                    renderNode: {\n                        _element: {\n                            tagName: 'P'\n                        }\n                    },\n                    isBlank: false\n                }\n            }\n        },\n        cursorDidChange: function cursorDidChange() {}\n    };\n});","require('ghost-admin/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzbtixhpjuvnlrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvlwxlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdrjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvpvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpkpmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChlQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzezBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzldlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzhyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChtlTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxzxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACblHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;","file":"tests.js"}